<Window x:Class="ERP.Payroll.Employee_Bonus.AsignEmployeeForBonusWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="AsignEmployeeForBonusWindow" Height="609.254" Width="870.836" AllowsTransparency="True" WindowStyle="None" Background="{x:Null}" Foreground="{x:Null}" MouseLeftButtonDown="Window_MouseLeftButtonDown">
    <Window.Resources>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="2.662,2.339,3.247,2.254" Source="/ERP;component/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="BorderStyle3" TargetType="{x:Type Border}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="#FEAEAEAE" Offset="1"/>
                        <GradientStop Color="#FE5B5B5B" Offset="0"/>
                        <GradientStop Color="#FE868686" Offset="0"/>
                        <GradientStop Color="#FE888888" Offset="0"/>
                        <GradientStop Color="#FE9D9D9D" Offset="0"/>
                        <GradientStop Color="#FEA5A5A5" Offset="0"/>
                        <GradientStop Color="#FEA9A9A9" Offset="0"/>
                        <GradientStop Color="#FEABABAB" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#FFDDF3D2"/>
            <Setter Property="CornerRadius" Value="2"/>
        </Style>
        <Style x:Key="TextBoxStyle5" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF68839A" CornerRadius="3" Background="White" Padding="2">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="White" Margin="0,0,21.333,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid HorizontalAlignment="Center" Width="733" Height="551" VerticalAlignment="Center" Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Rectangle Fill="#FF2B3D5D" HorizontalAlignment="Left" Height="583" Margin="-17,-16" RadiusY="4" RadiusX="4" Stroke="#7E191818" StrokeThickness="16" VerticalAlignment="Top" Width="767"/>

        <Rectangle Margin="0,32,0,500">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF6A6A6A" Offset="0"/>
                    <GradientStop Color="#FF6A6A6A" Offset="0.989"/>
                    <GradientStop Color="#FF82818F" Offset="0.521"/>
                    <GradientStop Color="#FF82818F" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Rectangle Margin="0,0,0,519">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF18233A" Offset="0"/>
                    <GradientStop Color="#FF18233A" Offset="1"/>
                    <GradientStop Color="#FF4C5691" Offset="0.518"/>
                    <GradientStop Color="#FF4C5691" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Label Content="Bonus Period" HorizontalAlignment="Left" Margin="403,29,0,0" VerticalAlignment="Top" Width="83" Foreground="White"/>
        <Button x:Name="button2" Content="Button" Margin="701,5,8,525" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" Click="button2_Click" >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <ComboBox TabIndex="1" ItemsSource="{Binding BonusPeriod}" SelectedItem="{Binding CurrentBonusPeriod}" DisplayMemberPath="Bonus_Period_Name" HorizontalAlignment="Left" Margin="491,30,0,0" VerticalAlignment="Top" Width="168"/>
        <TabControl HorizontalAlignment="Left" Height="500" Margin="0,51,0,0" VerticalAlignment="Top" Width="733">
            <TabItem Header="New Record">
                <TabItem.Background>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#FFF0F0F0" Offset="0"/>
                        <GradientStop Color="#FF5D76BF" Offset="1"/>
                    </LinearGradientBrush>
                </TabItem.Background>
                <Grid Background="#FF2B3D5D">
                    <Button TabIndex="2" Command="{Binding SelectEmployeesButtons}" Content="Select Employees" HorizontalAlignment="Left" Margin="11,10,0,0" VerticalAlignment="Top" Width="126"/>
                    <DataGrid TabIndex="3" ItemsSource="{Binding NewEmployeesForBonus}" IsReadOnly="True" AutoGenerateColumns="False" HorizontalAlignment="Left" Margin="11,36,0,0" VerticalAlignment="Top" Height="303" Width="705">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Emp No" Width="*" Binding="{Binding emp_id}" />
                            <DataGridTextColumn Header="First Name" Width="*" Binding="{Binding first_name}"/>
                            <DataGridTextColumn Header="Last Name" Width="*" Binding="{Binding surname}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <RadioButton TabIndex="4" IsChecked="{Binding FromBasicSalaryPercentage}" Content="From Basic Salary Percentage" HorizontalAlignment="Left" Margin="30,363,0,0" VerticalAlignment="Top" Foreground="White"/>
                    <RadioButton TabIndex="5" IsChecked="{Binding FromStaticAmount}" Content="From Static Amount" HorizontalAlignment="Left" Margin="224,363,0,0" VerticalAlignment="Top" Foreground="White"/>
                    <Label Content="Bonus Percntage" HorizontalAlignment="Left" Margin="30,391,0,0" VerticalAlignment="Top" Foreground="White"/>
                    <TextBox IsEnabled="{Binding FromBasicSalaryPercentage}" TabIndex="6" Text="{Binding Percentage}" HorizontalAlignment="Left" Height="23" Margin="149,395,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
                    <Label Content="Bonus Amount" HorizontalAlignment="Left" Margin="281,390,0,0" VerticalAlignment="Top" Foreground="White"/>
                    <TextBox TabIndex="7" IsEnabled="{Binding FromStaticAmount}" HorizontalAlignment="Left" Height="23" Margin="400,394,0,0" TextWrapping="Wrap" Text="{Binding Amount}" VerticalAlignment="Top" Width="120"/>
                    <Button TabIndex="9" Command="{Binding NewButton}" Content="New" HorizontalAlignment="Left" Margin="538,442,0,0" VerticalAlignment="Top" Width="74"/>
                    <Button TabIndex="10" Command="{Binding SaveButton}" Content="Save" HorizontalAlignment="Left" Margin="624,442,0,0" VerticalAlignment="Top" Width="76"/>
                    <GroupBox Header="Bonus Type" HorizontalAlignment="Left" Margin="20,344,0,0" VerticalAlignment="Top" Height="88" Width="525" Foreground="White"/>
                </Grid>
            </TabItem>
            <TabItem Header="Already Asigned Employees">
                <TabItem.Background>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#FFF0F0F0" Offset="0"/>
                        <GradientStop Color="#FF5D76BF" Offset="1"/>
                    </LinearGradientBrush>
                </TabItem.Background>
                <Grid Background="#FF273253">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <DataGrid TabIndex="8" IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding AlreadyAsignedEmployeesForBonus}" SelectedItem="{Binding CurrentAlreadyAsignedEmployeeForBonus}" HorizontalAlignment="Left" Margin="10,38,0,0" VerticalAlignment="Top" Height="268" Width="705">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="employee id" Width="*" Binding="{Binding emp_id}"/>
                            <DataGridTextColumn Header="First Name" Width="*" Binding="{Binding first_name}"/>
                            <DataGridTextColumn Header="Last Name" Width="*" Binding="{Binding surname}"/>
                            <DataGridTextColumn Header="Asigned Date" Width="*" Binding="{Binding AsignedDate}"/>
                            <DataGridTextColumn Header="Bonus Amount" Width="*" Binding="{Binding BonusAmount}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Label Content="Already Asigned Employees To Selected Period" HorizontalAlignment="Left" Margin="10,4,0,0" VerticalAlignment="Top" Foreground="White" Height="29"/>
                    <GroupBox Header="Bonus Type" HorizontalAlignment="Left" Margin="19,322,0,0" VerticalAlignment="Top" Height="88" Width="525" Foreground="White"/>
                    <Grid Background="#FF2B3D5D">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <DataGrid TabIndex="3" ItemsSource="{Binding AlreadyAsignedEmployeesForBonus}" SelectedItem="{Binding CurrentAlreadyAsignedEmployeeForBonus}" IsReadOnly="True" AutoGenerateColumns="False" HorizontalAlignment="Left" Margin="11,36,0,0" VerticalAlignment="Top" Height="303" Width="705">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Emp No" Width="*" Binding="{Binding emp_id}" />
                                <DataGridTextColumn Header="First Name" Width="*" Binding="{Binding first_name}"/>
                                <DataGridTextColumn Header="Last Name" Width="*" Binding="{Binding surname}"/>
                                <DataGridTextColumn Header="Is Processed" Width="*" Binding="{Binding Is_Processed}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <RadioButton TabIndex="4" IsEnabled="{Binding UpdateFalse}" IsChecked="{Binding CurrentAlreadyAsignedEmployeeForBonus.FromBasicSalaryPercentage}" Content="From Basic Salary Percentage" HorizontalAlignment="Left" Margin="30,363,0,0" VerticalAlignment="Top" Foreground="White"/>
                        <RadioButton TabIndex="5" IsEnabled="{Binding UpdateFalse}" IsChecked="{Binding CurrentAlreadyAsignedEmployeeForBonus.FromStaticAmount}" Content="From Static Amount" HorizontalAlignment="Left" Margin="224,363,0,0" VerticalAlignment="Top" Foreground="White"/>
                        <Label Content="Bonus Percntage" HorizontalAlignment="Left" Margin="30,391,0,0" VerticalAlignment="Top" Foreground="White"/>
                        <TextBox TabIndex="6" IsEnabled="{Binding IsBonusPercentageEnabled}" HorizontalAlignment="Left" Height="23" Margin="149,395,0,0" TextWrapping="Wrap" Text="{Binding CurrentAlreadyAsignedEmployeeForBonus.BonusPercentage}" VerticalAlignment="Top" Width="120"/>
                        <Label Content="Bonus Amount" HorizontalAlignment="Left" Margin="281,390,0,0" VerticalAlignment="Top" Foreground="White"/>
                        <TextBox TabIndex="7" IsEnabled="{Binding IsBonusAmountEnabled}" HorizontalAlignment="Left" Height="23" Margin="400,394,0,0" TextWrapping="Wrap" Text="{Binding CurrentAlreadyAsignedEmployeeForBonus.BonusAmount, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="120"/>
                        <Button TabIndex="9" Command="{Binding NewButton}" Content="New" HorizontalAlignment="Left" Margin="467,442,0,0" VerticalAlignment="Top" Width="75"/>
                        <Button TabIndex="10" Command="{Binding UpdateButton}" Content="Update" HorizontalAlignment="Left" Margin="554,442,0,0" VerticalAlignment="Top" Width="75"/>
                        <Button TabIndex="11" Command="{Binding DeleteButton}" Content="Delete" HorizontalAlignment="Left" Margin="641,442,0,0" VerticalAlignment="Top" Width="75"/>
                        <GroupBox Header="Bonus Type" HorizontalAlignment="Left" Margin="20,344,0,0" VerticalAlignment="Top" Height="88" Width="525" Foreground="White"/>
                        <Label Content="Search By Emp No" Margin="482,8,133,438" Foreground="White" FontStyle="Italic" FontWeight="Bold"/>
                        <TextBox TabIndex="3" x:Name="searchbox" TextWrapping="Wrap" Text="{Binding Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle5}" Margin="600,7,11,441" BorderBrush="#7F000000" SelectionBrush="#FF2B5668" >
                            <TextBox.Effect>
                                <DropShadowEffect />
                            </TextBox.Effect>
                        </TextBox>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
