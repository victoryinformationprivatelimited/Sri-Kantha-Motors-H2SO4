<UserControl x:Class="ERP.Payroll.RI_Allowance.EmployeeAllowanceUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" Height="492.72" Width="1017.298">
    <UserControl.Resources>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="2.662,2.339,3.247,2.254" Source="/ERP;component/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="BorderStyle3" TargetType="{x:Type Border}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="#FEAEAEAE" Offset="1"/>
                        <GradientStop Color="#FE5B5B5B" Offset="0"/>
                        <GradientStop Color="#FE868686" Offset="0"/>
                        <GradientStop Color="#FE888888" Offset="0"/>
                        <GradientStop Color="#FE9D9D9D" Offset="0"/>
                        <GradientStop Color="#FEA5A5A5" Offset="0"/>
                        <GradientStop Color="#FEA9A9A9" Offset="0"/>
                        <GradientStop Color="#FEABABAB" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#FFDDF3D2"/>
            <Setter Property="CornerRadius" Value="2"/>
        </Style>
        <Style x:Key="TextBoxStyle6" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF68839A" CornerRadius="3" Background="White" Padding="2">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="White" Margin="0,0,-3,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle8" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<ControlTemplate.Resources>
        					<Storyboard x:Key="OnMouseEnter1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="Black"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</ControlTemplate.Resources>
        				<Grid x:Name="grid">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="MouseOver"/>
        							<VisualState x:Name="Pressed"/>
        							<VisualState x:Name="Disabled"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="ValidationStates">
        							<VisualState x:Name="InvalidFocused"/>
        							<VisualState x:Name="InvalidUnfocused"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
        						<Rectangle.Fill>
        							<LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
        								<GradientStop Color="White" Offset="0"/>
        								<GradientStop Color="#FFE4E4E4" Offset="0.992"/>
        								<GradientStop Color="#FFEAE7E7"/>
        							</LinearGradientBrush>
        						</Rectangle.Fill>
        					</Rectangle>
        					<Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
        					<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
        					<Label x:Name="label" Content="New" HorizontalAlignment="Left" VerticalAlignment="Top" Width="37.5" Margin="13.666,0,0,0" Foreground="#FF5F5F5F"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
        					</EventTrigger>
        					<Trigger Property="IsFocused" Value="True"/>
        					<Trigger Property="IsDefaulted" Value="True"/>
        					<Trigger Property="IsMouseOver" Value="True"/>
        					<Trigger Property="IsPressed" Value="True"/>
        					<Trigger Property="IsEnabled" Value="False"/>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
        					</EventTrigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<ControlTemplate.Resources>
        					<Storyboard x:Key="OnMouseEnter1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="Black"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</ControlTemplate.Resources>
        				<Grid x:Name="grid">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="MouseOver"/>
        							<VisualState x:Name="Pressed"/>
        							<VisualState x:Name="Disabled"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="ValidationStates">
        							<VisualState x:Name="InvalidFocused"/>
        							<VisualState x:Name="InvalidUnfocused"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Rectangle x:Name="rectangle" Width="147.333" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
        						<Rectangle.Fill>
        							<LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
        								<GradientStop Color="White" Offset="0"/>
        								<GradientStop Color="#FFE4E4E4" Offset="0.992"/>
        								<GradientStop Color="#FFEAE7E7"/>
        							</LinearGradientBrush>
        						</Rectangle.Fill>
        					</Rectangle>
        					<Rectangle Width="144.461" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
        					<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
        					<Label x:Name="label" Content="Search Employee" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="Auto" Margin="22.337,0,23.012,0" Foreground="#FF5F5F5F"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
        					</EventTrigger>
        					<Trigger Property="IsFocused" Value="True"/>
        					<Trigger Property="IsDefaulted" Value="True"/>
        					<Trigger Property="IsMouseOver" Value="True"/>
        					<Trigger Property="IsPressed" Value="True"/>
        					<Trigger Property="IsEnabled" Value="False"/>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
        					</EventTrigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ButtonStyle7" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<ControlTemplate.Resources>
        					<Storyboard x:Key="OnMouseEnter1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="Black"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</ControlTemplate.Resources>
        				<Grid x:Name="grid">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="MouseOver"/>
        							<VisualState x:Name="Pressed"/>
        							<VisualState x:Name="Disabled"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="ValidationStates">
        							<VisualState x:Name="InvalidFocused"/>
        							<VisualState x:Name="InvalidUnfocused"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
        						<Rectangle.Fill>
        							<LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
        								<GradientStop Color="White" Offset="0"/>
        								<GradientStop Color="#FFE4E4E4" Offset="0.992"/>
        								<GradientStop Color="#FFEAE7E7"/>
        							</LinearGradientBrush>
        						</Rectangle.Fill>
        					</Rectangle>
        					<Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
        					<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
        					<Label x:Name="label" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="37.5" Margin="13.666,0,0,0" Foreground="#FF5F5F5F"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
        					</EventTrigger>
        					<Trigger Property="IsFocused" Value="True"/>
        					<Trigger Property="IsDefaulted" Value="True"/>
        					<Trigger Property="IsMouseOver" Value="True"/>
        					<Trigger Property="IsPressed" Value="True"/>
        					<Trigger Property="IsEnabled" Value="False"/>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
        					</EventTrigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid>
        					<Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
        					<Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsMouseOver" Value="True">
        						<Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="True">
        						<Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="False">
        						<Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
        	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="BorderBrush" Value="#FF688CAF"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type DataGrid}">
        				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
        					<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Foreground="#FF513838" FontFamily="Segoe UI Semibold">
        						<ScrollViewer.Template>
        							<ControlTemplate TargetType="{x:Type ScrollViewer}">
        								<Grid>
        									<Grid.ColumnDefinitions>
        										<ColumnDefinition Width="Auto"/>
        										<ColumnDefinition Width="*"/>
        										<ColumnDefinition Width="Auto"/>
        									</Grid.ColumnDefinitions>
        									<Grid.RowDefinitions>
        										<RowDefinition Height="Auto"/>
        										<RowDefinition Height="*"/>
        										<RowDefinition Height="Auto"/>
        									</Grid.RowDefinitions>
        									<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
        									<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Foreground="#FF4D85C3"/>
        									<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
        									<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
        									<Grid Grid.Column="1" Grid.Row="2">
        										<Grid.ColumnDefinitions>
        											<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
        											<ColumnDefinition Width="*"/>
        										</Grid.ColumnDefinitions>
        										<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
        									</Grid>
        								</Grid>
        							</ControlTemplate>
        						</ScrollViewer.Template>
        						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        					</ScrollViewer>
        				</Border>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	<Style.Triggers>
        		<MultiTrigger>
        			<MultiTrigger.Conditions>
        				<Condition Property="IsGrouping" Value="true"/>
        				<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
        			</MultiTrigger.Conditions>
        			<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        		</MultiTrigger>
        	</Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Background="#FFF5F5F8" Height="379.124" VerticalAlignment="Center" HorizontalAlignment="Center" Width="842.645">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="95*"/>
            <ColumnDefinition Width="162*"/>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="110*"/>
            <ColumnDefinition Width="161*"/>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="90*"/>
            <ColumnDefinition Width="184*"/>
            <ColumnDefinition Width="10*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="57*"/>
            <RowDefinition Height="27*"/>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="27*"/>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="27*"/>
            <RowDefinition Height="22*"/>
            <RowDefinition Height="196*"/>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>
        <Rectangle Fill="#FF2B3D5D" RadiusY="4" RadiusX="4" Stroke="#7E191818" StrokeThickness="16" Margin="-15.99,-16.48,-16.085,-14.837" Grid.RowSpan="10" Grid.ColumnSpan="10" RenderTransformOrigin="0.5,0.5">
        	<Rectangle.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform AngleY="0.086"/>
        			<RotateTransform/>
        			<TranslateTransform Y="0.623"/>
        		</TransformGroup>
        	</Rectangle.RenderTransform>
        </Rectangle>
        <Rectangle Margin="0,-0.826,-0.001,20.957" Grid.ColumnSpan="10" Grid.RowSpan="2">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF18233A" Offset="0"/>
                    <GradientStop Color="#FF18233A" Offset="1"/>
                    <GradientStop Color="#FF4C5691" Offset="0.53"/>
                    <GradientStop Color="#FF4C5691" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <ComboBox ItemsSource="{Binding AllowanceTypes}" DisplayMemberPath="allowance_name" SelectedValuePath="allowance_id" SelectedValue="{Binding CurrentAllowance.allowance_id}" SelectedItem="{Binding CurrentAllowanceType}" HorizontalAlignment="Left" Margin="0.151,1.533,0,0" Grid.Row="4" VerticalAlignment="Top" Width="160" Grid.Column="2" Height="23"/>
        <CheckBox IsChecked="{Binding CurrentAllowance.is_active, FallbackValue=false}" Content="Active" HorizontalAlignment="Left" Margin="2.004,5.575,0,0" Grid.Row="6" VerticalAlignment="Top" Width="58" Grid.Column="4" Height="15.098" Foreground="White" FontStyle="Italic" FontWeight="Bold"/>

        <DataGrid ItemsSource="{Binding Allowances}" SelectedItem="{Binding CurrentAllowance}" IsReadOnly="True" AutoGenerateColumns="False" HorizontalAlignment="Left" Margin="0.833,40.064,0,0" Grid.Row="8" VerticalAlignment="Top" Height="156.029" Width="823" Grid.Column="1" Grid.ColumnSpan="9" Foreground="#FFB1B4B6" BorderBrush="#FFB1B4B6" Style="{DynamicResource DataGridStyle1}" Grid.RowSpan="2">
            <DataGrid.Columns >
                <DataGridTextColumn Binding="{Binding emp_id}"  Header="Emp No" Width="80"/>
                <DataGridTextColumn Binding="{Binding first_name}" Header="First Name" Width="145" />
                <DataGridTextColumn Binding="{Binding second_name}" Header="Second Name" Width="145" />
                <DataGridTextColumn Binding="{Binding allowance_name}" Header="Allowance" Width="120"/>
                <DataGridTextColumn Binding="{Binding amount}" Header="Amount" Width="120"/>
                <DataGridCheckBoxColumn Binding="{Binding is_active}" Header="Is Active" Width="*" />
            </DataGrid.Columns>
        </DataGrid>
        <Image HorizontalAlignment="Left" Height="35" Margin="1.33,2,0,0" VerticalAlignment="Top" Width="40" Source="/ERP;component/Images/City_logo.png" Stretch="Fill" Grid.Column="1" Grid.RowSpan="2"/>
        <Label Content="Employee Allowances" Margin="41.33,3.346,0,25.432" HorizontalAlignment="Left" Width="168.662" FontSize="14.667" FontWeight="Bold" Foreground="White" Grid.Column="1" Grid.RowSpan="2" Grid.ColumnSpan="2">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="3" BlurRadius="3"/>
            </Label.Effect>
        </Label>
        <Label Content="Employee No " Margin="0.333,0.497,3.806,0" Grid.Row="2" Height="26.512" VerticalAlignment="Top" Foreground="White" FontFamily="Segoe UI Semibold" FontWeight="Bold" Grid.Column="1"/>
        <TextBox HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="{Binding CurrentAllowance.emp_id}"  VerticalAlignment="Top" Width="160" Grid.Column="2" Grid.Row="2" Style="{DynamicResource TextBoxStyle6}" BorderBrush="#7F000000" Foreground="Black" Margin="0.312,1.994,0,0"/>
        <TextBox HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="{Binding CurrentAllowance.amount}"  VerticalAlignment="Top" Width="160" Grid.Column="2" Grid.Row="6" Style="{DynamicResource TextBoxStyle6}" BorderBrush="#7F000000" Foreground="Black" Margin="0.038,1.986,0,0"/>
        <TextBox HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="{Binding CurrentAllowance.first_name}"  VerticalAlignment="Top" Width="160" Grid.Column="5" Grid.Row="2" Style="{DynamicResource TextBoxStyle6}" BorderBrush="#7F000000" Foreground="Black" Margin="0.659,1.656,0,0"/>
        <TextBox HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="{Binding CurrentAllowanceType.default_amount}"  VerticalAlignment="Top" Width="160" Grid.Column="5" Grid.Row="4" Style="{DynamicResource TextBoxStyle6}" BorderBrush="#7F000000" Foreground="Black" Margin="0.658,2.087,0,0"/>
        <TextBox HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="{Binding CurrentAllowance.second_name}"  VerticalAlignment="Top" Width="160" Grid.Column="8" Grid.Row="2" Style="{DynamicResource TextBoxStyle6}" BorderBrush="#7F000000" Foreground="Black" Margin="0.12,1.997,0,0"/>
        <Label Content="First Name" Margin="0.004,0.653,30.815,0" Grid.Row="2" Height="26.356" VerticalAlignment="Top" Foreground="White" FontFamily="Segoe UI Semibold" FontWeight="Bold" Grid.Column="4"/>
        <Label Content="Allowance Type" Margin="0.003,0.02,0.203,0" Grid.Row="4" Height="26.399" VerticalAlignment="Top" Foreground="White" FontFamily="Segoe UI Semibold" FontWeight="Bold" Grid.Column="1"/>
        <Label Content="Default Allowance " Margin="9.994,0.192,1.348,0" Grid.Row="4" Height="26.395" VerticalAlignment="Top" Foreground="White" FontFamily="Segoe UI Semibold" FontWeight="Bold" Grid.Column="3" Grid.ColumnSpan="2"/>
        <Label Content="Second Name" Margin="0.055,0.329,1.905,0" Grid.Row="2" Height="26.68" VerticalAlignment="Top" Foreground="White" FontFamily="Segoe UI Semibold" FontWeight="Bold" Grid.Column="7"/>
        <Label Content="Amount" Margin="0.004,0.076,35.868,0" Grid.Row="6" Height="26.932" VerticalAlignment="Top" Foreground="White" FontFamily="Segoe UI Semibold" FontWeight="Bold" Grid.Column="1"/>
        <Button Command="{Binding EmployeeSearch}" Content="Search Employee" x:Name="button1_Copy2"  Grid.Column="8" Height="25" Grid.Row="6" Style="{DynamicResource ButtonStyle1}" VerticalAlignment="Top"   Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Margin="0.095,1.022,37.0459501187648,0">
        	<Button.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Button.RenderTransform>
        </Button>
        <Button Command="{Binding NewButton}" Content="New" x:Name="button1_Copy"  Grid.Column="2" Height="25" Grid.Row="8" Style="{DynamicResource ButtonStyle8}" VerticalAlignment="Top"   Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Margin="0.04,0.038,96.892,0">
        	<Button.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Button.RenderTransform>
        </Button>
        <Button x:Name="button1_Copy1"  Grid.Column="2" Height="25" Grid.Row="8" Style="{DynamicResource ButtonStyle7}" VerticalAlignment="Top" Command="{Binding SaveButton}" Content="Save" Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Margin="80.23,0.038,16.702,0">
        	<Button.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Button.RenderTransform>
        </Button>
        <Button x:Name="button2" Content="Button" Grid.Column="8" Margin="169.725,4.415,4.423,32.602" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" Click="button2_Click" Grid.Row="1" Grid.ColumnSpan="2" Width="20" Height="20" >
        	<Button.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Button.RenderTransform>
        </Button>
    </Grid>
</UserControl>
