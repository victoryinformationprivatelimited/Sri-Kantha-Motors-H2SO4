<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ERP="clr-namespace:ERP" x:Class="ERP.Payroll.ManualPayroll.ProcessRulePeriodWiseWindow"
        Title="ProcessRulePeriodWiseWindow" Height="494.5" Width="795" AllowsTransparency="True" WindowStyle="None" Background="{x:Null}" Foreground="{x:Null}" MouseLeftButtonDown="Window_MouseLeftButtonDown" WindowStartupLocation="CenterScreen">
    <Window.InputBindings>
        <KeyBinding Key="F1" Command="{Binding NextEmployeeButton}"/>
        <KeyBinding Key="F2" Command="{Binding PreviousEmployeeButton}"/>
        <KeyBinding Key="F5" Command="{Binding NextRuleButton}"/>
        <KeyBinding Key="F6" Command="{Binding PreviousRuleButton}"/>
    </Window.InputBindings>
    <Window.Resources>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="2.662,2.339,3.247,2.254" Source="/ERP;component/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="BorderStyle3" TargetType="{x:Type Border}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="#FEAEAEAE" Offset="1"/>
                        <GradientStop Color="#FE5B5B5B" Offset="0"/>
                        <GradientStop Color="#FE868686" Offset="0"/>
                        <GradientStop Color="#FE888888" Offset="0"/>
                        <GradientStop Color="#FE9D9D9D" Offset="0"/>
                        <GradientStop Color="#FEA5A5A5" Offset="0"/>
                        <GradientStop Color="#FEA9A9A9" Offset="0"/>
                        <GradientStop Color="#FEABABAB" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#FFDDF3D2"/>
            <Setter Property="CornerRadius" Value="2"/>
        </Style>
        <Style x:Key="TextBoxStyle5" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF68839A" CornerRadius="3" Background="White" Padding="2">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="White" Margin="0,0,21.333,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="40,32,41,32" Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Rectangle Fill="#FF2B3D5D" Margin="-19,-18,-13,-15" RadiusY="4" RadiusX="4" Stroke="#7E191818" StrokeThickness="16"/>
        <Rectangle Margin="-1,-1,0,399">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF18233A" Offset="0"/>
                    <GradientStop Color="#FF18233A" Offset="1"/>
                    <GradientStop Color="#FF4C5691" Offset="0.518"/>
                    <GradientStop Color="#FF4C5691" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Rectangle Margin="-1,31,0,370">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF81818B" Offset="0"/>
                    <GradientStop Color="#FF81818B" Offset="1"/>
                    <GradientStop Color="#FFC4C4D3" Offset="0.56"/>
                    <GradientStop Color="#FFC4C4D3" Offset="0.474"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Button TabIndex="2" Command="{Binding SelectEmployeeButton}" Content="Search Employees" HorizontalAlignment="Left" Margin="22,34,0,0" VerticalAlignment="Top" Width="110"/>
        <Label Content="Period" HorizontalAlignment="Left" Margin="494,31,0,0" VerticalAlignment="Top" Foreground="White"/>
        <ComboBox TabIndex="1" ItemsSource="{Binding Periods}" SelectedItem="{Binding CurrentPeriod}" DisplayMemberPath="period_name" HorizontalAlignment="Left" Margin="552,33,0,0" VerticalAlignment="Top" Width="143"/>

        <ERP:CustomDataGrid TabIndex="4" VirtualizingPanel.IsVirtualizing="False" SelectionUnit="FullRow" IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding Employees}" SelectedItem="{Binding CurrentEmployee,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="22,102,0,0" VerticalAlignment="Top" Height="129" Width="334">

            <ERP:CustomDataGrid.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding DeleteButton}" />
            </ERP:CustomDataGrid.InputBindings>
            <ERP:CustomDataGrid.Resources>
                <!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Tomato"/>-->
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DeepSkyBlue"/>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding nic}" Value="1">
                            <Setter Property="Background" Value="#FFE1EA2B"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                        <!--<DataTrigger Binding="{Binding IsAssigned}" Value="true">
                            <Setter Property="Background" Value="#BA94E0" />
                            <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>-->
                    </Style.Triggers>
                </Style>
            </ERP:CustomDataGrid.Resources>
            <ERP:CustomDataGrid.Columns>
                <DataGridTextColumn Header="Emp No" Width="*" Binding="{Binding emp_id}"/>
                <DataGridTextColumn Header="First Name" Width="*" Binding="{Binding first_name}"/>
                <DataGridTextColumn Header="Last Name" Width="*" Binding="{Binding surname}"/>
            </ERP:CustomDataGrid.Columns>
        </ERP:CustomDataGrid>
        <ERP:CustomDataGrid TabIndex="8" IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding AssignedFixedRulesForEmployee}" SelectedItem="{Binding CurrentAssignedFixedRulesForEmployee}" HorizontalAlignment="Left" Margin="22,268,0,0" VerticalAlignment="Top" Height="125" Width="335">
            <ERP:CustomDataGrid.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding DeleteNewFixesAsignedToEmployeeButton}" />
            </ERP:CustomDataGrid.InputBindings>
            <ERP:CustomDataGrid.Resources>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding rate}" Value="1000">
                            <Setter Property="Background" Value="#FFE1EA2B"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                        <!--<DataTrigger Binding="{Binding IsAssigned}" Value="true">
                            <Setter Property="Background" Value="#BA94E0" />
                            <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>-->
                    </Style.Triggers>
                </Style>
            </ERP:CustomDataGrid.Resources>
            <ERP:CustomDataGrid.Columns>
                <DataGridTextColumn Header="Rule Name" Width="*" Binding="{Binding rule_name}"/>
                <DataGridTextColumn Header="Special Amount" Width="*" Binding="{Binding special_amount}"/>
                <DataGridTextColumn Header="Quantity" Width="*" Binding="{Binding quantity}"/>
            </ERP:CustomDataGrid.Columns>
        </ERP:CustomDataGrid>
        <ERP:CustomDataGrid ScrollViewer.CanContentScroll="True" TabIndex="5" IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding AssignedNonFixedRulesForEmployees}" SelectedItem="{Binding CurrentAssignedNonFixedRulesForEmployee}" HorizontalAlignment="Left" Margin="371,102,0,0" VerticalAlignment="Top" Height="129" Width="325">
            <ERP:CustomDataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DeepSkyBlue"/>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding rate}" Value="1000">
                            <Setter Property="Background" Value="#FFE1EA2B"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                        <!--<DataTrigger Binding="{Binding IsAssigned}" Value="true">
                            <Setter Property="Background" Value="#BA94E0" />
                            <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>-->
                    </Style.Triggers>
                </Style>
            </ERP:CustomDataGrid.Resources>
            <ERP:CustomDataGrid.Columns>
                <DataGridTextColumn Header="Rule Name" Width="*" Binding="{Binding rule_name}"/>
                <DataGridTextColumn Header="Special Amt" Width="*" Binding="{Binding special_amount}"/>
                <DataGridTextColumn Header="Quantity" Width="*" Binding="{Binding quantity}"/>
                <DataGridTextColumn Header="Total Amount" Width="*" Binding="{Binding amount}"/>
            </ERP:CustomDataGrid.Columns>
        </ERP:CustomDataGrid>
        <Label Content="Special Amt" HorizontalAlignment="Left" Margin="372,241,0,0" VerticalAlignment="Top" Foreground="White" FontWeight="Bold"/>
        <TextBox TabIndex="6" HorizontalAlignment="Left" Height="23" Margin="450,242,0,0" TextWrapping="Wrap" Text="{Binding Amount, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="89" RenderTransformOrigin="0.5,0.5"/>
        <Label Content="Quantity" HorizontalAlignment="Left" Margin="540,240,0,0" VerticalAlignment="Top" Foreground="White" FontWeight="Bold"/>
        <TextBox TabIndex="7" HorizontalAlignment="Left" Height="23" Margin="597,241,0,0" TextWrapping="Wrap" Text="{Binding Quantity, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="98"/>
        <Button TabIndex="9" Command="{Binding NewButton}" Content="New" HorizontalAlignment="Left" Margin="451,395,0,0" VerticalAlignment="Top" Width="65" Height="25"/>
        <Button TabIndex="10" Command="{Binding SaveButton}" Content="Save" HorizontalAlignment="Left" Margin="530,395,0,0" VerticalAlignment="Top" Width="65" Height="25"/>
        <Button TabIndex="11" Content="Delete" Command="{Binding DeleteButton}" HorizontalAlignment="Left" Margin="611,395,0,0" VerticalAlignment="Top" Width="65" Height="25"/>
        <Label Content="Non Fixed Rules" HorizontalAlignment="Left" Margin="365,72,0,0" VerticalAlignment="Top" Foreground="White" FontWeight="Bold"/>
        <Label Content="Fixed Rules" HorizontalAlignment="Left" Margin="17,242,0,0" VerticalAlignment="Top" Foreground="White" FontWeight="Bold"/>
        <Button x:Name="button2" Content="Button" Margin="684,3,5,402" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" Click="button2_Click_1" Width="25" Height="25" >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Label Content="Process Rules Period Wise" HorizontalAlignment="Left" Height="23" Margin="0,3,0,0" VerticalAlignment="Top" Width="174" Foreground="White" FontFamily="/ERP;component/Fonts/#Segoe UI Semibold" FontWeight="Bold"/>
        <Rectangle ToolTip="New Employees Assigned To Selected Period" Fill="#FFE1EA2B" HorizontalAlignment="Left" Height="16" Margin="566,286,0,0" RadiusY="4" RadiusX="4" StrokeThickness="16" VerticalAlignment="Top" Width="22" Stroke="#FFE1EA2B">
            <Rectangle.Effect>
                <DropShadowEffect/>
            </Rectangle.Effect>
        </Rectangle>
        <Label Content="New Details" HorizontalAlignment="Left" Margin="593,280,0,0" VerticalAlignment="Top" Foreground="White" FontWeight="Bold"/>
        <Label Content="Search By Emp No" Margin="22,73,580,331" Foreground="White" FontStyle="Italic" FontWeight="Bold"/>
        <TextBox TabIndex="3" x:Name="searchbox" TextWrapping="Wrap" Text="{Binding Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle5}" Margin="140,72,458,334" BorderBrush="#7F000000" SelectionBrush="#FF2B5668" />
        <Rectangle ToolTip="New Employees Assigned To Selected Period" Fill="DeepSkyBlue" HorizontalAlignment="Left" Height="16" Margin="566,307,0,0" RadiusY="4" RadiusX="4" StrokeThickness="16" VerticalAlignment="Top" Width="22" Stroke="DeepSkyBlue">
            <Rectangle.Effect>
                <DropShadowEffect/>
            </Rectangle.Effect>
        </Rectangle>
        <Label Content="Selected Item" HorizontalAlignment="Left" Margin="593,303,0,0" VerticalAlignment="Top" Foreground="White" FontWeight="Bold"/>

    </Grid>

</Window>
