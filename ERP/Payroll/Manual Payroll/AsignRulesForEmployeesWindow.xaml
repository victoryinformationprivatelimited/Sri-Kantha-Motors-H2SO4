<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ERP="clr-namespace:ERP" x:Class="ERP.Payroll.ManualPayroll.AsignRulesForEmployeesWindow"
        Title="AsignRulesForEmployeesWindow" Height="551.947" Width="829.381" Background="{x:Null}" Foreground="{x:Null}" AllowsTransparency="True" WindowStyle="None" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="2.662,2.339,3.247,2.254" Source="/ERP;component/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid HorizontalAlignment="Right" Width="732" Height="488" VerticalAlignment="Bottom" Margin="0,0,44,32">
        <Rectangle Fill="#FF2B3D5D" RadiusY="4" RadiusX="4" Stroke="#7E191818" StrokeThickness="16" Margin="-16,-15,-18,-20" Height="523" Width="766" HorizontalAlignment="Left" VerticalAlignment="Top"/>

        <Rectangle Margin="0,32,0,437">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF81818B" Offset="0"/>
                    <GradientStop Color="#FF81818B" Offset="1"/>
                    <GradientStop Color="#FFC4C4D3" Offset="0.574"/>
                    <GradientStop Color="#FFC4C4D3" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Rectangle x:Name="employee_rule_detail_titlebar" MouseLeftButtonDown="employee_rule_detail_titlebar_MouseLeftButtonDown" Margin="0,0,0,456">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF18233A" Offset="0"/>
                    <GradientStop Color="#FF18233A" Offset="1"/>
                    <GradientStop Color="#FF4C5691" Offset="0.569"/>
                    <GradientStop Color="#FF4C5691" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>

        <TabControl HorizontalAlignment="Center" Height="416" Margin="6,62,6,10" VerticalAlignment="Center" Width="720">
            <TabItem Header="Fixed Rules">
                <Grid Background="#FF2B3D5D">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Command="{Binding SelectEmployeesButton}" Content="Select Employees" HorizontalAlignment="Left" Margin="24,10,0,0" VerticalAlignment="Top" Width="116"/>
                    <ERP:CustomDataGrid IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding NewEmployeesFixedRules}" SelectedItem="{Binding CurrentNewEployeeFixedRules}" SelectedItemsList="{Binding SelectedNewEmployeesForRuleList, Mode=TwoWay}" HorizontalAlignment="Left" Margin="24,51,0,0" VerticalAlignment="Top" Height="142" Width="470">
                        <ERP:CustomDataGrid.Columns>
                            <DataGridTextColumn Header="Emp No" Width="*" Binding="{Binding emp_id}"/>
                            <DataGridTextColumn Header="First Name" Width="*" Binding="{Binding first_name}" />
                            <DataGridTextColumn Header="Last Name" Width="*" Binding="{Binding surname}" />
                            <DataGridTextColumn Header="Quantity" Width="*" Binding="{Binding Quantity}" />
                            <DataGridTextColumn Header="Amount" Width="*" Binding="{Binding special_amount}" />
                        </ERP:CustomDataGrid.Columns>
                    </ERP:CustomDataGrid>
                    <Label Content="Fixed Rule Name" HorizontalAlignment="Left" Margin="383,7,0,0" VerticalAlignment="Top" Foreground="White"/>
                    <ComboBox ItemsSource="{Binding FixedRules}" SelectedItem="{Binding CurrentFixedRule}" DisplayMemberPath="rule_name" HorizontalAlignment="Left" Margin="487,8,0,0" VerticalAlignment="Top" Width="180"/>
                    <Label Content="Amount" HorizontalAlignment="Left" Margin="499,84,0,0" VerticalAlignment="Top" Foreground="White"/>
                    <Label Content="Quantity" HorizontalAlignment="Left" Margin="499,115,0,0" VerticalAlignment="Top" Foreground="White" />
                    <Label Content="Already Asigned Employees" HorizontalAlignment="Left" Margin="24,200,0,0" VerticalAlignment="Top" Foreground="White"/>
                    <TextBox HorizontalAlignment="Left" Height="23" Margin="572,84,0,0" TextWrapping="Wrap" Text="{Binding Amount}" VerticalAlignment="Top" Width="120"/>
                    <TextBox HorizontalAlignment="Left" Height="23" Margin="572,118,0,0" TextWrapping="Wrap" Text="{Binding Quantity}" VerticalAlignment="Top" Width="120"/>
                    <Button Command="{Binding AddButton}" Content="Add" HorizontalAlignment="Left" Margin="617,147,0,0" VerticalAlignment="Top" Width="75"/>
                    <ERP:CustomDataGrid ItemsSource="{Binding EmployeesAssignedRules}" SelectedItem="{Binding CurrentEmployeeAssignedRule}" SelectedItemsList="{Binding SelectedEmployeesAssignedRuleList, Mode=TwoWay}" IsReadOnly="True" AutoGenerateColumns="False" HorizontalAlignment="Left" Margin="24,229,0,0" VerticalAlignment="Top" Height="142" Width="470">
                        <ERP:CustomDataGrid.Columns>
                            <DataGridTextColumn Header="Emp No" Width="*" Binding="{Binding emp_id}"/>
                            <DataGridTextColumn Header="First Name" Width="*" Binding="{Binding first_name}" />
                            <DataGridTextColumn Header="Last Name" Width="*" Binding="{Binding surname}" />
                            <DataGridTextColumn Header="Quantity" Width="*" Binding="{Binding Quantity}" />
                            <DataGridTextColumn Header="Amount" Width="*" Binding="{Binding special_amount}" />
                        </ERP:CustomDataGrid.Columns>
                    </ERP:CustomDataGrid>
                    <Button Command="{Binding NewButton}" Content="New" HorizontalAlignment="Left" Margin="617,243,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button Command="{Binding SaveButton}" Content="Save" HorizontalAlignment="Left" Margin="617,280,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button Command="{Binding DeleteButton}" Content="Delete" HorizontalAlignment="Left" Margin="617,318,0,0" VerticalAlignment="Top" Width="75"/>
                </Grid>
            </TabItem>
            <TabItem Header="Non Fixed Rules">
                <Grid Background="#FF2B3D5D">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Command="{Binding SelectEmployeeForNonFixedRulesButton}" Content="Select Employees" HorizontalAlignment="Left" Margin="24,10,0,0" VerticalAlignment="Top" Width="116"/>
                    <ERP:CustomDataGrid IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding NewEmployeesForNonFixedRules}" SelectedItem="{Binding CurrentNewEmployeeForNonFixedRule}" SelectedItemsList="{Binding SelectedNewEmployeeForNonFixedRuleList, Mode=TwoWay}" HorizontalAlignment="Left" Margin="24,51,0,0" VerticalAlignment="Top" Height="142" Width="470">
                        <ERP:CustomDataGrid.Columns>
                            <DataGridTextColumn Header="Emp ID" Width="*" Binding="{Binding emp_id}"/>
                            <DataGridTextColumn Header="First Name" Width="*" Binding="{Binding first_name}"/>
                            <DataGridTextColumn Header="Last Name" Width="*" Binding="{Binding surname}"/>
                            <DataGridTextColumn Header="Amount" Width="*" Binding="{Binding special_amount}"/>
                            <DataGridTextColumn Header="Is Special" Width="*" Binding="{Binding is_special}"/>
                        </ERP:CustomDataGrid.Columns>
                    </ERP:CustomDataGrid>
                    <Label Content="Non Fixed Rule Name" HorizontalAlignment="Left" Margin="408,7,0,0" VerticalAlignment="Top" Foreground="White"/>
                    <ComboBox ItemsSource="{Binding NonFixedRules}" SelectedItem="{Binding CurrentNonFixedRule}" DisplayMemberPath="rule_name" HorizontalAlignment="Left" Margin="547,8,0,0" VerticalAlignment="Top" Width="158"/>
                    <Label Content="Already Asigned Employees" HorizontalAlignment="Left" Margin="24,200,0,0" VerticalAlignment="Top" Foreground="White"/>
                    <ERP:CustomDataGrid ItemsSource="{Binding EmpCompanyRules}" SelectedItem="{Binding CurrentEmpCompanyRule}" SelectedItemsList="{Binding SelectedEmpCompanyRuleList, Mode=TwoWay}" IsReadOnly="True" AutoGenerateColumns="False" HorizontalAlignment="Left" Margin="24,229,0,0" VerticalAlignment="Top" Height="142" Width="470">
                        <ERP:CustomDataGrid.Columns>
                            <DataGridTextColumn Header="Emp ID" Width="*" Binding="{Binding emp_id}"/>
                            <DataGridTextColumn Header="First Name" Width="*" Binding="{Binding first_name}"/>
                            <DataGridTextColumn Header="Last Name" Width="*" Binding="{Binding surname}"/>
                            <DataGridTextColumn Header="Amount" Width="*" Binding="{Binding special_amount}"/>
                            <DataGridTextColumn Header="Is Special" Width="*" Binding="{Binding is_special}"/>
                        </ERP:CustomDataGrid.Columns>
                    </ERP:CustomDataGrid>
                    <Button Command="{Binding NewNonFixButton}" Content="New" HorizontalAlignment="Left" Margin="617,243,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button Command="{Binding SaveNonFixedRulesButton}" Content="Save" HorizontalAlignment="Left" Margin="617,280,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button Command="{Binding DeleteNonFixedRulesButton}" Content="Delete" HorizontalAlignment="Left" Margin="617,318,0,0" VerticalAlignment="Top" Width="75"/>
                    <Label Content="Special Amount" HorizontalAlignment="Left" Margin="499,148,0,0" VerticalAlignment="Top" Foreground="White"/>
                    <TextBox IsEnabled="{Binding IsSpecial}" HorizontalAlignment="Left" Height="23" Margin="592,148,0,0" TextWrapping="Wrap" Text="{Binding NonFixedRulesSpecialAmount}" VerticalAlignment="Top" Width="120"/>
                    <CheckBox IsChecked="{Binding IsSpecial}" Content="Is Special" HorizontalAlignment="Left" Margin="503,185,0,0" VerticalAlignment="Top" Foreground="White"/>
                    <Button Command="{Binding AddValueNonFixedRulesButton}" Content="Add" HorizontalAlignment="Left" Margin="617,182,0,0" VerticalAlignment="Top" Width="75"/>
                </Grid>
            </TabItem>
        </TabControl>
        <Label Content="Assign Rules for Employees" HorizontalAlignment="Left" Height="27" Margin="10,0,0,0" VerticalAlignment="Top" Width="158" Foreground="White" FontFamily="/ERP;component/Fonts/#Segoe UI Semibold" />
        <Button x:Name="employee_rule_detail_close_btn" Content="Button" Margin="701,5,6,461" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" Click="employee_rule_detail_close_btn_Click" Width="20" Height="20" >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>

    </Grid>
</Window>
