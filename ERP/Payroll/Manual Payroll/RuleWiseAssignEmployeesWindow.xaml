<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ERP="clr-namespace:ERP" x:Class="ERP.Payroll.ManualPayroll.RuleWiseAssignEmployeesWindow"
        Title="RuleWiseAssignEmployeesWindow" Height="653.5" Width="1131.154" AllowsTransparency="True" WindowStyle="None" Background="{x:Null}" Foreground="{x:Null}" MouseLeftButtonDown="Window_MouseLeftButtonDown" WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="2.662,2.339,3.247,2.254" Source="/ERP;component/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="BorderStyle3" TargetType="{x:Type Border}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="#FEAEAEAE" Offset="1"/>
                        <GradientStop Color="#FE5B5B5B" Offset="0"/>
                        <GradientStop Color="#FE868686" Offset="0"/>
                        <GradientStop Color="#FE888888" Offset="0"/>
                        <GradientStop Color="#FE9D9D9D" Offset="0"/>
                        <GradientStop Color="#FEA5A5A5" Offset="0"/>
                        <GradientStop Color="#FEA9A9A9" Offset="0"/>
                        <GradientStop Color="#FEABABAB" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#FFDDF3D2"/>
            <Setter Property="CornerRadius" Value="2"/>
        </Style>
        <Style x:Key="TextBoxStyle5" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnGotFocus1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF68839A"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF86C7FF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnLostFocus1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF86C7FF"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF68839A" CornerRadius="2" Background="White" Padding="2">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="White" Margin="0" HorizontalAlignment="Left" Width="128.868"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="FocusManager.LostFocus" SourceName="PART_ContentHost">
                                <BeginStoryboard x:Name="OnLostFocus1_BeginStoryboard" Storyboard="{StaticResource OnLostFocus1}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="FocusManager.GotFocus" SourceName="border">
                                <BeginStoryboard Storyboard="{StaticResource OnGotFocus1}"/>
                            </EventTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Margin="35,38,33,42">
        <Grid.RowDefinitions>
            <RowDefinition Height="499*"/>
            <RowDefinition Height="25*"/>
            <RowDefinition Height="18*"/>
            <RowDefinition Height="21*"/>
            <RowDefinition Height="21*"/>
        </Grid.RowDefinitions>
        <Rectangle Fill="#FF2B3D5D" RadiusY="4" RadiusX="4" Stroke="#7E191818" StrokeThickness="16" Margin="-16" Grid.RowSpan="5" HorizontalAlignment="Left" Width="1095"/>
        <Label Content="Period" HorizontalAlignment="Left" Margin="17,88,0,0" VerticalAlignment="Top" FontWeight="Bold" Foreground="White"/>
        <Label Content="Non Fixed Rules" HorizontalAlignment="Left" Margin="264,88,0,0" VerticalAlignment="Top" FontWeight="Bold" Foreground="White"/>
        <ERP:CustomDataGrid IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding EmployeesAssignedRulesForSelectedPeriod}" SelectedItem="{Binding CurrentEmployeesAssignedRulesForSelectedPeriod}" SelectedItemsList="{Binding CurrentEmployeesAssignedRulesForSelectedPeriodList, Mode=TwoWay}" HorizontalAlignment="Left" Margin="22,122,0,0" VerticalAlignment="Top" Height="360" Width="500">
            <ERP:CustomDataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DeepSkyBlue"/>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding nic}" Value="1">
                            <Setter Property="Background" Value="#FFE1EA2B"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ERP:CustomDataGrid.Resources>
            <ERP:CustomDataGrid.Columns>
                <DataGridTextColumn Header="Emp ID" Width="*" Binding="{Binding emp_id}"/>
                <DataGridTextColumn Header="Emp First Name" Width="*" Binding="{Binding first_name}"/>
                <DataGridTextColumn Header="Emp Last Name" Width="*" Binding="{Binding surname}"/>
                <DataGridTextColumn Header="Amount" Width="*" Binding="{Binding special_amount}"/>
                <DataGridTextColumn Header="Quantity" Width="*" Binding="{Binding quantity}"/>
            </ERP:CustomDataGrid.Columns>
        </ERP:CustomDataGrid>
        <Label Content="Amount" HorizontalAlignment="Left" Margin="17,0,0,0" VerticalAlignment="Top" FontWeight="Bold" Foreground="White" Grid.RowSpan="2" Grid.Row="1"/>
        <Label Content="Quantity" HorizontalAlignment="Left" Margin="210,0,0,0" VerticalAlignment="Top" FontWeight="Bold" Foreground="White" Grid.RowSpan="2" Grid.Row="1"/>
        <TextBox HorizontalAlignment="Left" Height="23" Margin="77,1,0,0" TextWrapping="Wrap" Text="{Binding Amount}" VerticalAlignment="Top" Width="126" Grid.Row="1"/>
        <TextBox HorizontalAlignment="Left" Height="23" Margin="277,1,0,0" TextWrapping="Wrap" Text="{Binding Quantity}" VerticalAlignment="Top" Width="183" Grid.Row="1"/>
        <Button Command="{Binding NewButton}" Content="New" HorizontalAlignment="Left" Margin="476,1,0,0" VerticalAlignment="Top" Width="74" Grid.Row="3"/>
        <Button Command="{Binding SaveNonFixedRulesButton}" Content="Save" HorizontalAlignment="Left" Margin="386,1,0,0" VerticalAlignment="Top" Width="74" Grid.Row="3"/>
        <ComboBox TabIndex="1" ItemsSource="{Binding Periods}" SelectedItem="{Binding CurrentPeriod}" DisplayMemberPath="period_name" HorizontalAlignment="Left" VerticalAlignment="Top" Width="182" Margin="66,88,0,0"/>
        <ComboBox IsEnabled="{Binding IsPeriodSelected}" ItemsSource="{Binding NonFixedRules}" SelectedItem="{Binding CurrentNonFixedRule}" DisplayMemberPath="rule_name" HorizontalAlignment="Left" Margin="362,88,0,0" VerticalAlignment="Top" Width="188"/>
        <Button Command="{Binding SaveAllFixedRulesButton}" Content="Save All Fixed Rules" HorizontalAlignment="Left" Margin="932,1,0,0" VerticalAlignment="Top" Width="118" Grid.Row="1" Height="23"/>
        <Button Command="{Binding AddButton}" Content="Add" HorizontalAlignment="Left" Margin="472,3,0,0" VerticalAlignment="Top" Width="74" Grid.Row="1"/>
        <Label Content="Fixed Rules" HorizontalAlignment="Left" Margin="576,86,0,0" VerticalAlignment="Top" FontWeight="Bold" Foreground="White"/>
        <ComboBox IsEnabled="{Binding IsPeriodSelected}" ItemsSource="{Binding FixedRules}" SelectedItem="{Binding CurrentFixedRule}" DisplayMemberPath="rule_name" HorizontalAlignment="Left" Margin="676,88,0,0" VerticalAlignment="Top" Width="188"/>
        <ERP:CustomDataGrid IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding EmployeeFixedRules}" HorizontalAlignment="Left" Margin="552,122,0,0" VerticalAlignment="Top" Height="360" Width="500">
            <ERP:CustomDataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DeepSkyBlue"/>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding nic}" Value="1">
                            <Setter Property="Background" Value="#FFE1EA2B"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                        <!--<DataTrigger Binding="{Binding IsAssigned}" Value="true">
                            <Setter Property="Background" Value="#BA94E0" />
                            <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>-->
                    </Style.Triggers>
                </Style>
            </ERP:CustomDataGrid.Resources>
            <ERP:CustomDataGrid.Columns>
                <DataGridTextColumn Header="Emp ID" Width="*" Binding="{Binding emp_id}"/>
                <DataGridTextColumn Header="Emp First Name" Width="*" Binding="{Binding first_name}"/>
                <DataGridTextColumn Header="Emp Last Name" Width="*" Binding="{Binding surname}"/>
                <DataGridTextColumn Header="Amount" Width="*" Binding="{Binding special_amount}"/>
                <DataGridTextColumn Header="Quantity" Width="*" Binding="{Binding quantity}"/>
            </ERP:CustomDataGrid.Columns>
        </ERP:CustomDataGrid>
        <Rectangle Height="35" VerticalAlignment="Top">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF18233A" Offset="0.003"/>
                    <GradientStop Color="#FF18233A" Offset="1"/>
                    <GradientStop Color="#FF4C5691" Offset="0.518"/>
                    <GradientStop Color="#FF4C5691" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Rectangle Margin="0,35,0,0" Height="31" VerticalAlignment="Top">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF81818B" Offset="0"/>
                    <GradientStop Color="#FF81818B" Offset="1"/>
                    <GradientStop Color="#FFC4C4D3" Offset="0.539"/>
                    <GradientStop Color="#FFC4C4D3" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Label Content="Rule Wise Assign Employees" HorizontalAlignment="Left" Height="30" Margin="17,3,0,0" VerticalAlignment="Top" Width="209" Foreground="White" FontWeight="Bold" FontSize="13"/>
        <Button x:Name="button2" Content="Button" Margin="1006,5,0,460" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" Height="25" Width="25" Click="button2_Click" HorizontalAlignment="Left">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Label Content="Search" Margin="843,38,0,428" Foreground="#FF3C2B2B" FontStyle="Italic" HorizontalAlignment="Left" Width="48"/>
        <TextBox x:Name="searchbox" TextWrapping="Wrap" Text="{Binding Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle5}" BorderBrush="#7F000000" SelectionBrush="#FF2B5668" Margin="893,40,0,430" Height="20" HorizontalAlignment="Left" Width="141" />
        <Image Margin="1016,43,0,432" Source="/ERP;component/Images/1366799402_SEARCH.png" Opacity="0.5" Width="15" Height="15" HorizontalAlignment="Left"/>
    </Grid>
</Window>
