<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
           xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Class="ERP.Attendance.Attendance_Process.ManualAttendance" 
           mc:Ignorable="d" Height="400" Width="680.5">
    <UserControl.Resources>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFE4E4E4" Offset="0.992"/>
                                        <GradientStop Color="#FFEAE7E7"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                            <Label x:Name="label" Content="Clear" HorizontalAlignment="Left" VerticalAlignment="Top" Width="44.833" Margin="11.335,0,0,0" Foreground="#FF5F5F5F"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFE4E4E4" Offset="0.992"/>
                                        <GradientStop Color="#FFEAE7E7"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                            <Label x:Name="label" Content="Print" HorizontalAlignment="Left" VerticalAlignment="Top" Width="44.833" Margin="11.335,0,0,0" Foreground="#FF5F5F5F"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="2.662,2.339,3.247,2.254" Source="/ERP;component/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                            <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Foreground="#FF513838" FontFamily="Segoe UI Semibold">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Foreground="#FF4D85C3"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle19" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<ControlTemplate.Resources>
        					<Storyboard x:Key="OnMouseEnter1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="Black"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</ControlTemplate.Resources>
        				<Grid x:Name="grid">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="MouseOver"/>
        							<VisualState x:Name="Pressed"/>
        							<VisualState x:Name="Disabled"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="ValidationStates">
        							<VisualState x:Name="InvalidFocused"/>
        							<VisualState x:Name="InvalidUnfocused"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
        						<Rectangle.Fill>
        							<LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
        								<GradientStop Color="White" Offset="0"/>
        								<GradientStop Color="#FFE4E4E4" Offset="0.992"/>
        								<GradientStop Color="#FFEAE7E7"/>
        							</LinearGradientBrush>
        						</Rectangle.Fill>
        					</Rectangle>
        					<Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
        					<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
        					<Label x:Name="label" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="37.5" Margin="13.666,0,0,0" Foreground="#FF5F5F5F"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
        					</EventTrigger>
        					<Trigger Property="IsFocused" Value="True"/>
        					<Trigger Property="IsDefaulted" Value="True"/>
        					<Trigger Property="IsMouseOver" Value="True"/>
        					<Trigger Property="IsPressed" Value="True"/>
        					<Trigger Property="IsEnabled" Value="False"/>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
        					</EventTrigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ButtonStyle21" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<ControlTemplate.Resources>
        					<Storyboard x:Key="OnMouseEnter1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="Black"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</ControlTemplate.Resources>
        				<Grid x:Name="grid">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="MouseOver"/>
        							<VisualState x:Name="Pressed"/>
        							<VisualState x:Name="Disabled"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="ValidationStates">
        							<VisualState x:Name="InvalidFocused"/>
        							<VisualState x:Name="InvalidUnfocused"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
        						<Rectangle.Fill>
        							<LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
        								<GradientStop Color="White" Offset="0"/>
        								<GradientStop Color="#FFE4E4E4" Offset="0.992"/>
        								<GradientStop Color="#FFEAE7E7"/>
        							</LinearGradientBrush>
        						</Rectangle.Fill>
        					</Rectangle>
        					<Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
        					<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
        					<Label x:Name="label" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="44.833" Margin="11.335,0,0,0" Foreground="#FF5F5F5F"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
        					</EventTrigger>
        					<Trigger Property="IsFocused" Value="True"/>
        					<Trigger Property="IsDefaulted" Value="True"/>
        					<Trigger Property="IsMouseOver" Value="True"/>
        					<Trigger Property="IsPressed" Value="True"/>
        					<Trigger Property="IsEnabled" Value="False"/>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
        					</EventTrigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </UserControl.Resources>
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="0*"/>
            <RowDefinition Height="27*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="42*"/>
            <RowDefinition Height="28*"/>
            <RowDefinition Height="11*"/>
            <RowDefinition Height="34*"/>
            <RowDefinition Height="134*"/>
            <RowDefinition Height="9*"/>
            <RowDefinition Height="17*"/>
            <RowDefinition Height="12*"/>
            <RowDefinition Height="29*"/>
            <RowDefinition Height="8*"/>
            <RowDefinition Height="29*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="0*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="39*"/>
            <ColumnDefinition Width="41*"/>
            <ColumnDefinition Width="30*"/>
            <ColumnDefinition Width="60*"/>
            <ColumnDefinition Width="36*"/>
            <ColumnDefinition Width="16*"/>
            <ColumnDefinition Width="12*"/>
            <ColumnDefinition Width="12*"/>
            <ColumnDefinition Width="60*"/>
            <ColumnDefinition Width="18*"/>
            <ColumnDefinition Width="23*"/>
            <ColumnDefinition Width="83*"/>
            <ColumnDefinition Width="30*"/>
            <ColumnDefinition Width="81*"/>
            <ColumnDefinition Width="46*"/>
            <ColumnDefinition Width="29*"/>
            <ColumnDefinition Width="29*"/>
            <ColumnDefinition Width="23*"/>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="0*"/>
        </Grid.ColumnDefinitions>
        <Rectangle Fill="#FF233555" Margin="-16.01,-16.039,-13.066,-16.01" RadiusY="4" RadiusX="4" Stroke="#7E191818" StrokeThickness="16" Grid.ColumnSpan="22" Grid.RowSpan="16"/>

        <Label Content="Emp No" FontFamily="Segoe UI Semibold" Foreground="White" Margin="0.484,0.725,14.457,1.275" Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="2"/>
        <ComboBox ItemsSource="{Binding Employees}" DisplayMemberPath="emp_id" SelectedValuePath="employee_id" SelectedItem="{Binding CurrentEmployee}" x:Name="emp_no" IsEditable="True"  HorizontalAlignment="Left" Width="65" Margin="0.448,2.725,0,2.275" Grid.Row="4" Grid.Column="4" Grid.ColumnSpan="2"/>
        <Label Content="EPF No" Margin="0.382,0.725,10.563,1.275" FontFamily="Segoe UI Semibold" Foreground="White" Grid.Row="4" Grid.Column="6" Grid.ColumnSpan="4"/>
        <ComboBox ItemsSource="{Binding Employees}" DisplayMemberPath="etf_no" SelectedValuePath="employee_id" SelectedItem="{Binding CurrentEmployee}" IsEditable="True" x:Name="epf_no" Margin="0.483,2.725,2.473,2.275" Grid.Row="4" Grid.Column="10"/>
        <Label Content="Employee Name" Margin="3.064,1.725,2.859,0.275" FontFamily="Segoe UI Semibold" Foreground="White" Grid.Row="4" Grid.Column="12" Grid.ColumnSpan="2"/>
        <ComboBox  DisplayMemberPath="first_name" SelectedValuePath="employee_id" ItemsSource="{Binding Employees}" SelectedItem="{Binding CurrentEmployee}" IsEditable="True" x:Name="employee_name" Margin="9.818,2.725,3.064,2.275" Grid.Row="4" Grid.Column="14" Grid.ColumnSpan="3"/>
        <Label Content="Attend Date" Margin="0.47,3.722,5.313,0" VerticalAlignment="Top" Grid.Row="6" Grid.Column="2" Grid.ColumnSpan="2" Foreground="White"/>
        <DatePicker SelectedDate="{Binding CurrentDate}" Margin="0.448,5.722,5.459,4.278" Grid.Row="6" Grid.Column="4" Grid.ColumnSpan="3"/>
        <Button Command="{Binding FindAttendance}" Content="Find Attendance" Margin="5.25,4.725,1.667,6.275" Grid.Row="6" Grid.Column="9" Grid.ColumnSpan="4"/>

        <xctk:MaskedTextBox Mask="00:00:00" Text="{Binding Time}" Margin="0.091,3.725,8.664,2.275" TextWrapping="Wrap" Grid.Row="9" Grid.Column="8" Grid.ColumnSpan="4" Grid.RowSpan="2"/>
        <Label Content="Time" Margin="0.36,3.722,23.7,0" VerticalAlignment="Top" Grid.Row="9" Grid.Column="5" Height="22.96" Grid.RowSpan="2" Foreground="White"/>
        <Label Content="Attendance Mode" Margin="0.437,1.722,3.491,1.318" Grid.Row="11" Grid.Column="5" Grid.ColumnSpan="3" Foreground="White"/>
        <ComboBox ItemsSource="{Binding Mode}" DisplayMemberPath="mode_name" SelectedValuePath="mode_id" SelectedItem="{Binding CurrentMode}" SelectedValue="{Binding CurrentEmployeeAttendance.mode_id}" IsEditable="True" Margin="1.091,6.722,4.586,0.318" Grid.Row="11" Grid.Column="8" Grid.ColumnSpan="6"/>
        <Button Command="{Binding AddAttendanceButton}" Content="Add" Margin="0.465,0.722,18.473,3.278" Grid.Row="13" Grid.Column="8" Grid.ColumnSpan="3"/>
        <Button Content="Cancle" Margin="2.665,0.059,7.28,3.941" Grid.Row="13" Grid.Column="16" Grid.ColumnSpan="2" Foreground="#FF707070"/>
        <DataGrid ItemsSource="{Binding SelectionItems}" SelectedItem="{Binding CurrentEmployeeAttendance}" AutoGenerateColumns="False" BorderBrush="#FFB1B4B6" Foreground="#FFB1B4B6" Style="{DynamicResource DataGridStyle1}" Margin="1.448,4.225,10.16,4.775" Grid.Row="7" Grid.Column="4" Grid.ColumnSpan="14">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Emp No" Binding="{Binding emp_id}" Width="*"/>
                <DataGridTextColumn Header="Date" Binding="{Binding attend_date}" Width="*"/>
                <DataGridTextColumn Header="Time" Binding="{Binding attend_time}" Width="*"/>
                <DataGridTextColumn Header="Divice Name" Binding="{Binding device_name}" Width="*"/>
                <DataGridTextColumn Header="Mode Name" Binding="{Binding mode_name}" Width="*"/>
            </DataGrid.Columns>
        </DataGrid>
        <Rectangle Margin="0.004,-0.01,-0.033,0.51" HorizontalAlignment="Left" Width="680.528" Grid.ColumnSpan="21" Grid.RowSpan="3" Grid.Column="1">
        	<Rectangle.Fill>
        		<LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
        			<GradientStop Color="#FF18233A" Offset="0"/>
        			<GradientStop Color="#FF18233A" Offset="1"/>
        			<GradientStop Color="#FF4C5691" Offset="0.596"/>
        			<GradientStop Color="#FF4C5691" Offset="0.455"/>
        		</LinearGradientBrush>
        	</Rectangle.Fill>
        </Rectangle>
        <Button x:Name="button2" Content="Button" Margin="2.629,3.558,1.1,3.442" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" Grid.Row="1" Grid.Column="19" >
            <Button.RenderTransform>
                <TransformGroup>
                	<ScaleTransform/>
                	<SkewTransform/>
                	<RotateTransform/>
                	<TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Label Content="Manual Attendance Upload" FontSize="14.667" FontWeight="Bold" Foreground="White" Margin="3.484,3.234,2.365,3.674" Grid.Row="1" Grid.Column="3" Grid.RowSpan="2" Grid.ColumnSpan="7">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="3" BlurRadius="3"/>
            </Label.Effect>
        </Label>
        <Image Source="/ERP;component/Images/Pay_Sheet_reports.png" Stretch="Fill" Margin="2.484,3.234,6.487,3.674" Grid.Row="1" Grid.Column="2" Grid.RowSpan="2"/>
        <Rectangle Margin="0.025,9.262,0.009,11.646" Grid.ColumnSpan="20" Grid.Row="2" Grid.RowSpan="2" Grid.Column="1">
        	<Rectangle.Fill>
        		<LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
        			<GradientStop Color="#FF81818B" Offset="0"/>
        			<GradientStop Color="#FF81818B" Offset="1"/>
        			<GradientStop Color="#FFB2B2BD" Offset="0.655"/>
        			<GradientStop Color="#FFC4C4D3" Offset="0.401"/>
        		</LinearGradientBrush>
        	</Rectangle.Fill>
        </Rectangle>
        <Button x:Name="button1_Copy" Content="New " Style="{DynamicResource ButtonStyle19}" Command="{Binding SaveButton}" Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Margin="3.915,0.222,11.679,3.777" Grid.Column="15" Width="65" Height="25" Grid.Row="13">
        	<Button.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Button.RenderTransform>
        </Button>
        <Button x:Name="button1_Copy1" Content="New " Style="{DynamicResource ButtonStyle21}" Command="{Binding DeleteButton}" Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Margin="1.238,0.578,8.706,0.421" Grid.Column="16" Grid.ColumnSpan="2" Width="65" Height="25" Grid.Row="8" Background="#FF605F5F" Grid.RowSpan="2">
        	<Button.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Button.RenderTransform>
        </Button>

    </Grid>
</UserControl>