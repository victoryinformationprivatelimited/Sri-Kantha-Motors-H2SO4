<Window x:Class="ERP.Attendance.Rosters.RosterGroupWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="RosterGroupWindow" Width="1029.803" Height="643.506" Background="{x:Null}" Foreground="{x:Null}" AllowsTransparency="True" WindowStyle="None" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="2.662,2.339,3.247,2.254" Source="/ERP;component/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Height="544.62" VerticalAlignment="Top" HorizontalAlignment="Left" Width="944.728" Margin="43.297,38.818,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="0*"/>
            <RowDefinition Height="27*"/>
            <RowDefinition Height="7*"/>
            <RowDefinition Height="23*"/>
            <RowDefinition Height="39*"/>
            <RowDefinition Height="47*"/>
            <RowDefinition Height="71*"/>
            <RowDefinition Height="28*"/>
            <RowDefinition Height="22*"/>
            <RowDefinition Height="25*"/>
            <RowDefinition Height="17*"/>
            <RowDefinition Height="25*"/>
            <RowDefinition Height="27*"/>
            <RowDefinition Height="12*"/>
            <RowDefinition Height="156*"/>
            <RowDefinition Height="18*"/>
            <RowDefinition Height="0*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition Width="9*"/>
            <ColumnDefinition Width="32*"/>
            <ColumnDefinition Width="110*"/>
            <ColumnDefinition Width="179*"/>
            <ColumnDefinition Width="120*"/>
            <ColumnDefinition Width="41*"/>
            <ColumnDefinition Width="167*"/>
            <ColumnDefinition Width="74*"/>
            <ColumnDefinition Width="74*"/>
            <ColumnDefinition Width="74*"/>
            <ColumnDefinition Width="40*"/>
            <ColumnDefinition Width="22*"/>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="0*"/>
        </Grid.ColumnDefinitions>
        <Rectangle Fill="#FF233555" Margin="-16.301,-16.207,-16.079,-15.974" RadiusY="4" RadiusX="4" Stroke="#7E191818" StrokeThickness="16" Grid.RowSpan="17" Grid.ColumnSpan="15"/>

        <Rectangle MouseDown="Rectangle_MouseDown" Margin="0,0,-0.006,22.541" Grid.RowSpan="4" Grid.ColumnSpan="15">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF18233A" Offset="0"/>
                    <GradientStop Color="#FF18233A" Offset="1"/>
                    <GradientStop Color="#FF4C5691" Offset="0.518"/>
                    <GradientStop Color="#FF4C5691" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Button x:Name="CloseButton" Content="Button" Margin="1.052,5.689,0.941,1.341" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="-19.033,0.033" Click="CloseButton_Click" Width="20" Height="20" Grid.RowSpan="2" Grid.Column="12" >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Label Content="Roster Group" Margin="2.297,2.5,3.671,1.477" FontSize="14.667" FontWeight="Bold" Foreground="White" Grid.RowSpan="3" Grid.Column="3">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="3" BlurRadius="3"/>
            </Label.Effect>
        </Label>
        <Label Content="Roster Group No" Margin="0.012,7.109,10.279,7.975" RenderTransformOrigin="-7.56,-0.234" Foreground="White" Grid.Row="4" Grid.Column="3"/>
        <Label Content="Roster Group Name" Margin="4.227,7.109,0.371,5.975" RenderTransformOrigin="-7.56,-0.234" Foreground="White" Grid.Column="5" Grid.Row="4"/>
        <TextBox Text="{Binding CurrentRosterGroup.roster_group_id}" IsReadOnly="True" HorizontalAlignment="Left" Height="23" Margin="0.329,9.113,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="81" Grid.Column="4" Grid.Row="4"/>
        <TextBox Text="{Binding CurrentRosterGroup.roster_group_name}" HorizontalAlignment="Left" Height="23" Margin="8.503,9.113,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="236" Grid.Column="6" Grid.Row="4" Grid.ColumnSpan="3"/>
        <DataGrid ItemsSource="{Binding Employees}" SelectedItem="{Binding CurrentEmployees}" IsReadOnly="True" AutoGenerateColumns="False" Margin="0.297,0.922,0.409,0.888" Grid.ColumnSpan="4" Grid.Row="6" Grid.Column="2" BorderBrush="{x:Null}" Grid.RowSpan="5">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Emp No" Width="80" Binding="{Binding emp_id}"/>
                <DataGridTextColumn Header="First Name" Width="*" Binding="{Binding first_name}"/>
                <DataGridTextColumn Header="Second Name" Width="*" Binding="{Binding second_name}"/>
            </DataGrid.Columns>
        </DataGrid>
        <DataGrid ItemsSource="{Binding RosterGroupEmployees}" SelectedItem="{Binding CurrentRosterGroupEmployee}" IsReadOnly="True" AutoGenerateColumns="False"  HorizontalAlignment="Left" Margin="1.171,0.422,0,0.888" Width="440" Grid.Column="7" Grid.Row="6" Grid.ColumnSpan="6" BorderBrush="{x:Null}" Grid.RowSpan="5">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Emp No" Width="80" Binding="{Binding emp_id}"/>
                <DataGridTextColumn Header="First Name" Width="*" Binding="{Binding first_name}"/>
                <DataGridTextColumn Header="Second Name" Width="*" Binding="{Binding second_name}"/>
            </DataGrid.Columns>
        </DataGrid>
        <CheckBox IsChecked="{Binding CurrentRosterGroup.is_active, FallbackValue=false, TargetNullValue=false}" Content="Is Active" Margin="3.236,14.109,6.914,9.836" Foreground="White" Grid.Column="9" Grid.Row="4"/>
        <DataGrid ItemsSource="{Binding RosterGroups}" SelectedItem="{Binding CurrentRosterGroup}" IsReadOnly="True" AutoGenerateColumns="False" Margin="1.297,3.367,6.434,4.814" Grid.ColumnSpan="11" Grid.Row="14" Grid.Column="2">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Group No" Width="150" Binding="{Binding roster_group_id}"/>
                <DataGridTextColumn Header="Group Name" Width="*" Binding="{Binding roster_group_name}"/>
                <DataGridCheckBoxColumn Header="Is Active" Width="90" Binding="{Binding is_active}"/>
            </DataGrid.Columns>
        </DataGrid>
        <Button Command="{Binding NewButton}" Content="New" Margin="4.327,0.438,4.759,1.593" Grid.Column="8" Grid.Row="12"/>
        <Button Command="{Binding SaveButton}" Content="Save" Margin="4.827,0.438,4.151,1.593" Grid.Column="9" Grid.Row="12"/>
        <Button Command="{Binding DeleteButton}" Content="Delete" HorizontalAlignment="Left" Margin="5.328,0.243,0,1.788" Width="65" Grid.Column="10" Grid.Row="12"/>
        <Button Command="{Binding AddButton}" Content="&gt;" HorizontalAlignment="Left" Margin="2.003,3.887,0,0" VerticalAlignment="Top" Width="38" Grid.Column="6" Grid.Row="7"/>
        <Button Command="{Binding RemoveButton}" Content="&gt;" HorizontalAlignment="Left" Margin="2.003,2.544,0,0" VerticalAlignment="Top" Width="38" RenderTransformOrigin="0.631,1.514" Grid.Column="6" Grid.Row="9">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="-1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform X="-9.17"/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Label Content="Designation" HorizontalAlignment="Left" Margin="0.012,7.564,0,0" VerticalAlignment="Top" RenderTransformOrigin="-7.56,-0.234" Width="78" Foreground="White" Grid.Row="5" Grid.Column="3"/>
        <ComboBox ItemsSource="{Binding Designations}" SelectedItem="{Binding CurrentDesignation}" DisplayMemberPath="designation" SelectedValuePath="designation_id" HorizontalAlignment="Left" Margin="0.329,11.991,0,0" VerticalAlignment="Top" Width="185" Grid.Column="4" Grid.Row="5" Grid.ColumnSpan="2"/>
        <Rectangle Margin="0,0.002,-0.021,0.794" Grid.ColumnSpan="15" Grid.Row="3">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF81818B" Offset="0"/>
                    <GradientStop Color="#FF81818B" Offset="1"/>
                    <GradientStop Color="#FFC4C4D3" Offset="0.518"/>
                    <GradientStop Color="#FFC4C4D3" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>

    </Grid>
</Window>
