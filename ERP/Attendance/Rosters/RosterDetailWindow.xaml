<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Class="ERP.Attendance.Rosters.RosterDetailWindow"
        Title="RosterDetailWindow" Height="625.306" Width="1017.165" WindowStartupLocation="CenterScreen" WindowStyle="None" Background="{x:Null}" Foreground="{x:Null}" AllowsTransparency="True">
    <Window.Resources>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                            <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Foreground="#FF513838">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Foreground="#FF4D85C3" FontFamily="Segoe UI Semibold"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="BorderStyle3" TargetType="{x:Type Border}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="#FEAEAEAE" Offset="1"/>
                        <GradientStop Color="#FE5B5B5B" Offset="0"/>
                        <GradientStop Color="#FE868686" Offset="0"/>
                        <GradientStop Color="#FE888888" Offset="0"/>
                        <GradientStop Color="#FE9D9D9D" Offset="0"/>
                        <GradientStop Color="#FEA5A5A5" Offset="0"/>
                        <GradientStop Color="#FEA9A9A9" Offset="0"/>
                        <GradientStop Color="#FEABABAB" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#FFDDF3D2"/>
            <Setter Property="CornerRadius" Value="2"/>
        </Style>
        <Style x:Key="TextBoxStyle6" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF68839A" CornerRadius="3" Background="White" Padding="2">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="White" Margin="0,0,-3,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TextBoxStyle5" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF68839A" CornerRadius="3" Background="White" Padding="2">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="White" Margin="0,0,21.333,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="2.662,2.339,3.247,2.254" Source="/ERP;component/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#FFFFFEFE" Height="486.5" VerticalAlignment="Center" HorizontalAlignment="Center" Width="850">
        <Grid.RowDefinitions>
            <RowDefinition Height="0*"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="28*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="57*"/>
            <RowDefinition Height="27*"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="27*"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="27*"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="27*"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="27*"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="27*"/>
            <RowDefinition Height="6*"/>
            <RowDefinition Height="27*"/>
            <RowDefinition Height="167*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="41*"/>
            <ColumnDefinition Width="109*"/>
            <ColumnDefinition Width="240*"/>
            <ColumnDefinition Width="26*"/>
            <ColumnDefinition Width="99*"/>
            <ColumnDefinition Width="26*"/>
            <ColumnDefinition Width="79*"/>
            <ColumnDefinition Width="48*"/>
            <ColumnDefinition Width="31*"/>
            <ColumnDefinition Width="33*"/>
            <ColumnDefinition Width="48*"/>
            <ColumnDefinition Width="38*"/>
            <ColumnDefinition Width="17*"/>
            <ColumnDefinition Width="11*"/>
            <ColumnDefinition Width="0*"/>
        </Grid.ColumnDefinitions>
        <Rectangle Fill="#FF233555" Margin="-16.093,-16.039,-16.135,-16.053" RadiusY="4" RadiusX="4" Stroke="#7E191818" StrokeThickness="16" Grid.ColumnSpan="17" Grid.RowSpan="20"/>

        <CheckBox IsChecked="{Binding CurrentRosterDetail.is_off, FallbackValue=false, TargetNullValue=false}" Content="Is Off" Margin="5,7.324,15,4.704" Foreground="White" Grid.Column="6" Grid.Row="5"/>
        <ComboBox ItemsSource="{Binding In_Days}" SelectedItem="{Binding Current_In_Day}" SelectedValue="{Binding CurrentRosterDetail.in_day_id}" SelectedValuePath="roster_day_id" DisplayMemberPath="roster_day_name" IsEditable="True" Margin="0.654,3.285,29.064,0.743" Grid.Column="4" Grid.Row="7"/>
        <ComboBox ItemsSource="{Binding Out_Days}" SelectedItem="{Binding Current_Out_Day}" SelectedValue="{Binding CurrentRosterDetail.out_day_id}" SelectedValuePath="roster_day_id" DisplayMemberPath="roster_day_name" IsEditable="True" Margin="0,2.462,6.745,2.566" Grid.Column="7" Grid.Row="7" Grid.ColumnSpan="5"/>

        <xctk:MaskedTextBox TextWrapping="Wrap" Text="{Binding CurrentRosterDetail.out_time}" Margin="0,1.962,42.821,2.065" Mask="00:00:00" Grid.Column="7" Grid.Row="9" Grid.ColumnSpan="3"/>
        <xctk:MaskedTextBox TextWrapping="Wrap" Text="{Binding CurrentRosterDetail.roster_on_time}" Margin="1.153,2.277,138.564,1.75" Mask="00:00:00" Grid.Column="4" Grid.Row="13" Width="100"/>
        <ComboBox ItemsSource="{Binding Roster_In_Days}" SelectedItem="{Binding Current_Roster_In_Day}" SelectedValue="{Binding CurrentRosterDetail.roster_in_day_id}" SelectedValuePath="roster_day_id" DisplayMemberPath="roster_day_name" IsEditable="True" Margin="0.655,2.924,29.063,1.103" Grid.Column="4" Grid.Row="11"/>
        <ComboBox ItemsSource="{Binding Roster_Out_Days}" SelectedItem="{Binding Current_Roster_Out_Day}" SelectedValue="{Binding CurrentRosterDetail.roster_out_day_id}" SelectedValuePath="roster_day_id" DisplayMemberPath="roster_day_name" IsEditable="True" HorizontalAlignment="Right" Margin="0,2.767,6.842,2.26" Width="210" Grid.Column="6" Grid.Row="11" Grid.ColumnSpan="6"/>
        <xctk:MaskedTextBox TextWrapping="Wrap" Text="{Binding CurrentRosterDetail.in_time}" Margin="0.653,2.45,139.064,1.577" Mask="00:00:00" Grid.Column="4" Grid.Row="9" Width="100"/>
        <xctk:MaskedTextBox TextWrapping="Wrap" Text="{Binding CurrentRosterDetail.roster_off_time}" Margin="0,1.934,42.821,2.093" Mask="00:00:00" Grid.Column="7" Grid.Row="13" Grid.ColumnSpan="3"/>
        <xctk:MaskedTextBox TextWrapping="Wrap" Text="{Binding CurrentRosterDetail.grace_in}" Margin="0.653,1.946,139.064,2.082" Mask="00:00:00" Grid.Column="4" Grid.Row="15" Width="100"/>
        <xctk:MaskedTextBox TextWrapping="Wrap" Text="{Binding CurrentRosterDetail.grace_out}" Margin="0,1.935,42.821,2.093" Mask="00:00:00" Grid.Column="7" Grid.Row="15" Grid.ColumnSpan="3"/>
        <DataGrid IsReadOnly="True" ItemsSource="{Binding RosterDetails}" SelectedItem="{Binding CurrentRosterDetail, Mode=TwoWay}" AutoGenerateColumns="False" BorderBrush="#FFB1B4B6" Foreground="#FFB1B4B6" Style="{DynamicResource DataGridStyle1}" Margin="5.826,3.361,2.383,5.012" Grid.Column="2" Grid.ColumnSpan="13" Grid.Row="18">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Roster Name" Binding="{Binding roster_detail_name}" Width="200"/>
                <DataGridTextColumn Header="In Day" Binding="{Binding in_day_name}" Width="*"/>
                <DataGridTextColumn Header="Out Day" Binding="{Binding out_day_name}" Width="*"/>
                <DataGridTextColumn Header="In Time" Binding="{Binding in_time}" Width="80"/>
                <DataGridTextColumn Header="Out Time" Binding="{Binding out_time}" Width="80"/>
                <DataGridTextColumn Header="Roster In Day" Binding="{Binding roster_in_day_name}" Visibility="Hidden" Width="*"/>
                <DataGridTextColumn Header="Roster Out Day" Binding="{Binding roster_out_day_name}" Visibility="Hidden" Width="*"/>
                <DataGridTextColumn Header="R. In Time" Binding="{Binding roster_on_time}" Visibility="Visible" Width="80"/>
                <DataGridTextColumn Header="R. Out Time" Binding="{Binding roster_off_time}" Visibility="Visible" Width="80"/>
                <DataGridTextColumn Header="Grace In" Binding="{Binding grace_in}" Visibility="Hidden" Width="*"/>
                <DataGridTextColumn Header="Grace Out" Binding="{Binding grace_out}" Visibility="Hidden" Width="*"/>
                <DataGridCheckBoxColumn Header="Is Off" Binding="{Binding is_off}" Width="50"/>
            </DataGrid.Columns>
        </DataGrid>
        <Label Content="Roster Name" Margin="0,1.167,2.208,1.861" Foreground="White" FontWeight="Bold" FontFamily="Segoe UI Semibold" Grid.Column="3" Grid.Row="5"/>
        <TextBox Text="{Binding CurrentRosterDetail.roster_detail_name}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="#7F000000" Foreground="Black" SpellCheck.IsEnabled="True" Margin="0.654,2.167,29.064,1.861" Grid.Column="4" Grid.Row="5"/>
        <Label Content="In Day" Margin="0,0.467,57,0.561" Foreground="White" FontWeight="Bold" FontFamily="Segoe UI Semibold" Grid.Column="3" Grid.Row="7"/>
        <Label Content="Out Day" Foreground="White" FontWeight="Bold" FontFamily="Segoe UI Semibold" Margin="0,1.457,38.875,1.071" Grid.Column="6" Grid.Row="7"/>
        <Label Content="In Time" Foreground="White" FontWeight="Bold" FontFamily="Segoe UI Semibold" Margin="0.006,1.459,45.994,0.568" Grid.Column="3" Grid.Row="9"/>
        <Label Content="Out Time" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" FontFamily="Segoe UI Semibold" Height="25.5" Margin="0,0.963,37.875,0" Grid.Column="6" Grid.Row="9"/>
        <Label Content="Roster On Day" Foreground="White" FontWeight="Bold" FontFamily="Segoe UI Semibold" Margin="0.006,0.278,7.994,0.749" Grid.Column="3" Grid.Row="11"/>
        <Label Content="Roster Off Day" Height="26.5" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" FontFamily="Segoe UI Semibold" Margin="0,0.267,0,0" HorizontalAlignment="Left" Width="97" Grid.Column="6" Grid.Row="11"/>
        <Label Content="Roster On Time" Foreground="White" FontWeight="Bold" FontFamily="Segoe UI Semibold" Margin="0.006,0.937,8.994,0.09" Grid.Column="3" Grid.Row="13"/>
        <Label Content="Roster Off Time" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" FontFamily="Segoe UI Semibold" Height="25.5" Margin="0.5,0.934,0.375,0" Grid.Column="6" Grid.Row="13"/>
        <Label Content="Grace In" Foreground="White" FontWeight="Bold" FontFamily="Segoe UI Semibold" Margin="0.664,0.447,51.336,1.581" Grid.Column="3" Grid.Row="15"/>
        <Label Content="Grace Out" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" FontFamily="Segoe UI Semibold" Height="26" Margin="0,0.435,14.875,0" Grid.Column="6" Grid.Row="15"/>
        <CheckBox IsChecked="{Binding CurrentRosterDetail.is_active, FallbackValue=false, TargetNullValue=false}" Content="Is Active" HorizontalAlignment="Left" Margin="16,6.667,0,5.361" Width="77" Foreground="White" Grid.Column="7" Grid.Row="5" Grid.ColumnSpan="2"/>
        <Rectangle Margin="0,0,0,49.5" Grid.ColumnSpan="16" Grid.RowSpan="5" MouseLeftButtonDown="Rectangle_MouseLeftButtonDown_1">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF18233A" Offset="0"/>
                    <GradientStop Color="#FF18233A" Offset="1"/>
                    <GradientStop Color="#FF4C5691" Offset="0.518"/>
                    <GradientStop Color="#FF4C5691" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Label Content="Roster Detail" Margin="6.334,5,4.666,5" FontSize="14.667" FontWeight="Bold" Foreground="White" Grid.Column="3" Grid.Row="2" Grid.RowSpan="2">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="3" BlurRadius="3"/>
            </Label.Effect>
        </Label>
        <Image Margin="3.002,0.998,2.998,1.002" Stretch="Fill" Source="/ERP;component/Images/Attendence/form_icon/Roster_Details_logo.png" Grid.Column="2" Grid.Row="2" Grid.RowSpan="2"/>
        <Rectangle Stroke="#FF4D85C3" Margin="0,2.667,0,20.5" Grid.ColumnSpan="16" Grid.Row="4">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF81818B" Offset="0"/>
                    <GradientStop Color="#FF81818B" Offset="1"/>
                    <GradientStop Color="#FFC4C4D3" Offset="0.518"/>
                    <GradientStop Color="#FFC4C4D3" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <TextBox x:Name="SearchBox" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="{Binding Search, UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Top" Width="160" Style="{DynamicResource TextBoxStyle5}" Margin="2.999,7.667,0,0" BorderBrush="#7F000000" SelectionBrush="#FF2B5668" Grid.Column="10" Grid.Row="4" Grid.ColumnSpan="5" />
        <Label Content="Search by Roster Name" Margin="5,5.667,1.876,0" VerticalAlignment="Top" Height="27" Foreground="#FF513838" FontStyle="Italic" FontWeight="Bold" Grid.Column="7" Grid.Row="4" Grid.ColumnSpan="3"/>
        <Button x:Name="close" Content="Button" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" Margin="3.562,2.612,4.438,4.388" Click="close_Click" Grid.Column="14" Grid.Row="2" Grid.ColumnSpan="2" >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button Content="New" Command="{Binding NewButton}" Margin="1.38,0.431,2.528,1.597" Grid.Column="8" Grid.Row="17"/>
        <Button Content="Save" Command="{Binding SaveButton}" Margin="2.231,0.431,1.676,1.597" Grid.Column="9" Grid.Row="17" Grid.ColumnSpan="2"/>
        <Button Content="Delete" Command="{Binding DeleteButton}" Margin="3.046,0.266,2.859,1.762" Grid.Column="11" Grid.Row="17" Grid.ColumnSpan="2"/>

    </Grid>
</Window>
