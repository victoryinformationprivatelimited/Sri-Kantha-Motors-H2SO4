<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:ERP"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="ERP.BasicSearch.EmployeeMultipleSearchWindow"
        Title="EmployeeMultipleSearchWindow" Topmost="True" Height="659" Width="1118.325" MinHeight="659" MinWidth="1118.325"  AllowsTransparency="True" WindowStyle="None"  Background="{x:Null}" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" ShowInTaskbar="False">
    <Window.Resources>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                            <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Foreground="#FF513838" FontFamily="Segoe UI Semibold">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Foreground="#FF4D85C3"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="BorderStyle3" TargetType="{x:Type Border}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="#FEAEAEAE" Offset="1"/>
                        <GradientStop Color="#FE5B5B5B" Offset="0"/>
                        <GradientStop Color="#FE868686" Offset="0"/>
                        <GradientStop Color="#FE888888" Offset="0"/>
                        <GradientStop Color="#FE9D9D9D" Offset="0"/>
                        <GradientStop Color="#FEA5A5A5" Offset="0"/>
                        <GradientStop Color="#FEA9A9A9" Offset="0"/>
                        <GradientStop Color="#FEABABAB" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#FFDDF3D2"/>
            <Setter Property="CornerRadius" Value="2"/>
        </Style>
        <Style x:Key="TextBoxStyle5" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF68839A" CornerRadius="3" Background="White" Padding="2">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="White" Margin="0,0,21.333,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFE4E4E4" Offset="0.992"/>
                                        <GradientStop Color="#FFEAE7E7"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                            <Label x:Name="label" Content="Get" HorizontalAlignment="Left" VerticalAlignment="Top" Width="37.5" Margin="13.666,0,0,0" Foreground="#FF5F5F5F"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="2.662,2.339,3.247,2.254" Source="/ERP;component/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="OnLoaded1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="DropDown">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="grid1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="246"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="grid1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.4"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="DropDown_Reverse">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="grid1">
                <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="24"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="grid1">
                <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource OnLoaded1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="button">
            <BeginStoryboard x:Name="DropDown_BeginStoryboard" Storyboard="{StaticResource DropDown}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid1">
            <BeginStoryboard x:Name="DropDown_Reverse_BeginStoryboard" Storyboard="{StaticResource DropDown_Reverse}"/>
        </EventTrigger>
    </Window.Triggers>
    <Grid x:Name="grid" Background="White" Margin="100,60,104,52" RenderTransformOrigin="0.5,0.5">
        <Grid.RenderTransform>
            <TransformGroup>
                <ScaleTransform/>
                <SkewTransform/>
                <RotateTransform/>
                <TranslateTransform/>
            </TransformGroup>
        </Grid.RenderTransform>
        <Grid.RowDefinitions>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="77*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="414*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="30*"/>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="725*"/>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="154*"/>
            <ColumnDefinition Width="10*"/>
        </Grid.ColumnDefinitions>
        <Rectangle Fill="#FF2B3D5D" HorizontalAlignment="Left" Height="607" Margin="-23,-28,-28,-31.514" RadiusY="4" RadiusX="4" Stroke="#7E191818" StrokeThickness="16" VerticalAlignment="Top" Width="965" Grid.ColumnSpan="5" Grid.RowSpan="7"/>

        <Rectangle Stroke="#FF4D85C3" Grid.ColumnSpan="5" Grid.Row="1" Margin="0,37.347,0,1.635">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF6A6A6A" Offset="0"/>
                    <GradientStop Color="#FF6A6A6A" Offset="0.989"/>
                    <GradientStop Color="#FF82818F" Offset="0.521"/>
                    <GradientStop Color="#FF82818F" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>

        <local:CustomDataGrid xmlns:local="clr-namespace:ERP" AutoGenerateColumns="False" Style="{DynamicResource DataGridStyle1}" HorizontalAlignment="Left" Margin="1,35.081,0,0" VerticalAlignment="Top" Width="419" Height="407" Grid.Column="1" Grid.Row="3" BorderBrush="#FFB1B4B6" Foreground="#FFB1B4B6" ItemsSource="{Binding EmployeeSearchViews, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
    		SelectionMode="Extended"
    		AlternatingRowBackground="LightSteelBlue" SelectionUnit="FullRow"
    		IsReadOnly="True"
    		SnapsToDevicePixels="True"
    		SelectedItemsList="{Binding TestSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.RowSpan="3" >
            <local:CustomDataGrid.Columns>
                <DataGridTextColumn Header="Employee ID" Binding="{Binding emp_id}" Width="120"/>
                <DataGridTextColumn Header="First Name" Binding="{Binding first_name}" Width="*"/>
                <DataGridTextColumn Header="Last Name" Binding="{Binding surname}" Width="*"/>
            </local:CustomDataGrid.Columns>
        </local:CustomDataGrid>
        <Rectangle Margin="0,0,0,39.653" Grid.ColumnSpan="5" Grid.RowSpan="2" MouseLeftButtonDown="Rectangle_MouseLeftButtonDown_1">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF18233A" Offset="0"/>
                    <GradientStop Color="#FF18233A" Offset="1"/>
                    <GradientStop Color="#FF4C5691" Offset="0.518"/>
                    <GradientStop Color="#FF4C5691" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Image HorizontalAlignment="Left" Height="35" Margin="1.314,2,0,0" VerticalAlignment="Top" Width="40" Source="/ERP;component/Images/City_logo.png" Stretch="Fill" Grid.Column="1" Grid.RowSpan="2"/>
        <Label Content="Employee Search" Margin="41.314,3.346,0,44.954" HorizontalAlignment="Left" Width="168.662" FontSize="14.667" FontWeight="Bold" Foreground="White" Grid.Column="1" Grid.RowSpan="2">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="3" BlurRadius="3"/>
            </Label.Effect>
        </Label>
        <Label Content="Search" Grid.Column="1" Margin="522.782,42.347,155.966,0" Grid.Row="1" VerticalAlignment="Top" Height="25.832" Foreground="#FF513838" FontStyle="Italic" FontWeight="Bold"/>
        <TextBox x:Name="searchbox_Copy" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="{Binding Search, UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Top" Width="151.7" Grid.Column="3" Grid.Row="1" Style="{DynamicResource TextBoxStyle5}" Margin="1.124,44.225,0,0" BorderBrush="#7F000000" SelectionBrush="#FF2B5668" />
        <ComboBox x:Name="Search" SelectedIndex="{Binding SearchIndex}" HorizontalAlignment="Left" Margin="571.507,44.225,0,0" VerticalAlignment="Top" Width="156" Height="23" BorderBrush="Black" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2">
            <ComboBox.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                    <GradientStop Color="#FFF0F0F0" Offset="1"/>
                </LinearGradientBrush>
            </ComboBox.Background>
        </ComboBox>
        <Image Grid.Column="3" HorizontalAlignment="Left" Height="15.804" Margin="133.74,47.971,0,0" Grid.Row="1" VerticalAlignment="Top" Width="17.848"  Opacity="0.5" Source="/ERP;component/Images/1366799402_SEARCH.png"/>
        <Button x:Name="button1_Copy" Content="Get" Grid.Column="3" Height="25" Grid.Row="5" Style="{DynamicResource ButtonStyle1}" VerticalAlignment="Top" Click="btnSelectEmployee_Click" Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Margin="111,29.029,-12,-14.514" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button x:Name="button2" Content="Button" Grid.Column="3" Margin="127,1.081,5,44.919" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" Click="button2_Click" Grid.Row="1" Grid.ColumnSpan="2" >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button Command="{Binding AddButton}" Content="+" Grid.Column="1" HorizontalAlignment="Left" Margin="420,143.081,0,0" Grid.Row="3" VerticalAlignment="Top" Width="53" Height="44" FontSize="24"/>
        <Button Command="{Binding RemoveButton}" Content="-" Grid.Column="1" HorizontalAlignment="Left" Margin="420,249.081,0,0" Grid.Row="3" VerticalAlignment="Top" Width="53" Height="46" FontSize="24" FontWeight="Bold"/>
        <local:CustomDataGrid AutoGenerateColumns="False" Style="{DynamicResource DataGridStyle1}" HorizontalAlignment="Left" Margin="472,35.081,0,0" VerticalAlignment="Top" Width="419" Height="407" Grid.Column="1" Grid.Row="3" BorderBrush="#FFB1B4B6" Foreground="#FFB1B4B6" ItemsSource="{Binding SelectedList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
        	SelectionMode="Extended"
        	AlternatingRowBackground="LightSteelBlue" SelectionUnit="FullRow"
        	IsReadOnly="True"
        	SnapsToDevicePixels="True"
        	SelectedItemsList="{Binding SelectedOtherGrid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.RowSpan="3" Grid.ColumnSpan="3" >
            <local:CustomDataGrid.Columns>
                <DataGridTextColumn Header="Employee ID" Binding="{Binding emp_id}" Width="120"/>
                <DataGridTextColumn Header="First Name" Binding="{Binding first_name}" Width="*"/>
                <DataGridTextColumn Header="Last Name" Binding="{Binding surname}" Width="*"/>
            </local:CustomDataGrid.Columns>
        </local:CustomDataGrid>
        <ComboBox ItemsSource="{Binding Branches}" SelectedItem="{Binding CurrentBranch}" DisplayMemberPath="companyBranch_Name" Grid.Column="1" HorizontalAlignment="Left" Margin="46,0.081,0,0" Grid.Row="3" VerticalAlignment="Top" Width="150" Height="24"/>
        <ComboBox ItemsSource="{Binding Department}" SelectedItem="{Binding CurrentDepartment}" DisplayMemberPath="department_name" Grid.Column="1" HorizontalAlignment="Left" Margin="270,0.081,0,0" Grid.Row="3" VerticalAlignment="Top" Width="150" Height="24"/>
        <Label Content="Branch" Grid.Column="1" HorizontalAlignment="Left" Margin="1,9.081,0,0" Grid.Row="2" VerticalAlignment="Top" Foreground="White" Grid.RowSpan="2"/>
        <Label Content="Department" Grid.Column="1" HorizontalAlignment="Left" Margin="196,9.081,0,0" Grid.Row="2" VerticalAlignment="Top" Foreground="White" Grid.RowSpan="2"/>
        <ComboBox ItemsSource="{Binding Section}" SelectedItem="{Binding CurrentSection}" DisplayMemberPath="section_name" Grid.Column="1" HorizontalAlignment="Left" Margin="472,0.081,0,0" Grid.Row="3" VerticalAlignment="Top" Width="150" Height="24"/>
        <Grid x:Name="grid1" Grid.ColumnSpan="3" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="651,0.081,0,0" Grid.Row="3" VerticalAlignment="Top" Width="240">
            <Grid.Effect>
                <DropShadowEffect Opacity="0" RenderingBias="Quality"/>
            </Grid.Effect>
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#B2515DA0" Offset="0"/>
                    <GradientStop Color="#B22B3D5D" Offset="1"/>
                    <GradientStop Color="#7F4C5D91" Offset="0.555"/>
                </LinearGradientBrush>
            </Grid.Background>
            <ComboBox ItemsSource="{Binding Designation}" SelectedItem="{Binding CurrentDesignation}" DisplayMemberPath="designation" HorizontalAlignment="Left" Margin="117,34,0,0" VerticalAlignment="Top" Width="120"/>
            <ComboBox ItemsSource="{Binding Grades}" SelectedItem="{Binding CurrentGrades}" DisplayMemberPath="grade" HorizontalAlignment="Left" Margin="117,61,0,0" VerticalAlignment="Top" Width="120"/>
            <Label Content="Designation" HorizontalAlignment="Left" Margin="10,34,0,0" VerticalAlignment="Top" Foreground="White"/>
            <Label Content="Grade" HorizontalAlignment="Left" Margin="10,61,0,0" VerticalAlignment="Top" Foreground="White"/>
            <Label Content="Gender" HorizontalAlignment="Left" Margin="10,192,0,0" VerticalAlignment="Top" Foreground="White"/>
            <ComboBox ItemsSource="{Binding Gender}" HorizontalAlignment="Left" Margin="117,196,0,0" VerticalAlignment="Top" Width="120"/>
            <Rectangle HorizontalAlignment="Left" Height="24" Stroke="#FF000104" VerticalAlignment="Top" Width="240">
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF435186" Offset="0.01"/>
                        <GradientStop Color="#FF2B3D5D" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Label Content="More " HorizontalAlignment="Left" Margin="171,-1,0,0" VerticalAlignment="Top" Height="24" Foreground="White"/>
            <Button x:Name="button" Content="+" HorizontalAlignment="Left" Margin="213,0,0,0" VerticalAlignment="Top" Width="24" Height="24" BorderBrush="Black" FontSize="14" FontWeight="Bold">
                <Button.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF2B3D5D" Offset="0"/>
                        <GradientStop Color="#FF3E5991" Offset="1"/>
                    </LinearGradientBrush>
                </Button.Background>
            </Button>
            <ComboBox ItemsSource="{Binding City}" SelectedItem="{Binding CurrentCity}" DisplayMemberPath="city" HorizontalAlignment="Left" Margin="117,88,0,0" VerticalAlignment="Top" Width="120"/>
            <Label Content="District" HorizontalAlignment="Left" Margin="10,84,0,0" VerticalAlignment="Top" Foreground="White"/>
            <ComboBox ItemsSource="{Binding Town}" SelectedItem="{Binding CurrentTown}" DisplayMemberPath="town_name" HorizontalAlignment="Left" Margin="117,115,0,0" VerticalAlignment="Top" Width="120"/>
            <Label Content="Religion" HorizontalAlignment="Left" Margin="10,165,0,0" VerticalAlignment="Top" Foreground="White"/>
            <ComboBox ItemsSource="{Binding PaymentMethod}" SelectedItem="{Binding CurrentPaymentMethod}" DisplayMemberPath="payment_method" HorizontalAlignment="Left" Margin="117,142,0,0" VerticalAlignment="Top" Width="120"/>
            <ComboBox ItemsSource="{Binding Religion}" SelectedItem="{Binding CurrentReligion}" DisplayMemberPath="religen_name" HorizontalAlignment="Left" Margin="117,169,0,0" VerticalAlignment="Top" Width="120"/>
            <Rectangle HorizontalAlignment="Left" Height="24" Stroke="#FF000104" VerticalAlignment="Top" Width="240" Margin="0,223,0,-1">
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF435186" Offset="0.01"/>
                        <GradientStop Color="#FF2B3D5D" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Label Content="Town" HorizontalAlignment="Left" Margin="10,111,0,0" VerticalAlignment="Top" Foreground="White"/>
            <Label Content="Payment Method" HorizontalAlignment="Left" Margin="10,138,0,0" VerticalAlignment="Top" Foreground="White"/>
            <Button Command="{Binding RefreshButton}" Content="R" x:Name="button_Copy1" HorizontalAlignment="Left" Margin="60,0,0,0" VerticalAlignment="Top" Width="24" Height="24" BorderBrush="Black" FontSize="14" FontWeight="Bold">
                <Button.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF787780" Offset="0"/>
                        <GradientStop Color="#FF7B7A84" Offset="1"/>
                        <GradientStop Color="#FF797881" Offset="0.355"/>
                        <GradientStop Color="#FFB4B4B4" Offset="0.916"/>
                    </LinearGradientBrush>
                </Button.Background>
            </Button>
            <Label Content="Refresh" HorizontalAlignment="Left" Margin="12,-1,0,0" VerticalAlignment="Top" Height="24" Foreground="White"/>
        </Grid>
        <Label Content="Section" Grid.Column="1" HorizontalAlignment="Left" Margin="425,9.081,0,0" Grid.Row="2" VerticalAlignment="Top" Foreground="White" Grid.RowSpan="2" Width="49"/>

    </Grid>
</Window>
