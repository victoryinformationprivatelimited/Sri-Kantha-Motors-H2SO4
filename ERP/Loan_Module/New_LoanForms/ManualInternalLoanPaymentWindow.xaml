<Window x:Class="ERP.Loan_Module.New_LoanForms.ManualInternalLoanPaymentWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="ManualInternalLoanPaymentWindow" Height="692.023" Width="957.704" AllowsTransparency="True" WindowStyle="None" Visibility="Visible" Background="{x:Null}" Foreground="{x:Null}" MouseLeftButtonDown="Window_MouseLeftButtonDown" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="2.662,2.339,3.247,2.254" Source="/ERP;component/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="BorderStyle3" TargetType="{x:Type Border}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="#FEAEAEAE" Offset="1"/>
                        <GradientStop Color="#FE5B5B5B" Offset="0"/>
                        <GradientStop Color="#FE868686" Offset="0"/>
                        <GradientStop Color="#FE888888" Offset="0"/>
                        <GradientStop Color="#FE9D9D9D" Offset="0"/>
                        <GradientStop Color="#FEA5A5A5" Offset="0"/>
                        <GradientStop Color="#FEA9A9A9" Offset="0"/>
                        <GradientStop Color="#FEABABAB" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#FFDDF3D2"/>
            <Setter Property="CornerRadius" Value="2"/>
        </Style>
        <Style x:Key="TextBoxStyle5" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnGotFocus1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF68839A"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF86C7FF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnLostFocus1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF86C7FF"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF68839A" CornerRadius="2" Background="White" Padding="2">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="White" Margin="0" HorizontalAlignment="Left" Width="128.868"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="FocusManager.LostFocus" SourceName="PART_ContentHost">
                                <BeginStoryboard x:Name="OnLostFocus1_BeginStoryboard" Storyboard="{StaticResource OnLostFocus1}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="FocusManager.GotFocus" SourceName="border">
                                <BeginStoryboard Storyboard="{StaticResource OnGotFocus1}"/>
                            </EventTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Background="White" Margin="37,23">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="884"/>
        </Grid.ColumnDefinitions>

        <Rectangle Fill="#FF2B3D5D" RadiusY="4" RadiusX="4" Stroke="#7E191818" StrokeThickness="16" Margin="-12,-16,-21,-16"/>
        <DataGrid IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding InternalLoanView}" SelectedItem="{Binding CurrentInternalView}" HorizontalAlignment="Left" Margin="18,349,0,0" VerticalAlignment="Top" Height="125" Width="840">
            <DataGrid.Columns>
                <DataGridTextColumn Header="EPF No" Width="*" Binding="{Binding epf_no}" />
                <DataGridTextColumn Header="Loan Name" Width="*" Binding="{Binding loan_name}"/>
                <DataGridTextColumn Header="Remaining Amount" Width="*" Binding="{Binding LoanRemainingAmount}" />
                <DataGridTextColumn Header="Intrest Rate" Width="*" Binding="{Binding LoanIntrestRate}"/>
            </DataGrid.Columns>
        </DataGrid>
        <Label Content="Employee Name" HorizontalAlignment="Left" Margin="45,86,0,0" VerticalAlignment="Top" Foreground="White"/>
        <Label Content="Employee EPF" HorizontalAlignment="Left" Margin="438,112,0,0" VerticalAlignment="Top" Foreground="White"/>
        <Label Content="Employee NIC" HorizontalAlignment="Left" Margin="45,116,0,0" VerticalAlignment="Top" Foreground="White"/>
        <Label Content="Loan Name" HorizontalAlignment="Left" Margin="37,178,0,0" VerticalAlignment="Top" Foreground="White"/>
        <Label Content="Internal Loan ID" HorizontalAlignment="Left" Margin="462,181,0,0" VerticalAlignment="Top" Foreground="White"/>
        <Label Content="Loan Remaining Amount" HorizontalAlignment="Left" Margin="28,209,0,0" VerticalAlignment="Top" Foreground="White"/>
        <Label Content="Payable Amount With Intrest" HorizontalAlignment="Left" Margin="462,238,0,0" VerticalAlignment="Top" Foreground="White"/>
        <DataGrid Visibility="{Binding DisableGuarantor}" ItemsSource="{Binding SelectedGurantorGrid}" SelectedItem="{Binding CurrentSelectedGurantorGrid}" IsReadOnly="True" AutoGenerateColumns="False" HorizontalAlignment="Left" Margin="20,501,0,0" VerticalAlignment="Top" Height="116" Width="511">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Guarantor EPF" Width="*" Binding="{Binding epf_no}"/>
                <DataGridTextColumn Header="Guarantor First Name" Width="*" Binding="{Binding first_name}"/>
                <DataGridTextColumn Header="Guarantor Last Name" Width="*" Binding="{Binding surname}"/>
            </DataGrid.Columns>
        </DataGrid>
        <CheckBox Visibility="{Binding DisableGuarantor}" IsChecked="{Binding IsGuarantor}" Content="Guarantor Pay By Cash" HorizontalAlignment="Left" Margin="266,314,0,0" VerticalAlignment="Top" Foreground="White"/>
        <Label Content="Comments" HorizontalAlignment="Left" Margin="462,308,0,0" VerticalAlignment="Top" Foreground="White"/>
        <TextBox IsEnabled="False" HorizontalAlignment="Left" Height="24" Margin="177,88,0,0" TextWrapping="Wrap" Text="{Binding CurrentInternalView.first_name}" VerticalAlignment="Top" Width="216"/>
        <TextBox IsEnabled="False" HorizontalAlignment="Left" Height="24" Margin="177,114,0,0" TextWrapping="Wrap" Text="{Binding CurrentInternalView.nic}" VerticalAlignment="Top" Width="216"/>
        <TextBox IsEnabled="False" HorizontalAlignment="Left" Height="24" Margin="577,85,0,0" TextWrapping="Wrap" Text="{Binding CurrentInternalView.surname}" VerticalAlignment="Top" Width="219"/>
        <TextBox IsEnabled="False" HorizontalAlignment="Left" Height="22" Margin="577,114,0,0" TextWrapping="Wrap" Text="{Binding CurrentInternalView.epf_no}" VerticalAlignment="Top" Width="219"/>
        <TextBox IsEnabled="False" HorizontalAlignment="Left" Height="23" Margin="213,176,0,0" TextWrapping="Wrap" Text="{Binding CurrentInternalView.loan_name}" VerticalAlignment="Top" Width="197"/>
        <TextBox IsEnabled="False" HorizontalAlignment="Left" Height="23" Margin="213,209,0,0" TextWrapping="Wrap" Text="{Binding CurrentInternalView.LoanRemainingAmount}" VerticalAlignment="Top" Width="197"/>
        <TextBox IsEnabled="False" HorizontalAlignment="Left" Height="23" Margin="629,178,0,0" TextWrapping="Wrap" Text="{Binding CurrentInternalView.InternalLoanID}" VerticalAlignment="Top" Width="202"/>
        <TextBox IsEnabled="False" HorizontalAlignment="Left" Height="23" Margin="629,237,0,0" TextWrapping="Wrap" Text="{Binding PaidAmount}" VerticalAlignment="Top" Width="202"/>
        <TextBox HorizontalAlignment="Left" Height="48" Margin="546,286,0,0" TextWrapping="Wrap" Text="{Binding Comments}" VerticalAlignment="Top" Width="312"/>
        <CheckBox Visibility="{Binding DisableGuarantor}" IsChecked="{Binding GPayThroughNewLoan}" Content="Guarantor Pay Through New Loan" HorizontalAlignment="Left" Margin="18,314,0,0" VerticalAlignment="Top" Foreground="White"/>
        <TextBox IsEnabled="False" HorizontalAlignment="Left" Height="23" Margin="629,208,0,0" TextWrapping="Wrap" Text="{Binding CurrentInternalView.LoanIntrestRate}" VerticalAlignment="Top" Width="202"/>
        <Button Visibility="Hidden" Command="{Binding BTNCalcutatePayableAmount}" Content="+" HorizontalAlignment="Left" Margin="421,242,0,0" VerticalAlignment="Top" Width="34"/>
        <Button Command="{Binding BTNPAY}" Content="Pay" HorizontalAlignment="Left" Margin="755,539,0,0" VerticalAlignment="Top" Width="76"/>
        <Button Command="{Binding BTNNew}" Content="New" HorizontalAlignment="Left" Margin="753,504,0,0" VerticalAlignment="Top" Width="75"/>
        <Label Content="Payable Amount Without Intrest" HorizontalAlignment="Left" Margin="28,237,0,0" VerticalAlignment="Top" Foreground="White"/>
        <TextBox IsEnabled="{Binding PayAmtValidate}" HorizontalAlignment="Left" Height="23" Margin="213,241,0,0" TextWrapping="Wrap" Text="{Binding PayingAmount}" VerticalAlignment="Top" Width="197"/>
        <GroupBox Header="Employee Details" HorizontalAlignment="Left" Margin="10,68,0,0" VerticalAlignment="Top" Height="81" Width="848" Foreground="White"/>
        <GroupBox Header="Loan Details" HorizontalAlignment="Left" Margin="14,154,0,0" VerticalAlignment="Top" Width="844" Height="122" Foreground="White"/>
        <Label Content="Loan Intrest Rate" HorizontalAlignment="Left" Margin="462,206,0,0" VerticalAlignment="Top" Foreground="White"/>
        <Label Content="Employee Surname" HorizontalAlignment="Left" Margin="438,88,0,0" VerticalAlignment="Top" Foreground="White"/>
        <Rectangle Margin="0,35,0,586" Height="25">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF81818B" Offset="0"/>
                    <GradientStop Color="#FF81818B" Offset="1"/>
                    <GradientStop Color="#FFC4C4D3" Offset="0.56"/>
                    <GradientStop Color="#FFC4C4D3" Offset="0.474"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Rectangle Margin="0,0,0,611" Height="35">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF18233A" Offset="0"/>
                    <GradientStop Color="#FF18233A" Offset="1"/>
                    <GradientStop Color="#FF4C5691" Offset="0.569"/>
                    <GradientStop Color="#FF4C5691" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Label Content="Manual Internal Loan Payment" HorizontalAlignment="Left" Margin="14,6,0,0" VerticalAlignment="Top" Foreground="White" FontFamily="/ERP;component/Fonts/#Segoe UI Semibold" FontWeight="Bold"/>
        <Button x:Name="button2" Content="Button" Margin="838,10,26,616" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" Click="button2_Click" Width="20" Height="20" >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Label Content="Search By EPF" Margin="589,37,199,0" VerticalAlignment="Top" Height="33" Foreground="White" FontStyle="Italic" FontWeight="Bold" Background="{x:Null}"/>
        <TextBox HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="{Binding Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Top" Width="148" Style="{DynamicResource TextBoxStyle5}" BorderBrush="#7F000000" SelectionBrush="#FF2B5668" Margin="696,37,0,0" />

    </Grid>
</Window>
