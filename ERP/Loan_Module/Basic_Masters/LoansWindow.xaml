<Window x:Class="ERP.Loan_Module.Basic_Masters.LoansWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="LoansWindow"  Height="700" Width="1152.166" AllowsTransparency="True" WindowStyle="None" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" Background="{x:Null}" Foreground="{x:Null}" >
    <Window.Resources>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                            <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Foreground="#FF513838" FontFamily="Segoe UI Semibold">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Foreground="#FF4D85C3"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="2.662,2.339,3.247,2.254" Source="/ERP;component/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="BorderStyle3" TargetType="{x:Type Border}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="#FEAEAEAE" Offset="1"/>
                        <GradientStop Color="#FE5B5B5B" Offset="0"/>
                        <GradientStop Color="#FE868686" Offset="0"/>
                        <GradientStop Color="#FE888888" Offset="0"/>
                        <GradientStop Color="#FE9D9D9D" Offset="0"/>
                        <GradientStop Color="#FEA5A5A5" Offset="0"/>
                        <GradientStop Color="#FEA9A9A9" Offset="0"/>
                        <GradientStop Color="#FEABABAB" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#FFDDF3D2"/>
            <Setter Property="CornerRadius" Value="2"/>
        </Style>
        <Style x:Key="TextBoxStyle5" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnGotFocus1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF68839A"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF86C7FF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnLostFocus1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF86C7FF"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF68839A" CornerRadius="2" Background="White" Padding="2">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="White" Margin="0" HorizontalAlignment="Left" Width="128.868"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="FocusManager.LostFocus" SourceName="PART_ContentHost">
                                <BeginStoryboard x:Name="OnLostFocus1_BeginStoryboard" Storyboard="{StaticResource OnLostFocus1}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="FocusManager.GotFocus" SourceName="border">
                                <BeginStoryboard Storyboard="{StaticResource OnGotFocus1}"/>
                            </EventTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TextBoxStyle6" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnGotFocus1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF336CE6"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.995"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Storyboard1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF336CE6"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.4" Value="White"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF918F8F" CornerRadius="2" Background="White" Padding="2">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="#FF3553D8" Margin="0,0,-3,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="FocusManager.GotFocus" SourceName="PART_ContentHost"/>
                            <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                            <EventTrigger RoutedEvent="FocusManager.LostFocus" SourceName="PART_ContentHost"/>
                            <EventTrigger RoutedEvent="FocusManager.LostFocus" SourceName="PART_ContentHost">
                                <BeginStoryboard x:Name="OnGotFocus1_BeginStoryboard" Storyboard="{StaticResource OnGotFocus1}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle21" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFE4E4E4" Offset="0.992"/>
                                        <GradientStop Color="#FFEAE7E7"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                            <Label x:Name="label" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="44.833" Margin="11.335,0,0,0" Foreground="#FF5F5F5F"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle19" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFE4E4E4" Offset="0.992"/>
                                        <GradientStop Color="#FFEAE7E7"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                            <Label x:Name="label" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="37.5" Margin="13.666,0,0,0" Foreground="#FF5F5F5F"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle22" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFE4E4E4" Offset="0.992"/>
                                        <GradientStop Color="#FFEAE7E7"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                            <Label x:Name="label" Content="New" HorizontalAlignment="Left" VerticalAlignment="Top" Width="37.5" Margin="13.666,0,0,0" Foreground="#FF5F5F5F"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="87,63,75,53">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition Width="509*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0*"/>
            <RowDefinition Height="583*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Rectangle Fill="#FF233555" Margin="-17,-18,-16,-17" RadiusY="4" RadiusX="4" Stroke="#7E191818" StrokeThickness="16" Grid.RowSpan="3" Grid.ColumnSpan="3"/>
        <Rectangle MouseLeftButtonDown="Rectangle_MouseLeftButtonDown_1" HorizontalAlignment="Left" Width="1020" Height="46" VerticalAlignment="Top" Grid.ColumnSpan="3" Grid.RowSpan="2">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF18233A" Offset="0.003"/>
                    <GradientStop Color="#FF18233A" Offset="1"/>
                    <GradientStop Color="#FF4C5691" Offset="0.518"/>
                    <GradientStop Color="#FF4C5691" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Label Content="Loans" Margin="53,7,0,0" HorizontalAlignment="Left" Width="58" Height="32" VerticalAlignment="Top" FontSize="14.667" FontWeight="Bold" Foreground="White" MouseLeftButtonDown="Label_MouseLeftButtonDown_1" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="3" BlurRadius="2"/>
            </Label.Effect>
        </Label>
        <Rectangle Stroke="#FF4D85C3" Margin="0,44,0,0" Height="39" VerticalAlignment="Top" Grid.ColumnSpan="3" Grid.RowSpan="2">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF81818B" Offset="0"/>
                    <GradientStop Color="#FF81818B" Offset="0.991"/>
                    <GradientStop Color="#FFC4C4D3" Offset="0.518"/>
                    <GradientStop Color="#FFC4C4D3" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Label Content="Search" Margin="770,49,0,0" VerticalAlignment="Top" Height="23" Foreground="#FF513838" FontStyle="Italic" FontWeight="Bold" HorizontalAlignment="Left" Width="51" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
        <TextBox x:Name="searchbox" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="{Binding Search,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Top" Width="150" Style="{DynamicResource TextBoxStyle5}" BorderBrush="#7F000000" TextChanged="TextBox_TextChanged_1" SelectionBrush="#FF2B5668" Margin="828,51,0,0" Grid.ColumnSpan="2" Grid.RowSpan="2" />
        <Image HorizontalAlignment="Left" Height="16" Margin="960,55,0,0" VerticalAlignment="Top" Width="18" Source="/ERP;component/Images/1366799402_SEARCH.png" Opacity="0.5" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
        <Button Visibility="Hidden" x:Name="button1_Copy1" Content="Delete" Style="{DynamicResource ButtonStyle21}" Command="{Binding DeleteButton}" Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Margin="905,549,0,0" HorizontalAlignment="Left" Width="65" Height="25" VerticalAlignment="Top" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button x:Name="button1_Copy" Content="Save" Style="{DynamicResource ButtonStyle19}" Command="{Binding SaveButton}" Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Margin="834,549,0,0" HorizontalAlignment="Left" Width="66" Height="25" VerticalAlignment="Top" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button x:Name="button1_Copy2" Content="New" Style="{DynamicResource ButtonStyle22}" Command="{Binding NewButton}" Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Margin="761,549,0,0" HorizontalAlignment="Left" Width="66" Height="25" VerticalAlignment="Top" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button x:Name="button2_Copy" Content="Button" Margin="948,7,0,546" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" Click="button2_Click" Grid.ColumnSpan="2" Grid.RowSpan="2" HorizontalAlignment="Left" Width="30" >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Image Margin="10,7,0,0" Source="/ERP;component/Images/New_Button/New_Loan_Button/Create Loan.png" Stretch="Fill" Width="30" Height="30" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
        <TabControl HorizontalAlignment="Left" Height="444" Margin="10,88,0,0" VerticalAlignment="Top" Width="968" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <TabItem Header="Loan Details" FontFamily="/ERP;component/Fonts/#Segoe UI Semibold" FontSize="14" Margin="-2,-2,-14,0">
                <Grid Background="#FF233555">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="23*"/>
                        <RowDefinition Height="26*"/>
                        <RowDefinition Height="20*"/>
                        <RowDefinition Height="26*"/>
                        <RowDefinition Height="20*"/>
                        <RowDefinition Height="26*"/>
                        <RowDefinition Height="272*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="9*"/>
                        <ColumnDefinition Width="457*"/>
                        <ColumnDefinition Width="496*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid SelectionMode="Single" IsReadOnly="True" ItemsSource="{Binding Loans}" SelectedItem="{Binding CurrentLoan}" AutoGenerateColumns="False" Margin="5,21,0,10" BorderBrush="#FFB1B4B6" Foreground="#FFB1B4B6" Style="{DynamicResource DataGridStyle1}" HorizontalAlignment="Left" Width="954" Grid.Row="6" Grid.ColumnSpan="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Loan Category" Binding="{Binding loan_catergory_name}" Width="*"/>
                            <DataGridTextColumn Header="Loan" Binding="{Binding loan_name}" Width="*"/>
                            <DataGridTextColumn Header="Maximum Amount" Binding="{Binding maximum_amount, StringFormat=N2}" Width="*"/>
                            <DataGridTextColumn Header="Minimum Amount" Binding="{Binding minimum_amount, StringFormat=N2}" Width="*"/>
                            <DataGridTextColumn Header="Loan Rate" Binding="{Binding default_rate}" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <ComboBox ToolTip="Select A Loan Category" IsEditable="True" ItemsSource="{Binding LoanCategories}" SelectedItem="{Binding CurrentLoanCategory}" DisplayMemberPath="loan_catergory_name" Margin="142,0,0,1" HorizontalAlignment="Left" Width="234" Grid.Row="1" Grid.Column="1"/>
                    <ComboBox ToolTip="Select Maximum Loan Duration Type" x:Name="CMBMaxDurationType" SelectedIndex="{Binding MaxDurationType}" Margin="393,1,0,0" HorizontalAlignment="Left" Width="95" Height="25" Grid.Row="5" Grid.Column="2"/>
                    <ComboBox ToolTip="Select Minimum Loan Duration Type" Name="CMBMinDurationType" SelectedIndex="{Binding MinDurationType}"  Margin="352,1,0,0" HorizontalAlignment="Left" Width="85" Height="25" Grid.Row="5" Grid.Column="1"/>
                    <Label Content="Loan Category Name" Margin="1,0,0,0" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" HorizontalAlignment="Left" Width="144" Grid.Row="1" FontSize="11" Grid.Column="1"/>
                    <TextBox ToolTip="Enter Loan Name" Height="26" TextWrapping="Wrap" Text="{Binding CurrentLoan.loan_name}"  VerticalAlignment="Top" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" HorizontalAlignment="Left" Width="282" Grid.Row="1" Grid.Column="2" Margin="91,0,0,0"/>
                    <Label Content="Loan Name" Margin="9,1,0,0" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" HorizontalAlignment="Left" Width="83" Grid.Row="1" FontSize="11" Grid.Column="2"/>
                    <Label Content="Loan Maximum Amount" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" Margin="324,19,0,1" HorizontalAlignment="Left" Width="131" Grid.Row="2" FontSize="11" Grid.Column="1" Grid.RowSpan="2"/>
                    <TextBox ToolTip="Enter Maximum Value of the Loan That Can Be Given" TextWrapping="Wrap" Text="{Binding CurrentLoan.maximum_amount, Mode=TwoWay, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="10,0,0,1" HorizontalAlignment="Left" Width="158" Height="25" Grid.Row="3" Grid.Column="2"/>
                    <Label Content="Loan Minimum Amount" Margin="1,1,0,0" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" HorizontalAlignment="Left" Width="130" Grid.Row="3" FontSize="11" Grid.Column="1"/>
                    <TextBox ToolTip="Enter Minimum Value of the Loan That Can Be Given" TextWrapping="Wrap" Text="{Binding CurrentLoan.minimum_amount, Mode=TwoWay, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="143,1,0,0" HorizontalAlignment="Left" Width="168" Height="25" Grid.Row="3" Grid.Column="1"/>
                    <Label Content="Default Intrest rate" Margin="180,19,0,1" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" HorizontalAlignment="Left" Width="109" Grid.Row="2" FontSize="11" Grid.Column="2" Grid.RowSpan="2"/>
                    <TextBox ToolTip="Enter Loan Intrest Rate" TextWrapping="Wrap" Text="{Binding CurrentLoan.default_rate,Mode=TwoWay, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="294,19,0,2" HorizontalAlignment="Left" Width="168" Height="25" Grid.Row="2" Grid.Column="2" Grid.RowSpan="2"/>
                    <Label Content="Loan Maximum Duration" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" Margin="40,1,0,0" HorizontalAlignment="Left" Width="142" Grid.Row="5" FontSize="11" Grid.Column="2"/>
                    <TextBox ToolTip="Enter Maximum Loan Duration" TextWrapping="Wrap" Text="{Binding CurrentLoan.maximum_time_duration_period}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="183,0,0,1" HorizontalAlignment="Left" Width="190" Height="25" Grid.Row="5" Grid.Column="2"/>
                    <Label Content="Loan Minimum Duration" Margin="0,0,0,1" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" HorizontalAlignment="Left" Width="139" Grid.Row="5" FontSize="11" Grid.Column="1"/>
                    <TextBox ToolTip="Enter Minimum Loan Duration" TextWrapping="Wrap" Text="{Binding CurrentLoan.minimum_time_duration_period}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="144,1,0,0" HorizontalAlignment="Left" Width="190" Height="25" Grid.Row="5" Grid.Column="1"/>
                    <Label TextElement.FontStyle="Oblique" Content="%" Margin="464,19,0,2" Foreground="#FFFFFF" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" TextElement.FontSize="13" HorizontalAlignment="Left" Width="22" Grid.Row="2" Grid.Column="2" Grid.RowSpan="2"/>
                </Grid>
            </TabItem>
            <TabItem Header="Loan Rules" FontFamily="/ERP;component/Fonts/#Segoe UI Semibold" Margin="12,-2,-52,0" FontSize="14">
                <Grid Background="#FF233555">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="53*"/>
                        <RowDefinition Height="154*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Loan Applicant Rules" HorizontalAlignment="Left" Margin="90,26,0,0" VerticalAlignment="Top" Height="128" Width="868" Foreground="White" Grid.RowSpan="2">
                        <Label Content="Minimum Service Period" Margin="365,10,325,65" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold"/>
                    </GroupBox>
                    <TextBox ToolTip="Enter Applicant Can Have Maximum No of Loans To Apply This Loan" HorizontalAlignment="Left" Height="23" Margin="318,54,0,0" TextWrapping="Wrap" Text="{Binding CurrentLoan.Emp_NoLoansInProgress}" VerticalAlignment="Top" Width="120"/>
                    <TextBox ToolTip="Enter The Number Of Guarantors For The Loan" HorizontalAlignment="Left" Height="23" Margin="318,85,0,0" TextWrapping="Wrap" Text="{Binding CurrentLoan.Emp_NoOfGurantors}" VerticalAlignment="Top" Width="120" Grid.RowSpan="2"/>
                    <Label Content="Number Of Gurantors" Margin="116,85,689,300" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" Grid.RowSpan="2"/>
                    <CheckBox ToolTip="Is Applicant A Permenent Employee Or Not To Apply The Loan" IsChecked="{Binding CurrentLoan.Emp_Permanent}" Content="Permenent Employee" HorizontalAlignment="Left" Margin="118,15.5,0,0" VerticalAlignment="Top" Background="White" Foreground="White" Height="19" FontSize="14" Grid.Row="1"/>
                    <Label Content="Deduction Percentage oF Payroll" Margin="462,84,281,301" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" Grid.RowSpan="2"/>
                    <TextBox ToolTip="Enter Applicant's Minimum Service Period To Apply This Loan" HorizontalAlignment="Left" Height="23" Margin="682,54,0,0" TextWrapping="Wrap" Text="{Binding CurrentLoan.Emp_MinServicePeriod}" VerticalAlignment="Top" Width="120"/>
                    <Label Content="Number Of Loans In Progress" Margin="116,54,649,24" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold"/>
                    <TextBox ToolTip="Enter the Maximum Payroll Percentage Of the Applicant For The Loan" HorizontalAlignment="Left" Height="23" Margin="686,88,0,0" TextWrapping="Wrap" Text="{Binding CurrentLoan.Emp_DeductionPercentageOfPayroll}" VerticalAlignment="Top" Width="120" Grid.RowSpan="2"/>
                    <GroupBox Header="Loan Gurantors Rules" HorizontalAlignment="Left" Margin="90,71.5,0,0" VerticalAlignment="Top" Height="129" Width="868" Foreground="White" Grid.Row="1">
                        <Label Content="Minimum Service Period" Margin="388,10,298,66" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold"/>
                    </GroupBox>
                    <TextBox ToolTip="Enter Guarantor Can Have Maximum No of Loans To Guarant This Loan" IsEnabled="{Binding ISGurantorEnabled}" HorizontalAlignment="Left" Height="23" Margin="318,102.5,0,0" TextWrapping="Wrap" Text="{Binding CurrentLoan.Guarantor_NoLoansInProgress}" VerticalAlignment="Top" Width="120" Grid.Row="1"/>
                    <CheckBox ToolTip="Is Guarantor A Permenent Employee Or Not To Guarant The Loan" IsEnabled="{Binding ISGurantorEnabled}" IsChecked="{Binding CurrentLoan.Guarantor_Permanent}" Content="Permenent Employee" HorizontalAlignment="Left" Margin="120,173.5,0,0" VerticalAlignment="Top" Background="White" Foreground="White" Height="19" FontSize="14" Grid.Row="1"/>
                    <Label Content="Deduction Percentage oF Payroll" Margin="478,138,265,142" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" Grid.Row="1"/>
                    <TextBox ToolTip="Enter Guarantor's Minimum Service Period To Guarant This Loan" IsEnabled="{Binding ISGurantorEnabled}" HorizontalAlignment="Left" Height="23" Margin="702,101.5,0,0" TextWrapping="Wrap" Text="{Binding CurrentLoan.Guarantor_MinServicePeriod}" VerticalAlignment="Top" Width="120" Grid.Row="1"/>
                    <Label Content="Number Of Loans In Progress" Margin="118,102,644,177" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" Grid.Row="1"/>
                    <TextBox ToolTip="Guarantor's Maximum Guaranteed Loans To Guarant The Loan" IsEnabled="{Binding ISGurantorEnabled}" HorizontalAlignment="Left" Height="23" Margin="320,138.5,0,0" TextWrapping="Wrap" Text="{Binding CurrentLoan.Guarantor_MaxguaranteedLoans}" VerticalAlignment="Top" Width="120" Grid.Row="1"/>
                    <Label Content="Max No Of Guaranteed Loans" Margin="462,14,299,266" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" Grid.Row="1"/>
                    <TextBox ToolTip="Applicant's Maximum Guaranteed Loans To Apply The Loan" HorizontalAlignment="Left" Height="23" Margin="684,15.5,0,0" TextWrapping="Wrap" Text="{Binding CurrentLoan.Emp_MaxguaranteedLoans}" VerticalAlignment="Top" Width="120" Grid.Row="1"/>
                    <Label Content="Max No Of Guaranteed Loans" Margin="116,134,647,145" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" Grid.Row="1"/>
                    <TextBox ToolTip="Enter the Maximum Payroll Percentage Of the Guarantor For The Loan" IsEnabled="{Binding ISGurantorEnabled}" HorizontalAlignment="Left" Height="24" Margin="702,0,0,145" TextWrapping="Wrap" Text="{Binding CurrentLoan.Guarantor_DeductionPercentageinPayroll}" VerticalAlignment="Bottom" Width="120" Grid.Row="1"/>
                    <ComboBox ToolTip="Select The Service Period Type" IsEnabled="{Binding ISGurantorEnabled}" Name="CMBGurantorServicePeriodType" SelectedIndex="{Binding GurantorServiceType}" HorizontalAlignment="Left" Margin="828,102,0,0" VerticalAlignment="Top" Width="100" Grid.Row="1"/>
                    <ComboBox ToolTip="Select The Service Period Type" Name="CmbEmpserviceperiod" SelectedIndex="{Binding EmpServiceType}" HorizontalAlignment="Left" Margin="808,52,0,0" VerticalAlignment="Top" Width="120"/>
                    <CheckBox IsChecked="{Binding ISGurantorEnabled}" Content="IS Gurantor Needed" HorizontalAlignment="Left" Margin="356,54,0,0" Grid.Row="1" VerticalAlignment="Top" Foreground="White"/>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
