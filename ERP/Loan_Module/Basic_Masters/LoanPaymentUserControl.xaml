<UserControl x:Class="ERP.Loan_Module.Detail_Masters.LoanPaymentUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" Width="912" Height="556" Margin="100,150,0,0">
    <UserControl.Resources>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="2.662,2.339,3.247,2.254" Source="/ERP;component/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="BorderStyle3" TargetType="{x:Type Border}">
        	<Setter Property="Background">
        		<Setter.Value>
        			<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        				<GradientStop Color="Black" Offset="0"/>
        				<GradientStop Color="#FEAEAEAE" Offset="1"/>
        				<GradientStop Color="#FE5B5B5B" Offset="0"/>
        				<GradientStop Color="#FE868686" Offset="0"/>
        				<GradientStop Color="#FE888888" Offset="0"/>
        				<GradientStop Color="#FE9D9D9D" Offset="0"/>
        				<GradientStop Color="#FEA5A5A5" Offset="0"/>
        				<GradientStop Color="#FEA9A9A9" Offset="0"/>
        				<GradientStop Color="#FEABABAB" Offset="0"/>
        				<GradientStop Color="#FEACACAC" Offset="0"/>
        				<GradientStop Color="#FEACACAC" Offset="0"/>
        			</LinearGradientBrush>
        		</Setter.Value>
        	</Setter>
        	<Setter Property="BorderBrush" Value="#FFDDF3D2"/>
        	<Setter Property="CornerRadius" Value="2"/>
        </Style>
        <Style x:Key="TextBoxStyle5" TargetType="{x:Type TextBox}">
        	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        	<Setter Property="HorizontalContentAlignment" Value="Left"/>
        	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        	<Setter Property="AllowDrop" Value="true"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type TextBox}">
        				<ControlTemplate.Resources>
        					<Storyboard x:Key="OnGotFocus1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF68839A"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF86C7FF"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnLostFocus1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF86C7FF"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</ControlTemplate.Resources>
        				<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF68839A" CornerRadius="2" Background="White" Padding="2">
        					<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="White" Margin="0" HorizontalAlignment="Left" Width="128.868"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<EventTrigger RoutedEvent="FocusManager.LostFocus" SourceName="PART_ContentHost">
        						<BeginStoryboard x:Name="OnLostFocus1_BeginStoryboard" Storyboard="{StaticResource OnLostFocus1}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="FocusManager.GotFocus" SourceName="border">
        						<BeginStoryboard Storyboard="{StaticResource OnGotFocus1}"/>
        					</EventTrigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Opacity" TargetName="border" Value="0.56"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
        					</Trigger>
        					<Trigger Property="IsKeyboardFocused" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	<Style.Triggers>
        		<MultiTrigger>
        			<MultiTrigger.Conditions>
        				<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
        				<Condition Property="IsSelectionActive" Value="false"/>
        			</MultiTrigger.Conditions>
        			<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
        		</MultiTrigger>
        	</Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle21" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<ControlTemplate.Resources>
        					<Storyboard x:Key="OnMouseEnter1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="Black"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</ControlTemplate.Resources>
        				<Grid x:Name="grid">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="MouseOver"/>
        							<VisualState x:Name="Pressed"/>
        							<VisualState x:Name="Disabled"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="ValidationStates">
        							<VisualState x:Name="InvalidFocused"/>
        							<VisualState x:Name="InvalidUnfocused"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
        						<Rectangle.Fill>
        							<LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
        								<GradientStop Color="White" Offset="0"/>
        								<GradientStop Color="#FFE4E4E4" Offset="0.992"/>
        								<GradientStop Color="#FFEAE7E7"/>
        							</LinearGradientBrush>
        						</Rectangle.Fill>
        					</Rectangle>
        					<Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
        					<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
        					<Label x:Name="label" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="44.833" Margin="11.335,0,0,0" Foreground="#FF5F5F5F"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
        					</EventTrigger>
        					<Trigger Property="IsFocused" Value="True"/>
        					<Trigger Property="IsDefaulted" Value="True"/>
        					<Trigger Property="IsMouseOver" Value="True"/>
        					<Trigger Property="IsPressed" Value="True"/>
        					<Trigger Property="IsEnabled" Value="False"/>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
        					</EventTrigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<ControlTemplate.Resources>
        					<Storyboard x:Key="OnMouseEnter1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="Black"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</ControlTemplate.Resources>
        				<Grid x:Name="grid">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="MouseOver"/>
        							<VisualState x:Name="Pressed"/>
        							<VisualState x:Name="Disabled"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="ValidationStates">
        							<VisualState x:Name="InvalidFocused"/>
        							<VisualState x:Name="InvalidUnfocused"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Rectangle x:Name="rectangle" Width="96.833" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
        						<Rectangle.Fill>
        							<LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
        								<GradientStop Color="White" Offset="0"/>
        								<GradientStop Color="#FFE4E4E4" Offset="0.992"/>
        								<GradientStop Color="#FFEAE7E7"/>
        							</LinearGradientBrush>
        						</Rectangle.Fill>
        					</Rectangle>
        					<Rectangle Width="93.665" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
        					<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
        					<Label x:Name="label" Content="Payments" HorizontalAlignment="Left" VerticalAlignment="Top" Width="61.833" Margin="17.418,0,0,0" Foreground="#FF5F5F5F"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
        					</EventTrigger>
        					<Trigger Property="IsFocused" Value="True"/>
        					<Trigger Property="IsDefaulted" Value="True"/>
        					<Trigger Property="IsMouseOver" Value="True"/>
        					<Trigger Property="IsPressed" Value="True"/>
        					<Trigger Property="IsEnabled" Value="False"/>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
        					</EventTrigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid>
        					<Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
        					<Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsMouseOver" Value="True">
        						<Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="True">
        						<Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="False">
        						<Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
        	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="BorderBrush" Value="#FF688CAF"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type DataGrid}">
        				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
        					<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Foreground="#FF513838" FontFamily="Segoe UI Semibold">
        						<ScrollViewer.Template>
        							<ControlTemplate TargetType="{x:Type ScrollViewer}">
        								<Grid>
        									<Grid.ColumnDefinitions>
        										<ColumnDefinition Width="Auto"/>
        										<ColumnDefinition Width="*"/>
        										<ColumnDefinition Width="Auto"/>
        									</Grid.ColumnDefinitions>
        									<Grid.RowDefinitions>
        										<RowDefinition Height="Auto"/>
        										<RowDefinition Height="*"/>
        										<RowDefinition Height="Auto"/>
        									</Grid.RowDefinitions>
        									<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
        									<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Foreground="#FF4D85C3"/>
        									<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
        									<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
        									<Grid Grid.Column="1" Grid.Row="2">
        										<Grid.ColumnDefinitions>
        											<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
        											<ColumnDefinition Width="*"/>
        										</Grid.ColumnDefinitions>
        										<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
        									</Grid>
        								</Grid>
        							</ControlTemplate>
        						</ScrollViewer.Template>
        						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        					</ScrollViewer>
        				</Border>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	<Style.Triggers>
        		<MultiTrigger>
        			<MultiTrigger.Conditions>
        				<Condition Property="IsGrouping" Value="true"/>
        				<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
        			</MultiTrigger.Conditions>
        			<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        		</MultiTrigger>
        	</Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<ControlTemplate.Resources>
        					<Storyboard x:Key="OnMouseEnter1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave1">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave2">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseEnter3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        					<Storyboard x:Key="OnMouseLeave3">
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="Black"/>
        							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</ControlTemplate.Resources>
        				<Grid x:Name="grid">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="MouseOver"/>
        							<VisualState x:Name="Pressed"/>
        							<VisualState x:Name="Disabled"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="ValidationStates">
        							<VisualState x:Name="InvalidFocused"/>
        							<VisualState x:Name="InvalidUnfocused"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Rectangle x:Name="rectangle" Width="91.772" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
        						<Rectangle.Fill>
        							<LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
        								<GradientStop Color="White" Offset="0"/>
        								<GradientStop Color="#FFE4E4E4" Offset="0.992"/>
        								<GradientStop Color="#FFEAE7E7"/>
        							</LinearGradientBrush>
        						</Rectangle.Fill>
        					</Rectangle>
        					<Rectangle Width="89.042" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
        					<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
        					<Label x:Name="label" Content="Search" HorizontalAlignment="Left" VerticalAlignment="Top" Width="52.583" Margin="19.335,0,0,0" Foreground="#FF5F5F5F"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
        					</EventTrigger>
        					<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
        					</EventTrigger>
        					<Trigger Property="IsFocused" Value="True"/>
        					<Trigger Property="IsDefaulted" Value="True"/>
        					<Trigger Property="IsMouseOver" Value="True"/>
        					<Trigger Property="IsPressed" Value="True"/>
        					<Trigger Property="IsEnabled" Value="False"/>
        					<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
        						<BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
        					</EventTrigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </UserControl.Resources>
    <Grid Background="#FFFDFDFD">
    	<Grid.RowDefinitions>
    		<RowDefinition Height="5*"/>
    		<RowDefinition Height="79*"/>
    		<RowDefinition Height="10*"/>
    		<RowDefinition Height="412*"/>
    		<RowDefinition Height="10*"/>
    		<RowDefinition Height="30*"/>
    		<RowDefinition Height="10*"/>
    	</Grid.RowDefinitions>
    	<Grid.ColumnDefinitions>
    		<ColumnDefinition Width="10*"/>
    		<ColumnDefinition Width="893*"/>
    		<ColumnDefinition Width="10*"/>
    	</Grid.ColumnDefinitions>
        <DataGrid SelectionMode="Single" IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding AprrovedLoanPayment}" SelectedItem="{Binding CurrentAprrovedLoanPayment}"  HorizontalAlignment="Left" VerticalAlignment="Top" Width="892.011" Height="412" Grid.Row="3" Grid.Column="1" BorderBrush="#FFB1B4B6" Foreground="#FFB1B4B6" Style="{DynamicResource DataGridStyle1}">
            <DataGrid.Resources>
                           <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                   Color="#FF0000"/>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Employee ID" Binding="{Binding emp_id}" Width="*"></DataGridTextColumn>
                <DataGridTextColumn Header="First Name" Width="*" Binding="{Binding first_name}"></DataGridTextColumn>
                <DataGridTextColumn Header="Last Name" Width="*" Binding="{Binding surname}"></DataGridTextColumn>
                <DataGridTextColumn Header="Loan Type" Width="*" Binding="{Binding loan_name}"></DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Rectangle Margin="0,0,0,39.514" Grid.ColumnSpan="3" Grid.RowSpan="2">
        	<Rectangle.Fill>
        		<LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
        			<GradientStop Color="#FF4D85C3" Offset="0.003"/>
        			<GradientStop Color="#FF4D85C3" Offset="1"/>
        			<GradientStop Color="#FF84B3EA" Offset="0.518"/>
        			<GradientStop Color="#FF84B3EA" Offset="0.455"/>
        		</LinearGradientBrush>
        	</Rectangle.Fill>
        </Rectangle>
        <Label Content="Loan Payment" Margin="41.667,2.009,0,0" HorizontalAlignment="Left" Width="145" Height="31.748" VerticalAlignment="Top" FontSize="14.667" FontWeight="Bold" Foreground="White" Grid.Column="1" Grid.Row="1">
        	<Label.Effect>
        		<DropShadowEffect ShadowDepth="3" BlurRadius="2"/>
        	</Label.Effect>
        </Label>
        <Image HorizontalAlignment="Left" Height="35" VerticalAlignment="Top" Width="40" Source="/ERP;component/Images/masters/Form/Bank.png" Stretch="Fill" Margin="1.678,0.009,0,0" Grid.Column="1" Grid.Row="1"/>
        <Rectangle Stroke="#FF4D85C3" Margin="0,39,-0.1,0.667" Grid.ColumnSpan="3" Grid.Row="1">
        	<Rectangle.Fill>
        		<LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
        			<GradientStop Color="#FFBAD6F3" Offset="0"/>
        			<GradientStop Color="#FFBAD6F3" Offset="1"/>
        			<GradientStop Color="#FFD5E3F1" Offset="0.518"/>
        			<GradientStop Color="#FFD5E3F1" Offset="0.455"/>
        		</LinearGradientBrush>
        	</Rectangle.Fill>
        </Rectangle>
        <Label Content="Employee Search" Grid.Column="1" Margin="684.648,46.009,103.437,0" Grid.Row="1" VerticalAlignment="Top" Height="32.324" Foreground="#FF513838" FontStyle="Italic" FontWeight="Bold"/>
        <Button x:Name="button1_Copy1" Content="Payment" Grid.Column="1" Height="25" Grid.Row="5" Style="{DynamicResource ButtonStyle1}" VerticalAlignment="Top" Command="{Binding PaymentButton}" Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Margin="795.178,3,0.011,0">
        	<Button.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Button.RenderTransform>
        </Button>
        <Button x:Name="button2" Content="Button" Grid.Column="1" Margin="886.304,0.009,4.707,68.991" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" Click="button2_Click" Grid.Row="1" Grid.ColumnSpan="2" >
        	<Button.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Button.RenderTransform>
        </Button>
        <Button x:Name="button1_Copy" Content="Search" Grid.Column="1" Height="25" Grid.Row="1" Style="{DynamicResource ButtonStyle2}" VerticalAlignment="Top" Command="{Binding SearchButton}" Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Margin="800.25,46.009,0,0">
        	<Button.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Button.RenderTransform>
        </Button>
        <Button Command="{Binding ReportButton}" Content="Approved List" Grid.Column="1" HorizontalAlignment="Left" Margin="42,6,0,0" Grid.Row="5" VerticalAlignment="Top" Width="97"/>

    </Grid>
</UserControl>
