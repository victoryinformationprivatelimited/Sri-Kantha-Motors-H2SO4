<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:ERP.AttendanceModule.AttendanceMasters" xmlns:ERP="clr-namespace:ERP" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Class="ERP.AttendanceModule.AttendanceMasters.AssignEmployeeBreakWindow"
        Title="AssignEmployeeBreakWindow" Height="577.962" Width="994.023" Background="{x:Null}" AllowsTransparency="True" WindowStyle="None">
    <Window.Resources>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="3,0,2.994,1.505" Source="/ERP;component/AttendanceModule/Resources/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="21" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <local:SecondsToTimeConverter x:Key="secToTime"/>
        <!-- Error Template to change the default behaviour-->
        <ControlTemplate x:Key="ErrorTemplate">
            <DockPanel LastChildFill="True">
                <Border BorderBrush="Red" BorderThickness="1">
                    <AdornedElementPlaceholder/>
                </Border>
            </DockPanel>
        </ControlTemplate>
    </Window.Resources>
    <Grid Background="White" Margin="0,0,1,4">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Rectangle x:Name="assign_shift_break_titlebar" MouseLeftButtonDown="assign_shift_break_titlebar_MouseLeftButtonDown"  Height="31" VerticalAlignment="Top" >
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF18233A" Offset="0"/>
                    <GradientStop Color="#FF18233A" Offset="1"/>
                    <GradientStop Color="#FF4C5691" Offset="0.518"/>
                    <GradientStop Color="#FF4C5691" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <TextBlock x:Name="assign_shift_break_title" TextWrapping="Wrap"  Text="Assign Shift Break" Foreground="White" FontSize="14.667" FontFamily="Segoe UI Symbol" FontWeight="Bold" HorizontalAlignment="Left" Width="131" Height="22" VerticalAlignment="Top" Margin="10,4,0,0" MouseLeftButtonDown="assign_shift_break_title_MouseLeftButtonDown"/>
        <Button x:Name="assign_break_close_btn" IsCancel="True"  Content="Button" Margin="0,4,8,0" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" Height="20" VerticalAlignment="Top" HorizontalAlignment="Right" Width="26" Click="assign_break_close_btn_Click" >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <ERP:CustomDataGrid ItemsSource="{Binding ShiftBreakEmployees}" SelectedItemsList="{Binding MultiSelectBreakEmps, Mode=TwoWay}" AutoGenerateColumns="False" CanUserAddRows="False" HorizontalAlignment="Left" Margin="10,72,0,0" VerticalAlignment="Top" Height="492" Width="305">
            <ERP:CustomDataGrid.Columns>
                <DataGridTextColumn Binding="{Binding EmpID}" Header="Emp ID" Width="*" IsReadOnly="True" />
                <DataGridTextColumn Binding="{Binding FullName}" Header="Name" Width="*" IsReadOnly="True" />
            </ERP:CustomDataGrid.Columns>
        </ERP:CustomDataGrid>
        <Button x:Name="selectDateBtn" Content="&gt;" HorizontalAlignment="Left" Margin="320,284,0,0" VerticalAlignment="Top" Width="37" Height="36" Command="{Binding SelectDateButton}"/>
        <Popup  IsOpen="{Binding IsDateSelectionPopUp}" AllowsTransparency="True"  PlacementTarget="{Binding ElementName=selectDateBtn}" Placement="Top">
            <Grid  Background="#FFC5C5C5" Width="412" Height="206" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="23*"/>
                    <ColumnDefinition Width="51*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="191*"/>
                </Grid.RowDefinitions>
                <Label Content="From" Margin="0,0,0,20" Padding="59,5,5,5" Height="26.904" VerticalAlignment="Bottom"/>
                <DatePicker SelectedDate="{Binding FromBreakDate}"  Margin="0,20" Grid.Column="1"/>
                <Label Content="To"  Grid.Row="1" Margin="0,0,0,20" Padding="59,5,5,5" Height="31.063" VerticalAlignment="Bottom"/>
                <DatePicker SelectedDate="{Binding ToBreakDate}" Margin="0,20" Grid.Row="1" Grid.Column="1"   />
                <Button Content="Ok" Grid.Column="1" Command="{Binding SetDateRangeButton}" HorizontalAlignment="Left" Margin="10,21,0,0" Grid.Row="2" VerticalAlignment="Top" Width="113" Height="31.96"/>
            </Grid>
        </Popup>
        <ListBox ItemsSource="{Binding SelectedBreakDates}" Background="Transparent" Margin="364,72,0,10"  HorizontalContentAlignment="Stretch" HorizontalAlignment="Left" Height="Auto" Width="196" >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border BorderBrush="Black" BorderThickness="1" Background="#ED98B4" >
                        <StackPanel Margin="4" Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Margin="0,0,20,0" Foreground="#6B1B36" FontSize="12" FontWeight="Bold" Text="{Binding Date, StringFormat=yyyy-MM-dd}" />
                            <Button Background="Transparent" x:Name="removeDateBtn" >
                                <Image  Source="/ERP;component/AttendanceModule/Resources/Images/appbar.close.png" Width="10" Height="10"/>
                            </Button>
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <TreeView ItemsSource="{Binding ShiftBreakEmployees}" HorizontalAlignment="Left" Height="426" Margin="616,72,0,0" VerticalAlignment="Top" Width="367">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding EmpShifts}">
                    <StackPanel Orientation="Horizontal" Margin="2">
                        <TextBlock Text="{Binding EmpID}" FontSize="14"/>
                        <TextBlock Margin="5,0,0,0" Text="{Binding FullName}" FontSize="14"/>
                    </StackPanel>
                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Name="day_panel">
                                <TextBlock Text="{Binding ShiftName}"/>
                                <TextBlock Margin="5,0,0,0" Text="{Binding DateOfDay, StringFormat=yyyy-MM-dd}"/>
                                <CheckBox IsChecked="{Binding IsShiftBreak}" Margin="5,0,0,0" IsEnabled="False" />
                                <CheckBox IsChecked="{Binding IsFreeBreak}" Margin="5,0,0,0" IsEnabled ="False"/>
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsNoShift}">
                                    <DataTrigger.Value>True</DataTrigger.Value>
                                    <DataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="day_panel"/>
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
        <Button x:Name="breakOption_Btn" Content="&gt;" HorizontalAlignment="Left" Margin="570,284,0,0" VerticalAlignment="Top" Width="37" Height="36" Command="{Binding SelectBreakOptionButton}"/>
        <Popup  IsOpen="{Binding IsBreakOptionSelectionPopUp}" AllowsTransparency="True"  PlacementTarget="{Binding ElementName=breakOption_Btn}" Placement="Top">
            <Grid  Background="#FFC5C5C5"  >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Button Content="Ok" Command="{Binding SetBreakOptionButton}"  Grid.Row="3"  Width="122" Height="24" Margin="0,10,0,10"  />
                <CheckBox IsChecked="{Binding IsShiftBreakOption}" Content="Shift Break"   Margin="50,10,50,10" />
                <CheckBox IsChecked="{Binding IsFreeBreakOption}" Content="Free Break"  Grid.Row="1" Margin="50,10,0,10" />
                <CheckBox IsChecked="{Binding IsNoBreakOption}" Content="No Break"   Grid.Row="2" Margin="50,10,0,10" />
            </Grid>
        </Popup>
        <Button x:Name="save_shifts_btn" Click="save_shifts_btn_Click" Content="Save Shifts" Command="{Binding SaveShiftsButton}" HorizontalAlignment="Left" Margin="740,522,0,0" VerticalAlignment="Top" Width="243" Height="42"/>
    </Grid>
</Window>
