<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ERP="clr-namespace:ERP" x:Class="ERP.AttendanceModule.AttendanceMasters.AssignEmployeeHolidayWindow"
        Title="AssignEmployeeHolidayWindow" Height="405" Width="771.627" AllowsTransparency="True" WindowStyle="None" WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="3,0,2.994,1.505" Source="/ERP;component/AttendanceModule/Resources/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="21" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="White">
        <Rectangle x:Name="holidayAssignedTitle" MouseLeftButtonDown="holidayAssignedTitle_MouseLeftButtonDown" Height="31" VerticalAlignment="Top" >
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF18233A" Offset="0"/>
                    <GradientStop Color="#FF18233A" Offset="1"/>
                    <GradientStop Color="#FF4C5691" Offset="0.518"/>
                    <GradientStop Color="#FF4C5691" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Button x:Name="holidayAssignedCloseBtn" Click="holidayAssignedCloseBtn_Click" Content="Button" Margin="738,5,0,0" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" Width="26" Height="19" VerticalAlignment="Top" >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>

        <ERP:CustomDataGrid ScrollViewer.CanContentScroll="False" ItemsSource="{Binding SelectedEmployees}" SelectedItem="{Binding CurrentSelectedEmployee}" SelectedItemsList="{Binding SelectEmpList, Mode=TwoWay}" AutoGenerateColumns="False" CanUserAddRows="False" HorizontalAlignment="Left" Margin="20,59,0,0" VerticalAlignment="Top" Height="135" Width="409">
            <ERP:CustomDataGrid.Columns>
                <DataGridTextColumn Binding="{Binding emp_id}" Header="Emp ID" Width="*" IsReadOnly="True" />
                <DataGridTextColumn Binding="{Binding first_name}" Header="Emp Name" Width="*" IsReadOnly="True" />
                <DataGridCheckBoxColumn Binding="{Binding isdelete}" Width="50"/>
            </ERP:CustomDataGrid.Columns>
            <!--<DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <DataGrid ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=DataGrid},Path=DataContext.CurrentSelectedEmployee.z_HolidayData, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" IsReadOnly="True" >
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Holiday Name" Binding="{Binding holiday_name}" Width="100"/>
                            <DataGridTextColumn Header="Start" Binding="{Binding holiday_start}" Width="100"/>
                            <DataGridTextColumn Header="End" Binding="{Binding holiday_end}" Width="100"/>
                            <DataGridCheckBoxColumn Header="Is Active" Binding="{Binding is_active}" Width="50"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>-->
        </ERP:CustomDataGrid>
        <ComboBox ItemsSource="{Binding AttendanceGroups}" SelectedItem="{Binding CurrentAttendanceGroup}" DisplayMemberPath="attendance_group_name" SelectedValuePath="attendance_group_id" Margin="451,81,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="194"/>
        <Button Content="+" FontWeight="Bold" Command="{Binding AddButton}" HorizontalAlignment="Left" Margin="652,81,0,0" VerticalAlignment="Top" Width="35" Height="22"/>
        <DataGrid ItemsSource="{Binding SelectedHolidays}" AutoGenerateColumns="False" IsReadOnly="True" HorizontalAlignment="Left" Margin="20,215,0,0" VerticalAlignment="Top" Height="135" Width="531">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Holiday Name" Binding="{Binding holiday_name}" Width="*"/>
                <DataGridTextColumn Header="Start" Binding="{Binding holiday_start}" Width="*"/>
                <DataGridTextColumn Header="End" Binding="{Binding holiday_end}" Width="*"/>
                <DataGridCheckBoxColumn Header="Is Active" Binding="{Binding is_active}" Width=".5*"/>
            </DataGrid.Columns>
        </DataGrid>
        <Label Content="Attendance Group" HorizontalAlignment="Left" Margin="453,55,0,0" VerticalAlignment="Top"/>
        <Button Content="Search Employee" Command="{Binding SearchEmployeeButton}" HorizontalAlignment="Left" Margin="652,123,0,0" VerticalAlignment="Top" Width="110" Height="23"/>
        <ListBox Background="Transparent" ItemsSource="{Binding SelectedAttendanceGroups}" SelectedItem="{Binding RemoveAttendanceGroup}" Margin="453,108,127,211"  HorizontalContentAlignment="Stretch" BorderBrush="{x:Null}" >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border BorderBrush="Black" BorderThickness="1" >
                        <StackPanel Margin="4" Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Margin="0,0,20,0" Foreground="#FF7AA8FB" FontSize="10" Text="{Binding attendance_group_name}"/>
                            <Button Background="Black" Click="Button_Click">
                                <Image  Source="/ERP;component/AttendanceModule/Resources/Images/appbar.close.png" Width="10" Height="10"/>
                            </Button>
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button Command="{Binding SearchHolidayButton}" Content="Search Holiday" HorizontalAlignment="Left" Margin="652,265,0,0" VerticalAlignment="Top" Width="110" Height="22"/>
        <Button Command="{Binding AssignHolidayButton}" Content="Assign Holiday" HorizontalAlignment="Left" Margin="319,370,0,0" VerticalAlignment="Top" Width="110" Height="25"/>
        <Button Command="{Binding RemoveHolidayButton}" Content="Remove Holiday" HorizontalAlignment="Left" Margin="441,370,0,0" VerticalAlignment="Top" Width="110" Height="25"/>
        <CheckBox IsChecked="{Binding IsCheckAll}" HorizontalAlignment="Left" Margin="395,63,0,0" VerticalAlignment="Top"/>
        <Label x:Name="assignHolidayTitle" Content="Assign Holiday" Margin="10,0,658,376" Foreground="White" FontWeight="Bold" FontSize="13.333" MouseLeftButtonDown="assignHolidayTitle_MouseLeftButtonDown"/>
        <Button Command="{Binding ViewButton}" Content="View Holidays" HorizontalAlignment="Left" Margin="654,172,0,0" VerticalAlignment="Top" Width="110" Height="22"/>
        <Button Command="{Binding ClearHolidayButton}" Content="Clear Holidays" HorizontalAlignment="Left" Margin="652,370,0,0" VerticalAlignment="Top" Width="110" Height="25"/>

    </Grid>
</Window>
