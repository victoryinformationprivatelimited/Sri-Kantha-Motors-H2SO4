<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	x:Class="ERP.AttendanceModule.AttendanceMasters.PreviewEmployeeHolidayWindow"
	x:Name="Window"
	Title="PreviewEmployeeHolidayWindow"
	Width="1010.5" Height="663" AllowsTransparency="True" WindowStyle="None" WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="3,0,2.994,1.505" Source="/ERP;component/AttendanceModule/Resources/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="21" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="centerCellStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>
        <ControlTemplate x:Key="ButtonControlTemplate3" TargetType="{x:Type Button}">
            <Grid>
                <Image Source="/ERP;component/AttendanceModule/Resources/Images/multi_shift_icon.png" Stretch="Uniform"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ButtonControlTemplate2" TargetType="{x:Type Button}">
            <Grid>
                <Image Source="/ERP;component/AttendanceModule/Resources/Images/CloseIcon4.png" Stretch="Fill"/>
            </Grid>
        </ControlTemplate>
    </Window.Resources>
    <Grid Background="White">
        <Rectangle x:Name="holidayAssignedTitle" Height="31" VerticalAlignment="Top" Margin="0,0,1,0" MouseLeftButtonDown="holidayAssignedTitle_MouseLeftButtonDown" >
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF18233A" Offset="0"/>
                    <GradientStop Color="#FF18233A" Offset="1"/>
                    <GradientStop Color="#FF4C5691" Offset="0.518"/>
                    <GradientStop Color="#FF4C5691" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Label x:Name="viewEmpHolidayTitle" Content="View Employee Holidays" Margin="8,0,832,632" Foreground="White" FontWeight="Bold" FontSize="13.333" MouseLeftButtonDown="viewEmpHolidayTitle_MouseLeftButtonDown"/>
        <Button x:Name="holidayAssignedCloseBtn" Content="Button" Margin="978.5,5.667,0,0" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" Width="22" Height="19" VerticalAlignment="Top" Click="holidayAssignedCloseBtn_Click" >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <DataGrid ItemsSource="{Binding SelectedHolidayEmployees}" SelectedItem="{Binding CurrentHolidayEmployee}" AutoGenerateColumns="False" IsReadOnly="True" HorizontalAlignment="Left" Margin="10,51.136,0,0" VerticalAlignment="Top" Height="582.364" Width="345.167" GridLinesVisibility="Horizontal">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding EmpID}" Width="100" Header="Emp ID" ElementStyle="{StaticResource centerCellStyle}"/>
                <DataGridTextColumn Binding="{Binding FullName}" Width="*" Header="Employee Name"  ElementStyle="{StaticResource centerCellStyle}"/>
                <!--<DataGridTemplateColumn Width="*">
        			<DataGridTemplateColumn.CellTemplate>
        				<DataTemplate>
        					<StackPanel Orientation="Horizontal">
        						-->
                <!--<Button x:Name="multiShiftBtn" Width="30" Template="{StaticResource ButtonControlTemplate3}"/>-->
                <!--
                                <TextBlock x:Name="shiftDaysTxt" Margin="20,0,0,0"  Text="{Binding HolidayCount}" FontSize="30" FontWeight="Bold" />
        					</StackPanel>
        					-->
                <!--<DataTemplate.Triggers>
        						<DataTrigger Binding="{Binding IsNoShiftDay}" Value="False">
        							<Setter TargetName="shiftDaysTxt" Property="Visibility" Value="Hidden"/>
        						</DataTrigger>
        						<DataTrigger Binding="{Binding IsMultiShift}" Value="False">
        							<Setter TargetName="multiShiftBtn" Property="Visibility" Value="Hidden"/>
        						</DataTrigger>
        					</DataTemplate.Triggers>-->
                <!--
        				</DataTemplate>
        			</DataGridTemplateColumn.CellTemplate>
        		</DataGridTemplateColumn>-->
            </DataGrid.Columns>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <!--<DataGrid.RowStyle>
        		<Style TargetType="{x:Type DataGridRow}">
        			<Style.Triggers>
                        -->
            <!--<DataTrigger Binding="{Binding IsMultiShift}" Value="True">
                            <Setter Property="Background" Value="#FFFFFF"/>
                        </DataTrigger>-->
            <!--
        				<DataTrigger Binding="{Binding IsNoShiftDay}" Value="True">
        					<Setter Property="Background" Value="#4F8C90"/>
        				</DataTrigger>
        			</Style.Triggers>
        		</Style>
        	</DataGrid.RowStyle>-->

        </DataGrid>
        <DataGrid SelectionMode="Single" SelectionUnit="FullRow" ItemsSource="{Binding CurrentEmployeeHolidays}" SelectedItem="{Binding SelectedCurrentEmployeeHolidays}" AutoGenerateColumns="False" IsReadOnly="True" HorizontalAlignment="Left" Margin="384,202,0,0" VerticalAlignment="Top" Height="416" Width="616" >
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding holiday_name}" Width="*" Header="Holiday" ElementStyle="{StaticResource centerCellStyle}"/>
                <DataGridTextColumn Binding="{Binding holiday_start, StringFormat=d}" Width="*" Header="Statrt Date" ElementStyle="{StaticResource centerCellStyle}"/>
                <DataGridTextColumn Binding="{Binding holiday_end}" Width="*" Header="End Date" ElementStyle="{StaticResource centerCellStyle}"/>
                <!--<DataGridTemplateColumn  Width="20">
        			<DataGridTemplateColumn.CellTemplate>
        				<DataTemplate>
        					<Button x:Name="delShiftAssignedBtn" Template="{StaticResource ButtonControlTemplate2}" />
        					-->
                <!--<DataTemplate.Triggers>
        						<DataTrigger Binding="{Binding IsNoShift}" Value="True">
        							<Setter TargetName="delShiftAssignedBtn" Property="Visibility" Value="Hidden"/>
        						</DataTrigger>
        					</DataTemplate.Triggers>-->
                <!--
        				</DataTemplate>
        			</DataGridTemplateColumn.CellTemplate>
        		</DataGridTemplateColumn>-->
            </DataGrid.Columns>
            <!--<DataGrid.RowStyle>
        		<Style TargetType="{x:Type DataGridRow}">
        			<Style.Triggers>
        				<DataTrigger Binding="{Binding IsNoShift}" Value="True">
        					<Setter Property="Background" Value="#9C78BF"/>
        				</DataTrigger>
        				<DataTrigger Binding="{Binding IsNoShift}" Value="False">
        					<Setter Property="Background" Value="#5EB59B"/>
        				</DataTrigger>
        			</Style.Triggers>
        		</Style>
        	</DataGrid.RowStyle>-->
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
        </DataGrid>
        <Label Content="Year" HorizontalAlignment="Left" Height="26" Margin="403,53.636,0,0" VerticalAlignment="Top" Width="36"/>
        <TextBox Text="{Binding SearchYear}" HorizontalAlignment="Left" Height="30" Margin="487.5,51.136,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="205.14"/>
        <Label Content="Start Date" HorizontalAlignment="Left" Height="25.333" Margin="399.667,102.166,0,0" VerticalAlignment="Top" Width="63"/>
        <DatePicker SelectedDate="{Binding SearchStartDate}" HorizontalAlignment="Left" Margin="487.5,99.666,0,0" VerticalAlignment="Top" Width="205.14" Height="30"/>
        <Label Content="End Date" HorizontalAlignment="Left" Height="24" Margin="399.667,153.188,0,0" VerticalAlignment="Top" Width="59.667"/>
        <DatePicker SelectedDate="{Binding SearchEndDate}" HorizontalAlignment="Left" Margin="487.5,150.166,0,0" VerticalAlignment="Top" Width="205.14" Height="30"/>
        <Button Command="{Binding SearchEmployeeHolidayButton}" Content="Search" HorizontalAlignment="Left" Margin="716.168,150.166,0,0" VerticalAlignment="Top" Width="176.833" Height="30"/>
        <CheckBox IsChecked="{Binding IsSearchAll}" Content="Search All" HorizontalAlignment="Left" Margin="716,108,0,0" VerticalAlignment="Top" Height="19" Width="129"/>
        <Button Command="{Binding RefreshHolidayButton}" Content="" HorizontalAlignment="Left" Margin="969.167,150.166,0,0" VerticalAlignment="Top" Width="31.333" Height="30" ToolTip="Refresh Holidays" >
            <Button.Background>
                <ImageBrush ImageSource="../Resources/Images/refresh_button.png" />
            </Button.Background>
        </Button>
        <Button Content="Delete" Command="{Binding BtnDeleteEmployeeHoliday}" HorizontalAlignment="Left" Margin="889,629,0,0" VerticalAlignment="Top" Width="110"/>
    </Grid>
</Window>