<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Class="ERP.AttendanceModule.AttendanceMasters.AddHolidayWindow"
        Title="AddHolidayWindow" Height="464" Width="562" AllowsTransparency="True" WindowStyle="None" WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="3,0,2.994,1.505" Source="/ERP;component/AttendanceModule/Resources/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="21" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Error Template to change the default behaviour-->
        <ControlTemplate x:Key="ErrorTemplate">
            <DockPanel LastChildFill="True">
                <Border BorderBrush="Red" BorderThickness="1">
                    <AdornedElementPlaceholder/>
                </Border>
            </DockPanel>
        </ControlTemplate>
    </Window.Resources>
    <Grid Background="White">
        <Rectangle x:Name="holidayTitleBar" MouseLeftButtonDown="holidayTitleBar_MouseLeftButtonDown"  Height="31" VerticalAlignment="Top" >
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF18233A" Offset="0"/>
                    <GradientStop Color="#FF18233A" Offset="1"/>
                    <GradientStop Color="#FF4C5691" Offset="0.518"/>
                    <GradientStop Color="#FF4C5691" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <TextBlock x:Name="holidayTitle" MouseLeftButtonDown="holidayTitle_MouseLeftButtonDown" TextWrapping="Wrap"  Text="Holidays" Foreground="White" FontSize="14.667" FontFamily="Segoe UI Symbol" FontWeight="Bold" HorizontalAlignment="Left" Width="101" Height="22" VerticalAlignment="Top" Margin="10,4,0,0"/>
        <Button x:Name="holidayCloseBtn" Click="holidayCloseBtn_Click"  Content="Button" Margin="0,5,6,0" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" Height="19" VerticalAlignment="Top" HorizontalAlignment="Right" Width="18" >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Label Content="Holiday Name" HorizontalAlignment="Left" Margin="17,60,0,0" VerticalAlignment="Top"/>
        <Label Content="Start Date" HorizontalAlignment="Left" Margin="18,96,0,0" VerticalAlignment="Top"/>
        <Label Content="End Date" HorizontalAlignment="Left" Margin="17,165,0,0" VerticalAlignment="Top"/>
        <DataGrid ItemsSource="{Binding Holidays}" SelectedItem="{Binding CurrentHoliday}" AutoGenerateColumns="False" IsReadOnly="True" HorizontalAlignment="Left" Margin="10,327,0,0" VerticalAlignment="Top" Height="127" Width="542">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Holiday Name" Binding="{Binding holiday_name}" Width="*"/>
                <DataGridTextColumn Header="Start" Binding="{Binding holiday_start}" Width="*"/>
                <DataGridTextColumn Header="End" Binding="{Binding holiday_end}" Width="*"/>
                <DataGridCheckBoxColumn Header="Is Active" Binding="{Binding is_active}" Width=".5*"/>
            </DataGrid.Columns>
        </DataGrid>
        <TextBox Text="{Binding HolidayName}" HorizontalAlignment="Left" Height="23" Margin="109,63,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="186"/>
        <DatePicker SelectedDate="{Binding StartDate}" HorizontalAlignment="Left" Margin="109,98,0,0" VerticalAlignment="Top" Width="186"/>
        <DatePicker SelectedDate="{Binding EndDate}" HorizontalAlignment="Left" Margin="109,167,0,0" VerticalAlignment="Top" Width="186"/>
        <CheckBox IsChecked="{Binding IsActive}" Content="Is Active" HorizontalAlignment="Left" Margin="109,249,0,0" VerticalAlignment="Top"/>
        <GroupBox Header="Holiday types" HorizontalAlignment="Left" Margin="333,63,0,0" VerticalAlignment="Top" Height="161" Width="219">
            <ListBox ItemsSource="{Binding HolidayTypes}" SelectedItem="{Binding CurrentHolidayType}" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"  >
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="Black" BorderThickness="1" >
                            <StackPanel Margin="4" Orientation="Horizontal" HorizontalAlignment="Right">
                                <CheckBox IsChecked="{Binding is_active}" Margin="0,0,20,0" />
                                <TextBlock Margin="0,0,20,0" Foreground="#FF7AA8FB" FontSize="10" Text="{Binding holiday_type}"/>
                                <!--<Button Background="Transparent" Click="Button_Click">
                                    <Image  Source="../Resources/Images/appbar.close.png" Width="10" Height="10"/>
                                </Button>-->

                            </StackPanel>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </GroupBox>
        <Button Command="{Binding NewButton}" Content="New" HorizontalAlignment="Left" Margin="109,292,0,0" VerticalAlignment="Top" Width="96"/>
        <Button Command="{Binding SaveButton}" Content="Save" HorizontalAlignment="Left" Margin="219,292,0,0" VerticalAlignment="Top" Width="96"/>
        <Button Command="{Binding DeleteButton}" Content="Delete" HorizontalAlignment="Left" Margin="333,292,0,0" VerticalAlignment="Top" Width="96"/>
        <Label Content="Start Time" HorizontalAlignment="Left" Margin="17,133,0,0" VerticalAlignment="Top"/>

        <xctk:MaskedTextBox  Mask="00:00" HorizontalAlignment="Left" Margin="109,133,0,0" TextWrapping="Wrap" Text="{Binding StartTime, Mode=TwoWay, StringFormat=\{0:hh\':\'mm\}, ValidatesOnDataErrors=True}" Validation.ErrorTemplate="{StaticResource ErrorTemplate}" VerticalAlignment="Top" Width="186" Height="23"/>
        <Label Content="End Time" HorizontalAlignment="Left" Margin="17,199,0,0" VerticalAlignment="Top"/>
        <xctk:MaskedTextBox Mask="00:00" HorizontalAlignment="Left" Margin="109,203,0,0" TextWrapping="Wrap" Text="{Binding EndTime, Mode=TwoWay, StringFormat=\{0:hh\':\'mm\}, ValidatesOnDataErrors=True}" Validation.ErrorTemplate="{StaticResource ErrorTemplate}" VerticalAlignment="Top" Width="186" Height="23"/>
        <Button Command="{Binding BulkHolidayButton}" Content="Bulk Holidays" HorizontalAlignment="Left" Margin="333,246,0,0" VerticalAlignment="Top" Width="96"/>

    </Grid>
</Window>
