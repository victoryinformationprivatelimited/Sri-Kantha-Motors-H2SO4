<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" mc:Ignorable="d" x:Class="ERP.Masters.EmployeeWindow"
        Title="EmployeeWindow" MinHeight="659" Height="727.187" Width="1169.658" MinWidth="1118.325" AllowsTransparency="True" WindowStyle="None" Background="{x:Null}" WindowStartupLocation="CenterScreen" ResizeMode="NoResize">

    <Window.Resources>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="BorderStyle3" TargetType="{x:Type Border}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="#FEAEAEAE" Offset="1"/>
                        <GradientStop Color="#FE5B5B5B" Offset="0"/>
                        <GradientStop Color="#FE868686" Offset="0"/>
                        <GradientStop Color="#FE888888" Offset="0"/>
                        <GradientStop Color="#FE9D9D9D" Offset="0"/>
                        <GradientStop Color="#FEA5A5A5" Offset="0"/>
                        <GradientStop Color="#FEA9A9A9" Offset="0"/>
                        <GradientStop Color="#FEABABAB" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                        <GradientStop Color="#FEACACAC" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#FFDDF3D2"/>
            <Setter Property="CornerRadius" Value="2"/>
        </Style>
        <Style x:Key="TextBoxStyle5" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnGotFocus1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF68839A"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF86C7FF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnLostFocus1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF86C7FF"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF68839A" CornerRadius="2" Background="White" Padding="2">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="White" Margin="0" HorizontalAlignment="Left" Width="128.868"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="FocusManager.LostFocus" SourceName="PART_ContentHost">
                                <BeginStoryboard x:Name="OnLostFocus1_BeginStoryboard" Storyboard="{StaticResource OnLostFocus1}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="FocusManager.GotFocus" SourceName="border">
                                <BeginStoryboard Storyboard="{StaticResource OnGotFocus1}"/>
                            </EventTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                            <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Foreground="#FF513838">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Foreground="#FF2B5668"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TextBoxStyle6" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnGotFocus1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF336CE6"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.995"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Storyboard1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF336CE6"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.4" Value="White"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF918F8F" CornerRadius="2" Background="White" Padding="2">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="#FF3553D8" Margin="0,0,-3,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="FocusManager.GotFocus" SourceName="PART_ContentHost"/>
                            <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                            <EventTrigger RoutedEvent="FocusManager.LostFocus" SourceName="PART_ContentHost"/>
                            <EventTrigger RoutedEvent="FocusManager.LostFocus" SourceName="PART_ContentHost">
                                <BeginStoryboard x:Name="OnGotFocus1_BeginStoryboard" Storyboard="{StaticResource OnGotFocus1}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFE4E4E4" Offset="0.992"/>
                                        <GradientStop Color="#FFEAE7E7"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                            <Label x:Name="label" Content="New" HorizontalAlignment="Left" VerticalAlignment="Top" Width="37.5" Margin="13.666,0,0,0" Foreground="#FF5F5F5F"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFE4E4E4" Offset="0.992"/>
                                        <GradientStop Color="#FFEAE7E7"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                            <Label x:Name="label" Content="Next" HorizontalAlignment="Left" VerticalAlignment="Top" Width="37.5" Margin="13.666,0,0,0" Foreground="#FF5F5F5F"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F0F0F0" Offset="0.0"/>
            <GradientStop Color="#E5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#ECF4FC" Offset="0.0"/>
            <GradientStop Color="#DCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
        <Style x:Key="TabItemStyle2" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="templateRoot">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF4D85C3"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="innerBorder">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF4D85C3"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF00499B"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter_Copy1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="templateRoot">
                                    <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#FF4D85C3"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="innerBorder">
                                    <SplineColorKeyFrame KeyTime="0" Value="#FF00499B"/>
                                    <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#FF4D85C3"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Background="Black">
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                <Border x:Name="innerBorder" BorderBrush="White" BorderThickness="1,1,1,0" Background="#FF4D85C3" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="templateRoot">
                                <BeginStoryboard x:Name="OnMouseEnter_Copy1_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter_Copy1}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="templateRoot">
                                <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
                            </EventTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle5" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFE4E4E4" Offset="0.992"/>
                                        <GradientStop Color="#FFEAE7E7"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                            <Label x:Name="label" Content="Back" HorizontalAlignment="Left" VerticalAlignment="Top" Width="49.4" Margin="13.666,0,0,0" Foreground="#FF5F5F5F"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle4" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFE4E4E4" Offset="0.992"/>
                                        <GradientStop Color="#FFEAE7E7"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                            <Label x:Name="label" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="49.4" Margin="13.666,0,0,0" Foreground="#FF5F5F5F"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                    <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFE4E4E4" Offset="0.992"/>
                                        <GradientStop Color="#FFEAE7E7"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                            <Label x:Name="label" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="49.4" Margin="10.331,0,0,0" Foreground="#FF5F5F5F"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabItemStyle3" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="innerBorder">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF4D85C3"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF00499B"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter_Copy1">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="innerBorder">
                                    <SplineColorKeyFrame KeyTime="0" Value="#FF00499B"/>
                                    <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#FF4D85C3"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                <Border x:Name="innerBorder" BorderBrush="White" BorderThickness="1,1,1,0" Background="#FF4D85C3" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="templateRoot">
                                <BeginStoryboard x:Name="OnMouseEnter_Copy1_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter_Copy1}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="templateRoot">
                                <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
                            </EventTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="2.662,2.339,3.247,2.254"  Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle24" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseEnter3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave3">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                            <Image x:Name="image" Margin="2.662,2.339,3.247,2.254" Source="/ERP;component/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                            </EventTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <local:ConvertTextToImage  xmlns:local="clr-namespace:ERP.Masters" x:Key="convert"/>
        <Style x:Key="LabelStyle1" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle7" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle6" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Stretch" Margin="17,0,17,4" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Bottom"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle8" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Stretch" Margin="17,0,9,4" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Bottom"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.LayoutTransform>
        <ScaleTransform ScaleX="0.5" ScaleY="0.5" CenterX="0" CenterY="0" />
    </Window.LayoutTransform>
    <Grid Margin="10.163,17.427,6.829,7.427">
        <Rectangle Fill="#FF2B3D5D" RadiusY="4" RadiusX="4" Stroke="#7E191818" StrokeThickness="16" Margin="0,0,2.008,2.146"/>
        <Rectangle RadiusY="4" RadiusX="4" Fill="White" Stroke="#FF588FCB" Margin="353,98,339.667,0" Height="100" VerticalAlignment="Top"/>

        <Grid Margin="87,98,0,0" Height="510" VerticalAlignment="Top" HorizontalAlignment="Left" Width="1001.825">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>
            <Rectangle Stroke="#FF568CC9" Margin="-26,-30,754,-3" Grid.RowSpan="2">
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                        <GradientStop Color="#FF18233A" Offset="0"/>
                        <GradientStop Color="#FF18233A" Offset="1"/>
                        <GradientStop Color="#FF4C5691" Offset="0.518"/>
                        <GradientStop Color="#FF4C5691" Offset="0.455"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>


            <Label Content="Search Option" Margin="-16,-21,923,188.667" Foreground="White" FontStyle="Italic" FontFamily="Segoe UI Semibold"/>
            <ComboBox TabIndex="1" ItemsSource="{Binding SelectionItems}" SelectedItem="{Binding SearchSelectedItem}" Margin="87,-19,756,198.667" SelectedIndex="0"/>
            <TextBox TabIndex="2" x:Name="searchbox" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="149" Style="{DynamicResource TextBoxStyle5}" BorderBrush="#7F000000" SelectionBrush="#FF2B5668" Height="23" VerticalAlignment="Top" Margin="87,15,0,0" />
            <DataGrid 
				SnapsToDevicePixels="True" AlternatingRowBackground="LightSteelBlue" SelectionMode="Single" AutoGenerateColumns="False" IsReadOnly="True" SelectedItem="{Binding CurrentEmployee}" ItemsSource="{Binding AllEmployeesSorted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="-26,54,756,0" BorderBrush="#FF2B5668" Style="{DynamicResource DataGridStyle1}" Height="440" VerticalAlignment="Top" Grid.RowSpan="2">
                <DataGrid.Columns>
                    <!--<DataGridTemplateColumn Header="Image" Width="50"  IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Width="50" Height="50" Source="{Binding image, Converter={StaticResource convert}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>-->
                    <DataGridTextColumn  Header="EMP ID" Binding="{Binding emp_id}" Width="60"/>
                    <DataGridTextColumn Header="Name" Binding="{Binding first_name}" Width="120" />
                </DataGrid.Columns>
            </DataGrid>
            <Grid Margin="282,128,0,0" HorizontalAlignment="Left" Width="693" Grid.RowSpan="2">
                <TabControl x:Name="tabcontroll" Margin="0,-24,0,-16" BorderBrush="#FF4D85C3" Style="{DynamicResource TabControlStyle1}" HorizontalAlignment="Left" Width="693.346" >
                    <TabItem x:Name="basictab" Header="Basic Employee Details" Margin="-2.5,-3,29.167,1" Background="#FF98B9DE" Style="{DynamicResource TabItemStyle2}" Foreground="White" FontFamily="Segoe UI Semibold" BorderBrush="#FF6296D2">
                        <AdornerDecorator Margin="0,2,0,-2">
                            <Grid Margin="0,-6,-1,10" Background="#FFF5F5F8" HorizontalAlignment="Left" Width="688">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="86*"/>
                                    <ColumnDefinition Width="242*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="97*"/>
                                    <ColumnDefinition Width="22*"/>
                                    <ColumnDefinition Width="93*"/>
                                    <ColumnDefinition Width="26*"/>
                                    <ColumnDefinition Width="9*"/>
                                    <ColumnDefinition Width="21*"/>
                                    <ColumnDefinition Width="24*"/>
                                    <ColumnDefinition Width="6*"/>
                                    <ColumnDefinition Width="21*"/>
                                    <ColumnDefinition Width="5*"/>
                                    <ColumnDefinition Width="16*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="9*"/>
                                    <RowDefinition Height="25*"/>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="25*"/>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="25*"/>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="25*"/>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="25*"/>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="25*"/>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="25*"/>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="25*"/>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="25*"/>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="25*"/>
                                    <RowDefinition Height="26*"/>
                                    <RowDefinition Height="12*"/>
                                </Grid.RowDefinitions>
                                <Label Content="Initials" HorizontalAlignment="Left" Foreground="#FF513838" Grid.Row="5" Width="46" Grid.Column="2" Height="26" VerticalAlignment="Top" Margin="103,21.763,0,0" Grid.RowSpan="3"/>
                                <Label Foreground="#FF513838" Content="Surname" HorizontalAlignment="Left" Grid.Row="7" Width="58" Grid.Column="1" Height="26" VerticalAlignment="Top" Margin="0,18.632,0,0" Grid.RowSpan="3"/>
                                <Label Content="First name" HorizontalAlignment="Left" Foreground="#FF513838" Grid.Row="9" Width="67" Grid.Column="1" Height="26" VerticalAlignment="Top" Margin="0,21.5,0,0" Grid.RowSpan="3"/>
                                <Label Content="Second name" HorizontalAlignment="Left" Foreground="#FF513838" Grid.Row="11" Width="84" Height="26" VerticalAlignment="Top" Margin="0,19.5,0,0" Grid.RowSpan="3" Grid.Column="1"/>
                                <Label Content="Gender" HorizontalAlignment="Left" Foreground="#FF513838" Grid.Row="13" Grid.Column="1" Width="50" Height="26" VerticalAlignment="Top" Margin="0,21.158,0,0" Grid.RowSpan="3"/>

                                <Label Content="NIC No." HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FF513838" Grid.Row="15" Height="26" Width="53" Grid.Column="1" Margin="0,22.026,0,0" Grid.RowSpan="3"/>
                                <Label Content="District" HorizontalAlignment="Left" Foreground="#FF513838" Grid.Row="5" Grid.Column="3" Width="56" Height="26" VerticalAlignment="Top" Grid.RowSpan="3" Margin="9,10,0,0" Grid.ColumnSpan="2"/>

                                <Label Content="Town" HorizontalAlignment="Left" Foreground="#FF513838" Grid.Row="7" Grid.Column="4" Width="39" Height="26" VerticalAlignment="Top" Grid.RowSpan="3" Margin="0,11,0,0"/>
                                <Label Content="Civil Status" HorizontalAlignment="Left" Foreground="#FF513838" Grid.Row="9" Grid.Column="4" Grid.RowSpan="3" Width="70" Height="26" VerticalAlignment="Top" Margin="0,13,0,0"/>
                                <Label Foreground="#FF513838" Content="Birthday" HorizontalAlignment="Left" Grid.Row="11" Grid.Column="4" Width="56" Height="26" VerticalAlignment="Top" Grid.RowSpan="3" Margin="0,15,0,0"/>

                                <Label Content="Employee No" HorizontalAlignment="Left" Foreground="#FF513838" Grid.Column="1" Width="83" Height="26" VerticalAlignment="Top" Grid.RowSpan="2" Margin="0,-1,0,0"/>
                                <Label Content="EPF No" HorizontalAlignment="Left" Foreground="#FF513838" Grid.Row="3" Grid.Column="1" Width="49" Height="26" VerticalAlignment="Top" Margin="0,18.895,0,0" Grid.RowSpan="3"/>
                                <Label Content="ETF No" HorizontalAlignment="Left" Foreground="#FF513838" Grid.Row="1" Grid.Column="1" Width="49" Height="26" VerticalAlignment="Top" Grid.RowSpan="3" Margin="0,22,0,0"/>

                                <TextBox TabIndex="1" TextWrapping="Wrap" Text="{Binding EmployeeNo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="0,3,0,5.237" Grid.Column="2" Height="23" Grid.RowSpan="2">
                                    <TextBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/1367236103_ok.png" Height="20"/>
                                                            <TextBlock Text="Contains number or character" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </TextBox.ToolTip>
                                </TextBox>
                                <TextBox TabIndex="2" TextWrapping="Wrap" Text="{Binding CurrentEmployee.etf_no, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="0,21.763,9,5.813" Grid.Row="1" Grid.Column="2" Height="23" Grid.ColumnSpan="2" Grid.RowSpan="3"/>
                                <TextBox TabIndex="3" TextWrapping="Wrap" Text="{Binding CurrentEmployee.epf_no, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="0,22.187,0,5.389" Grid.Column="2" Grid.Row="3" Height="23" Grid.RowSpan="3"/>
                                <TextBox TabIndex="5" TextWrapping="Wrap" Text="{Binding CurrentEmployee.initials, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="154,22.611,0,4.965" Grid.Column="2" Grid.Row="5" Height="23" Grid.RowSpan="3"/>
                                <TextBox TabIndex="6" TextWrapping="Wrap" Text="{Binding Surname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="0,1.035,0,2.965" Grid.Column="2" Grid.Row="8" Height="23" Grid.RowSpan="2"/>
                                <TextBox TabIndex="7" TextWrapping="Wrap" Text="{Binding FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="0,3.035,0,1.965" Grid.Column="2" Grid.Row="10" Height="23" Grid.RowSpan="2"/>
                                <TextBox TabIndex="8" TextWrapping="Wrap" Text="{Binding CurrentEmployee.second_name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="0,2.035,0,2.541" Grid.Column="2" Grid.Row="12" Height="23" Grid.RowSpan="2"/>
                                <ComboBox TabIndex="9" SelectedValue="{Binding CurrentEmployee.gender_id}" ItemsSource="{Binding Genders}" DisplayMemberPath="gender" SelectedValuePath="gender_id" HorizontalAlignment="Left" Margin="0,3.459,0,2.117" Width="102" Grid.Row="14" Grid.Column="2" Grid.RowSpan="2"/>
                                <TextBox TabIndex="10" TextWrapping="Wrap" Text="{Binding NIC, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="0,1.883,0,2.693" Grid.Column="2" Grid.Row="16" Height="23" Grid.RowSpan="2">
                                    <TextBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/1367236103_ok.png" Height="20"/>
                                                            <TextBlock Text="NIC/Passport/Driving license" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </TextBox.ToolTip>
                                </TextBox>
                                <ComboBox IsEditable="True" TabIndex="17" SelectedItem="{Binding CurrentCity}" SelectedValue="{Binding CurrentEmployee.city_id}" ItemsSource="{Binding Citys}" DisplayMemberPath="city" SelectedValuePath="city_id" HorizontalAlignment="Left" Margin="1,10,0,19" Width="163" Grid.Row="5" Grid.Column="6" Grid.ColumnSpan="5" Grid.RowSpan="3">
                                    <ComboBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/IconS2SO4.ico" Height="50"/>
                                                            <TextBlock Text="Select a District to select a Town" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </ComboBox.ToolTip>
                                </ComboBox>
                                <ComboBox TabIndex="21" SelectedItem="{Binding CurrentCivilStatus}" SelectedValue="{Binding CurrentEmployee.civil_status_id}" ItemsSource="{Binding SivelStates}" DisplayMemberPath="civil_status" SelectedValuePath="civi_status_id" HorizontalAlignment="Left" Margin="2,16,0,17" Width="163" Grid.Row="9" Grid.Column="6" Grid.ColumnSpan="5" Grid.RowSpan="3"/>
                                <DatePicker TabIndex="22" SelectedDate="{Binding Birthday, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="42,17,2,13" Grid.Row="11" Grid.Column="6" Grid.ColumnSpan="8" Height="23" Grid.RowSpan="3"/>
                                <ComboBox IsEditable="True" TabIndex="19" x:Name="Town" SelectedItem="{Binding CurrentTown}" SelectedValue="{Binding CurrentEmployee.town_id}" ItemsSource="{Binding Towns}" DisplayMemberPath="town_name" SelectedValuePath="town_id" HorizontalAlignment="Left" Margin="2,10,0,19" Width="163" Grid.Row="7" Grid.Column="6" Grid.ColumnSpan="5" Grid.RowSpan="3"/>
                                <Button TabIndex="18" Command="{Binding CityAddButton}" Content="+" Grid.Column="12" Grid.Row="5" VerticalAlignment="Top" Margin="0,12,2,0" Grid.ColumnSpan="2" Grid.RowSpan="3">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more Districts" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button TabIndex="20" Command="{Binding TownAddButton}" Content="+" Grid.Column="12" Grid.Row="7" VerticalAlignment="Bottom" Margin="1,0,1,22" Grid.ColumnSpan="2" Grid.RowSpan="3">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/Town_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more towns" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Label Content="Title" HorizontalAlignment="Left" Foreground="#FF513838" Grid.Row="5" Grid.Column="1" Width="49" Height="26" VerticalAlignment="Top" Margin="1,18.763,0,0" Grid.RowSpan="3"/>
                                <ComboBox TabIndex="4" ItemsSource="{Binding Title}" SelectedValue="{Binding CurrentEmployee.title_id}" SelectedItem="{Binding CurrentTitle}" DisplayMemberPath="title_name" SelectedValuePath="title_id" Grid.Column="2" HorizontalAlignment="Left" Grid.Row="6" Width="103" Height="24" VerticalAlignment="Top" Grid.RowSpan="2"/>
                                <Label Foreground="#FF513838" Content="Religion" Grid.Column="4" HorizontalAlignment="Left" Grid.Row="3" VerticalAlignment="Top" Width="80" Grid.RowSpan="3" Margin="0,12,0,0"/>
                                <ComboBox TabIndex="16" SelectedItem="{Binding CurrentReligen}" SelectedValue="{Binding CurrentEmployee.religen_id}" ItemsSource="{Binding Religen}" DisplayMemberPath="religen_name" SelectedValuePath="religen_id" HorizontalAlignment="Left" Margin="1,14,0,18" Width="163" Grid.Column="6" Grid.Row="3" Grid.ColumnSpan="5" Grid.RowSpan="3"/>
                                <Label Content="Passport No." HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FF513838" Grid.Row="13" Height="26" Width="81" Grid.Column="4" Grid.RowSpan="3" Margin="0,11,0,0"/>
                                <TextBox TabIndex="23" TextWrapping="Wrap" Text="{Binding CurrentEmployeeOtherBasicdetail.passport_no, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="0,16,3,14" Grid.Column="6" Grid.Row="13" Height="23" Grid.ColumnSpan="8" Grid.RowSpan="3"/>
                                <Label Foreground="#FF513838" Content="Passport Expiry Date" HorizontalAlignment="Left" Grid.Row="15" Grid.Column="4" Width="138" Height="26" VerticalAlignment="Top" Grid.RowSpan="3" Grid.ColumnSpan="3" Margin="0,11,0,0"/>
                                <DatePicker TabIndex="24" SelectedDate="{Binding CurrentEmployeeOtherBasicdetail.passport_expiry_date}" Margin="44,16,0,14" Grid.Row="15" Grid.Column="6" Grid.ColumnSpan="8" Height="23" Grid.RowSpan="3"/>
                                <Label Content="Driving license No." HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FF513838" Grid.Row="17" Height="26" Width="113" Grid.Column="4" Grid.RowSpan="3" Grid.ColumnSpan="2" Margin="0,12,0,0"/>
                                <TextBox TabIndex="25" TextWrapping="Wrap" Text="{Binding CurrentEmployeeOtherBasicdetail.driving_license_no, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="1,15,2,15" Grid.Column="6" Grid.Row="17" Height="23" Grid.ColumnSpan="8" Grid.RowSpan="3"/>
                                <Label Content="Driving license Expiry Date" VerticalAlignment="Top" Foreground="#FF513838" Grid.Row="19" Height="26" Grid.Column="4" Margin="0,15,55,0" Grid.RowSpan="2" Grid.ColumnSpan="3"/>
                                <DatePicker TabIndex="26" SelectedDate="{Binding CurrentEmployeeOtherBasicdetail.license_expiry_date}" Margin="41,17,3,9" Grid.Row="19" Grid.Column="6" Grid.ColumnSpan="8" Height="23" Grid.RowSpan="2"/>
                                <Label Content="Race" HorizontalAlignment="Left" Foreground="#FF513838" Grid.Row="17" Grid.Column="1" Width="81" Height="26" VerticalAlignment="Top" Grid.RowSpan="3" Margin="1,22.026,0,0"/>
                                <Label Content="Nationality" HorizontalAlignment="Left" Foreground="#FF513838" Grid.Row="19" Grid.Column="1" Width="81" Height="26" VerticalAlignment="Top" Grid.RowSpan="2" Margin="1,20.171,0,0"/>
                                <ComboBox TabIndex="11" ItemsSource="{Binding Race}" SelectedItem="{Binding CurrentRace}" SelectedValuePath="race_id" SelectedValue="{Binding CurrentAdditionaldtl.race_id}" DisplayMemberPath="race_name"  Grid.Column="2" HorizontalAlignment="Left" Grid.Row="19" VerticalAlignment="Top" Width="163" Margin="1,0,0,0"/>
                                <ComboBox TabIndex="13" ItemsSource="{Binding Nationality}" SelectedItem="{Binding CurrentNationality}" DisplayMemberPath="natinolity_name" SelectedValuePath="nationality_id" SelectedValue="{Binding CurrentAdditionaldtl.nationality_id}"  Grid.Column="2" HorizontalAlignment="Left" Grid.Row="20" VerticalAlignment="Top" Width="163" Margin="1,3,0,0"/>
                                <Label Content="Active Employee " HorizontalAlignment="Left" Margin="1,2,0,0" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="135" Grid.Column="4" Grid.ColumnSpan="3" Grid.RowSpan="2" Grid.Row="1"/>
                                <CheckBox TabIndex="15" IsChecked="{Binding CurrentEmployee.isActive}" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Margin="2,10,0,0" Grid.Column="6" Grid.Row="1" Grid.RowSpan="2">
                                    <CheckBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/Employee_Masters_logo.png" Height="50"/>
                                                            <TextBlock Text="Employee is Active or Not" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                                <Button TabIndex="12" Command="{Binding RaceAddButton}" Content="+" Margin="169,0.167,49,0" VerticalAlignment="Top" Height="22" Grid.Column="2" Grid.Row="19">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button TabIndex="14" Command="{Binding NationalityAddButton}" Content="+" Margin="169,3.018,49,0" VerticalAlignment="Top" Height="22" Grid.Column="2" Grid.Row="20" Grid.RowSpan="2">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Label Content="Executive Employee " HorizontalAlignment="Left" Margin="59,3,0,0" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="135" Grid.Column="6" Grid.ColumnSpan="7" Grid.RowSpan="2" Grid.Row="1"/>
                                <CheckBox TabIndex="15" IsChecked="{Binding CurrentEmployee.isExecutive}" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Margin="0,8,0,0" Grid.Column="12" Grid.Row="1" Grid.RowSpan="2">
                                    <CheckBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/Employee_Masters_logo.png" Height="50"/>
                                                            <TextBlock Text="Employee is Executive or Not" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </CheckBox.ToolTip>
                                </CheckBox>

                            </Grid>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem x:Name="detailtab" Header="Employee Official Details " Margin="-28.75,-5.083,20.417,1.083" Background="#FF98B9DE" BorderBrush="#FF6296D2" Foreground="White" Style="{DynamicResource TabItemStyle3}" FontFamily="Segoe UI Semibold">
                        <AdornerDecorator>
                            <Grid Margin="0,-2,-1,-11" Background="#FFF5F5F8" Height="347" VerticalAlignment="Bottom">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="298*"/>
                                    <RowDefinition Height="49*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="115*"/>
                                    <ColumnDefinition Width="573*"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Department Name" HorizontalAlignment="Left" Width="118" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Margin="10,187,0,0" Grid.ColumnSpan="2"/>
                                <ComboBox IsEditable="True" TabIndex="6" SelectedItem="{Binding CurrentDepartment}" SelectedValue="{Binding CurrentEmployee.department_id}" ItemsSource="{Binding Departments}" DisplayMemberPath="department_name" SelectedValuePath="department_id" HorizontalAlignment="Left" Margin="30,189,0,87" Width="185" Grid.Column="1"/>
                                <Label Content="Designation Name" HorizontalAlignment="Left" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="111" Margin="10,249,0,0" Grid.ColumnSpan="2"/>
                                <ComboBox IsEditable="True" TabIndex="10" SelectedItem="{Binding CurrentDesignation}" SelectedValue="{Binding CurrentEmployee.designation_id}" ItemsSource="{Binding Designation}" DisplayMemberPath="designation" SelectedValuePath="designation_id" HorizontalAlignment="Left" Margin="30,251,0,25" Width="183" Grid.Column="1"/>
                                <Label Content="Section Name" HorizontalAlignment="Left" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="86" Margin="10,216,0,0"/>
                                <ComboBox IsEditable="True" TabIndex="8" SelectedItem="{Binding CurrentSection}" SelectedValue="{Binding CurrentEmployee.section_id}" ItemsSource="{Binding Sections}" DisplayMemberPath="section_name" SelectedValuePath="section_id" HorizontalAlignment="Left" Margin="30,220,0,56" Width="184" Grid.Column="1"/>
                                <Label Content="Grade" HorizontalAlignment="Left" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="42" Margin="10,286,0,0" Grid.RowSpan="2"/>
                                <ComboBox IsEditable="True" TabIndex="12" SelectedItem="{Binding CurrentGrade}" SelectedValue="{Binding CurrentEmployee.grade_id}" ItemsSource="{Binding Grades}" DisplayMemberPath="grade" SelectedValuePath="grade_id" HorizontalAlignment="Left" Width="184" Margin="30,286,0,39" Grid.Column="1" Grid.RowSpan="2"/>
                                <Label Content="Join Date" HorizontalAlignment="Left" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="61" Margin="268,160,0,0" Grid.Column="1"/>
                                <DatePicker TabIndex="17" SelectedDate="{Binding CurrentEmployee.join_date}" HorizontalAlignment="Left" Margin="395,161,0,114" Width="146" Grid.Column="1">
                                    <DatePicker.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/Payroll/Form/Employee-Period-Quantity.png" Height="50"/>
                                                            <TextBlock Text="Employee company join date" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </DatePicker.ToolTip>
                                </DatePicker>
                                <TextBox IsEnabled="False" TabIndex="15" TextWrapping="Wrap" Text="{Binding CurrentEmployee.basic_salary, Mode=TwoWay, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="395,102,17,173" Grid.Column="1">
                                    <TextBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/1367236103_ok.png" Height="20"/>
                                                            <TextBlock Text="basic salary should be 0 or more" Margin="10" Width="150" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </TextBox.ToolTip>
                                </TextBox>
                                <DatePicker TabIndex="16" SelectedDate="{Binding CurrentEmployee.prmernant_active_date}" HorizontalAlignment="Left" Width="148" Margin="395,132,0,143" Grid.Column="1">
                                    <DatePicker.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/Payroll/Form/Employee-Period-Quantity.png" Height="50"/>
                                                            <TextBlock Text="Employee Permanent date" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </DatePicker.ToolTip>
                                </DatePicker>
                                <Label Content="Basic Salary" HorizontalAlignment="Left" Margin="267,100,0,0" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="74" Grid.Column="1"/>
                                <Label Content="Confirmation Date" HorizontalAlignment="Left" Margin="268,133,0,0" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="110" Grid.Column="1"/>
                                <Label Content="Payment Method" HorizontalAlignment="Left" Margin="267,71,0,0" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="108" RenderTransformOrigin="0.311,-0.038" Grid.Column="1"/>
                                <ComboBox TabIndex="14" SelectedItem="{Binding CurrentPaymetMethord}" SelectedValue="{Binding CurrentEmployee.payment_methord_id}" ItemsSource="{Binding paymentmethord}" DisplayMemberPath="payment_method" SelectedValuePath="paymet_method_id" HorizontalAlignment="Left" Margin="395,75,0,201" Width="113" Grid.Column="1"/>
                                <Label Foreground="#FF513838" Content="Company Branch" HorizontalAlignment="Left" Margin="10,153,0,0" VerticalAlignment="Top" Width="115" Grid.ColumnSpan="2"/>
                                <ComboBox IsEditable="True" TabIndex="5" ItemsSource="{Binding CompanyBranch}" SelectedValue="{Binding CurrentEmployee.branch_id}" SelectedItem="{Binding CurretCompanyBranch}" DisplayMemberPath="companyBranch_Name" SelectedValuePath="companyBranch_id"  HorizontalAlignment="Left" Margin="30,155,0,121" Width="185" Grid.Column="1"/>
                                <Button TabIndex="7" Command="{Binding DepartmentAddButton}" Content="+" HorizontalAlignment="Left" Margin="220,189,0,0" VerticalAlignment="Top" Width="19" Height="22" Grid.Column="1">
                                    <Button.ToolTip>

                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/Department_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more departments" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>

                                    </Button.ToolTip>
                                </Button>
                                <Button TabIndex="11" Command="{Binding DesignationAddButton}" Content="+" HorizontalAlignment="Left" Margin="220,251,0,0" VerticalAlignment="Top" Width="19" Grid.Column="1">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/Destination__logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more Designations" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button TabIndex="9" Command="{Binding SectionAddButton}" Content="+" HorizontalAlignment="Left" Margin="220,221,0,0" VerticalAlignment="Top" Width="19" Grid.Column="1">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/Section_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more sections" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button TabIndex="13" Command="{Binding GradeAddButton}" Content="+" HorizontalAlignment="Left" Margin="220,286,0,0" VerticalAlignment="Top" Width="19" Grid.Column="1" Grid.RowSpan="2">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/Grade_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more Grades" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button TabIndex="21" Command="{Binding ImageButton}" Content="Browse" HorizontalAlignment="Left" Height="23" Margin="414,291,0,0" VerticalAlignment="Top" Width="64" Grid.Column="1" Grid.RowSpan="2"/>
                                <Label Content="Image" HorizontalAlignment="Left" Margin="276,286,0,0" VerticalAlignment="Top" Width="102" Grid.Column="1" Grid.RowSpan="2"/>
                                <Button TabIndex="22" Command="{Binding ImageDelete}" Content="Remove" HorizontalAlignment="Left" Margin="483,291,0,0" VerticalAlignment="Top" Width="61" Height="23" Grid.Column="1" Grid.RowSpan="2"/>
                                <Border BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="33" Margin="268,286,0,0" VerticalAlignment="Top" Width="288" Grid.Column="1" Grid.RowSpan="2"/>
                                <DatePicker TabIndex="20" SelectedDate="{Binding CurrentEmployee.resign_date}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="146" Margin="395,255,0,0" Grid.Column="1"/>
                                <Label Foreground="#FF513838" Content="Resign Date" HorizontalAlignment="Left" Margin="268,252,0,15" Width="102" Grid.Column="1"/>
                                <Label Foreground="#FF513838" Content="Contract End Date" HorizontalAlignment="Left" Margin="267,223,0,0" VerticalAlignment="Top" Width="111" Height="31" Grid.Column="1"/>
                                <DatePicker TabIndex="19" SelectedDate="{Binding CurrentEmployee.contract_end_date}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="146" Margin="395,224,0,0" Grid.Column="1"/>
                                <Label Foreground="#FF513838" Content="Contract Start Date" HorizontalAlignment="Left" Margin="268,190,0,0" VerticalAlignment="Top" Width="117" Height="31" Grid.Column="1"/>
                                <DatePicker TabIndex="18" SelectedDate="{Binding CurrentEmployee.contract_start_date}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="146" Margin="395,192,0,0" Grid.Column="1"/>
                                <TextBox TabIndex="4" Text="{Binding CurrentEmployeeOtherOfficialDetailsView.etf_name, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="30,117,360,158" Grid.Column="1">
                                </TextBox>
                                <Label Content="EPF and ETF Name" HorizontalAlignment="Left" Margin="10,117,0,0" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="127" Grid.ColumnSpan="2"/>
                                <TextBox TabIndex="3" Text="{Binding CurrentEmployeeOtherOfficialDetailsView.account_name, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="30,84,359,191" Grid.Column="1">
                                </TextBox>
                                <Label Content="Account Name" HorizontalAlignment="Left" Margin="10,84,0,0" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="120" Grid.ColumnSpan="2"/>
                                <Label Content="Display Name" HorizontalAlignment="Right" Margin="0,50,558,0" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="120" Grid.ColumnSpan="2"/>
                                <TextBox TabIndex="2" Text="{Binding CurrentEmployeeOtherOfficialDetailsView.display_name, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="30,50,360,225" Grid.Column="1">
                                </TextBox>
                                <Label Content="Fingerprint Device ID" HorizontalAlignment="Right" Margin="0,18,548,0" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="130" Grid.ColumnSpan="2"/>
                                <TextBox TabIndex="1" Text="{Binding CurrentEmployeeOtherOfficialDetailsView.fingerprint_device_ID, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="30,18,360,257" Grid.Column="1">
                                </TextBox>
                                <Label Visibility="Hidden" Content="Cost Center" HorizontalAlignment="Left" Margin="268,13,0,0" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="108" RenderTransformOrigin="0.311,-0.038" Grid.Column="1"/>
                                <Label Visibility="Hidden" Content="Division" HorizontalAlignment="Left" Margin="268,43,0,0" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="108" RenderTransformOrigin="0.311,-0.038" Grid.Column="1"/>
                                <ComboBox Visibility="Hidden" ItemsSource="{Binding CostCenter}" SelectedValue="{Binding CurrentEmployee.cost_center_id}" SelectedItem="{Binding CurrentCostCenter}" DisplayMemberPath="cost_center_description" SelectedValuePath="cost_center_id" IsEditable="True" Grid.Column="1" HorizontalAlignment="Left" Margin="395,18,0,0" VerticalAlignment="Top" Width="161"/>
                                <ComboBox Visibility="Hidden" ItemsSource="{Binding Division}" SelectedValue="{Binding CurrentEmployee.division_id}" SelectedItem="{Binding CurrentDivision}" DisplayMemberPath="division_description" SelectedValuePath="division_id" IsEditable="True" Grid.Column="1" HorizontalAlignment="Left" Margin="395,47,0,0" VerticalAlignment="Top" Width="161"/>
                            </Grid>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem x:Name="employeeDocuments" Header="Employee Documents" Margin="-19.584,-5.75,-1.75,1.75" Background="#FF98B9DE" BorderBrush="#FF6296D2" Foreground="White" Style="{DynamicResource TabItemStyle3}" FontFamily="Segoe UI Semibold">
                        <AdornerDecorator>
                            <Grid Margin="0,-2,-1,-29" Background="#FFF5F5F8" Height="347" VerticalAlignment="Top">
                                <DataGrid SelectedItem="{Binding FileName}" HorizontalAlignment="Left" Margin="252,36,0,0" VerticalAlignment="Top" Height="247" Width="380" ItemsSource="{Binding FilePath}" />
                                <Button TabIndex="1" Command="{Binding Browse}" Content="Copy File" HorizontalAlignment="Left" Margin="24,50,0,0" VerticalAlignment="Top" Width="168" Height="26"/>
                                <Button TabIndex="2" Command="{Binding OpenADoc}" Content="Open File" HorizontalAlignment="Left" Margin="24,112,0,0" VerticalAlignment="Top" Width="168" Height="26"/>
                            </Grid>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem x:Name="medical" Header="Other Details" Margin="-3,-5,-4,1" Background="#FF98B9DE" BorderBrush="#FF6296D2" Foreground="White" Style="{DynamicResource TabItemStyle3}" FontFamily="Segoe UI Semibold">
                        <AdornerDecorator>
                            <Grid Margin="0,-2,-1,-29" Background="#FFF5F5F8" Height="347" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <CheckBox TabIndex="1" IsChecked="{Binding CurrentEmployee.auto_ot}" HorizontalAlignment="Left" Margin="158,17,0,0" VerticalAlignment="Top"/>
                                <Label Content="Auto OT Approved" HorizontalAlignment="Left" Margin="10,10,0,0" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="119"/>
                                <ComboBox TabIndex="2" ItemsSource="{Binding EPFList}" SelectedItem="{Binding CurrentEPFList}" x:Name="EPF" HorizontalAlignment="Left" Margin="158,39,0,0" VerticalAlignment="Top" Width="120"/>
                                <Label Content="EPF Status" HorizontalAlignment="Left" Margin="10,36,0,0" VerticalAlignment="Top" Width="79"/>
                                <Label Content="Act" HorizontalAlignment="Left" Margin="10,68,0,0" VerticalAlignment="Top" Width="79"/>
                                <Button TabIndex="3" Content="Add" Command="{Binding ActButton}" HorizontalAlignment="Left" Margin="158,67,0,0" VerticalAlignment="Top" Width="120" Height="22"/>
                                <ComboBox TabIndex="4" ItemsSource="{Binding blood_type}" SelectedItem="{Binding current_blood_type}" SelectedValue="{Binding current_employee_blood_type.blood_id}" SelectedValuePath="blood_id" DisplayMemberPath="blood_type" HorizontalAlignment="Left" Margin="158,95,0,0" VerticalAlignment="Top" Width="120"/>
                                <Image Source="{Binding ImagePath, Converter={StaticResource convert}}" Margin="537,23,22,196" Visibility="Hidden" />
                                <Label Content="Employee Fingerprint" HorizontalAlignment="Left" Margin="395,46,0,0" VerticalAlignment="Top" Width="137" Visibility="Hidden"/>
                                <Label Content="Electorial Division" HorizontalAlignment="Left" Foreground="#FF513838" Width="119" Height="26" VerticalAlignment="Top" Margin="10,162,0,0"/>
                                <ComboBox TabIndex="6" IsEditable="True" ItemsSource="{Binding ElectorialDivision}" SelectedItem="{Binding CurrentElectorialDivision}" DisplayMemberPath="electorial_division_name" SelectedValuePath="electorial_division_id" SelectedValue="{Binding CurrentAdditionaldtl.electorial_divition_id}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="178" Margin="158,166,0,0"/>
                                <Label Content="Election Center" HorizontalAlignment="Left" Foreground="#FF513838" Width="119" Height="26" VerticalAlignment="Top" Margin="10,194,0,0"/>
                                <ComboBox TabIndex="8" IsEditable="True" ItemsSource="{Binding ElectionCenter}" SelectedItem="{Binding CurrentElectionCenter}" DisplayMemberPath="election_center" SelectedValuePath="election_center_id" SelectedValue="{Binding CurrentAdditionaldtl.election_center_id}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="178" Margin="158,198,0,0"/>
                                <Label Content="Gramaniladari Division" HorizontalAlignment="Left" Foreground="#FF513838" Width="134" Height="26" VerticalAlignment="Top" Margin="10,227,0,0"/>
                                <ComboBox TabIndex="10" IsEditable="True" ItemsSource="{Binding GramaNiladhari}" SelectedItem="{Binding CurrentGramaNiladhari}" DisplayMemberPath="grama_niladhari_divition_name" SelectedValuePath="grama_niladhari_divition_id" SelectedValue="{Binding CurrentAdditionaldtl.grama_niladhari_devision_id}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="178" Margin="158,231,0,0"/>
                                <Label Content="Nearest Police Station" HorizontalAlignment="Left" Foreground="#FF513838" Width="129" Height="26" VerticalAlignment="Top" Margin="10,261,0,0"/>
                                <ComboBox  TabIndex="12" IsEditable="True" ItemsSource="{Binding NearestPoliceStation}" SelectedItem="{Binding CurrentNearestPoliceStation}" DisplayMemberPath="nearest_police_station" SelectedValuePath="nearest_police_station_id" SelectedValue="{Binding CurrentAdditionaldtl.nearest_police_station_id}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="178" Margin="158,265,0,0"/>
                                <Label Content="Residence to Home Town" HorizontalAlignment="Left" Foreground="#FF513838" Width="148" Height="26" VerticalAlignment="Top" Margin="10,293,0,0"/>
                                <TextBox TabIndex="14" Text="{Binding CurrentAdditionaldtl.dis_between_resident_to_hometown, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="158,296,352,28" Height="23"/>
                                <Button TabIndex="7" Command="{Binding ElectorialDivisionAddButton}" Content="+" Margin="343,166,321,0" VerticalAlignment="Top" Height="22">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button TabIndex="9" Command="{Binding ElectionCenterAddButton}" Content="+" Margin="343,198,321,0" VerticalAlignment="Top" Height="22">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button TabIndex="11" Command="{Binding GramaniladhariDivisionsAddButton}" Content="+" Margin="343,231,321,0" VerticalAlignment="Top" Height="22">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button TabIndex="13" Command="{Binding PoliceStationAddButton}" Content="+" Margin="343,265,321,0" VerticalAlignment="Top" Height="22">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Label Content="Tea Amount" HorizontalAlignment="Left" Margin="412,10,0,0" VerticalAlignment="Top" Width="79"/>
                                <TextBox TabIndex="15" Text="{Binding CurrentEmployee.tea_amount, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="499,14,11,310" Height="23"/>
                                <Label Content="Dust Amount" HorizontalAlignment="Left" Margin="412,46,0,0" VerticalAlignment="Top" Width="84"/>
                                <TextBox TabIndex="16" Text="{Binding CurrentEmployee.dust_amount, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="499,49,11,275" Height="23"/>
                                <Label Content="Salary Code/Scale" HorizontalAlignment="Left" Foreground="#FF513838" Width="119" Height="26" VerticalAlignment="Top" Margin="10,127,0,0"/>
                                <ComboBox TabIndex="5" IsEditable="True" ItemsSource="{Binding SalaryScales}" SelectedItem="{Binding CurrentSalaryScale}" DisplayMemberPath="salary_code" SelectedValuePath="salary_scale_id" SelectedValue="{Binding CurrentEmployee.salary_scale_id}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="91" Margin="158,131,0,0"/>
                                <TextBox IsReadOnly="True" TabIndex="5" Text="{Binding CurrentSalaryScale.salary_scale, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="254,131,321,194"/>
                                <Label Content="Leave" HorizontalAlignment="Left" Margin="417,86,0,0" VerticalAlignment="Top" Width="79"/>
                                <Button TabIndex="3" Content="Add" Command="{Binding LeaveButton}" HorizontalAlignment="Left" Margin="499,86,0,0" VerticalAlignment="Top" Width="120" Height="22"/>
                                <Label Content="Leave End&#xD;&#xA;Date" HorizontalAlignment="Left" Margin="410,116,0,0" VerticalAlignment="Top" Width="95" Height="41"/>
                                <DatePicker TabIndex="18" SelectedDate="{Binding CurrentEmployee.leave_end_date}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="146" Margin="499,121,0,0"/>

                            </Grid>
                        </AdornerDecorator>
                    </TabItem>

                    <TabItem x:Name="contact_details" Header="Contact Details" Margin="0,-6,-45,2" Background="#FF98B9DE" BorderBrush="#FF6296D2" Foreground="White" Style="{DynamicResource TabItemStyle3}" FontFamily="Segoe UI Semibold">
                        <AdornerDecorator>
                            <Grid HorizontalAlignment="Left" Height="352" VerticalAlignment="Top" Width="687" Margin="0,0,0,-38">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Address line 01" HorizontalAlignment="Left" Margin="19,26,0,0" Foreground="#FF513838" Width="91" Height="26" VerticalAlignment="Top"/>
                                <Label Content="Address line 02" HorizontalAlignment="Left" Margin="18,52,0,0" Foreground="#FF513838" Width="93" Height="25" VerticalAlignment="Top"/>
                                <Label Content="Address line 03" HorizontalAlignment="Left" Margin="17,78,0,0" Foreground="#FF513838" Width="93" Height="26" VerticalAlignment="Top"/>
                                <TextBox TabIndex="1" TextWrapping="Wrap" Text="{Binding Address, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="112,26,353,305"/>
                                <TextBox TabIndex="2" TextWrapping="Wrap" Text="{Binding CurrentEmployee.address_02, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="112,52,353,279"/>
                                <TextBox TabIndex="3" TextWrapping="Wrap" Text="{Binding CurrentEmployee.address_03, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="111,79,352,251"/>
                                <GroupBox Header="Current" HorizontalAlignment="Left" Height="113" Margin="9,2,0,0" VerticalAlignment="Top" Width="335" Foreground="#FF131111"/>
                                <Label Content="Address line 01" HorizontalAlignment="Left" Margin="19,150,0,0" Foreground="#FF513838" Width="91" Height="26" VerticalAlignment="Top"/>
                                <Label Content="Address line 02" HorizontalAlignment="Left" Margin="18,176,0,0" Foreground="#FF513838" Width="93" Height="25" VerticalAlignment="Top"/>
                                <Label Content="Address line 03" HorizontalAlignment="Left" Margin="17,202,0,0" Foreground="#FF513838" Width="93" Height="26" VerticalAlignment="Top"/>
                                <TextBox TabIndex="4" TextWrapping="Wrap" Text="{Binding CurrentEmployeeDetailsContact.permant_addr_line1, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="112,150,353,181"/>
                                <TextBox TabIndex="5" TextWrapping="Wrap" Text="{Binding CurrentEmployeeDetailsContact.permant_addr_line2, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="112,176,353,155"/>
                                <TextBox TabIndex="6" TextWrapping="Wrap" Text="{Binding CurrentEmployeeDetailsContact.permant_addr_line3, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="112,202,352,127"/>
                                <GroupBox Header="Permanent" HorizontalAlignment="Left" Height="113" Margin="9,127,0,0" VerticalAlignment="Top" Width="335" Foreground="#FF131111"/>
                                <Label Content="Mobile Number 1" HorizontalAlignment="Left" Margin="6,249,0,0" Foreground="#FF513838" Width="105" Height="26" VerticalAlignment="Top" Style="{DynamicResource LabelStyle1}" d:IsHidden="True"/>
                                <Label Content="Mobile Number 2" HorizontalAlignment="Left" Margin="6,280,0,0" Foreground="#FF513838" Width="108" Height="26" VerticalAlignment="Top"/>
                                <TextBox TabIndex="7" TextWrapping="Wrap" Text="{Binding CurrentEmployeeDetailsContact.mobile_number1, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="114,249,351,82"/>
                                <TextBox TabIndex="8" TextWrapping="Wrap" Text="{Binding CurrentEmployeeDetailsContact.mobile_number2, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="114,278,351,53"/>
                                <Label Content="Permanent T.P Number " HorizontalAlignment="Left" Margin="343,13,0,0" Foreground="#FF513838" Width="148" Height="26" VerticalAlignment="Top" Style="{DynamicResource LabelStyle1}" RenderTransformOrigin="0.147,0.528"/>
                                <Label Content="Current T.P Number " HorizontalAlignment="Left" Margin="343,44,0,0" Foreground="#FF513838" Width="139" Height="26" VerticalAlignment="Top"/>
                                <TextBox TabIndex="9" TextWrapping="Wrap" Text="{Binding CurrentEmployeeDetailsContact.perment_addr_tp, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="496,15,16,313"/>
                                <TextBox TabIndex="10" TextWrapping="Wrap" Text="{Binding CurrentEmployee.telephone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="496,47,16,282"/>
                                <Label Content="Office Mobile " HorizontalAlignment="Left" Margin="343,77,0,0" Foreground="#FF513838" Width="115" Height="26" VerticalAlignment="Top" Style="{DynamicResource LabelStyle1}"/>
                                <Label Content="Office T.P Number" HorizontalAlignment="Left" Margin="343,109,0,0" Foreground="#FF513838" Width="115" Height="26" VerticalAlignment="Top"/>
                                <TextBox TabIndex="11" TextWrapping="Wrap" Text="{Binding CurrentEmployeeDetailsContact.office_mobile, UpdateSourceTrigger=PropertyChanged}"  Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="496,79,16,251"/>
                                <TextBox TabIndex="12" TextWrapping="Wrap" Text="{Binding CurrentEmployeeDetailsContact.office_tp, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="496,111,16,217"/>
                                <Label Content="Personal email" HorizontalAlignment="Left" Margin="343,141,0,0" Foreground="#FF513838" Width="115" Height="26" VerticalAlignment="Top" Style="{DynamicResource LabelStyle1}"/>
                                <Label Content="Office email" HorizontalAlignment="Left" Margin="343,173,0,0" Foreground="#FF513838" Width="115" Height="26" VerticalAlignment="Top"/>
                                <TextBox TabIndex="13" TextWrapping="Wrap" Text="{Binding CurrentEmployeeDetailsContact.persanal_email, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="496,143,16,185"/>
                                <TextBox TabIndex="14" TextWrapping="Wrap" Text="{Binding CurrentEmployeeDetailsContact.office_email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="496,175,16,155"/>
                                <Label Content="Emergency Name 1" HorizontalAlignment="Left" Margin="343,205,0,0" Foreground="#FF513838" Width="115" Height="26" VerticalAlignment="Top" Style="{DynamicResource LabelStyle1}"/>
                                <Label Content="Emergency T.P Number 1" HorizontalAlignment="Left" Margin="343,237,0,0" Foreground="#FF513838" Width="148" Height="26" VerticalAlignment="Top"/>
                                <TextBox TabIndex="15" TextWrapping="Wrap" Text="{Binding CurrentEmployeeDetailsContact.emg_contact_name1, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="496,207,16,121"/>
                                <TextBox TabIndex="16" TextWrapping="Wrap" Text="{Binding CurrentEmployeeDetailsContact.emg_contact_number1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="496,239,16,89"/>
                                <Label Content="Emergency Name 2" HorizontalAlignment="Left" Margin="343,269,0,0" Foreground="#FF513838" Width="115" Height="26" VerticalAlignment="Top" Style="{DynamicResource LabelStyle1}"/>
                                <Label Content="Emergency T.P Number 2" HorizontalAlignment="Left" Margin="343,293,0,0" Foreground="#FF513838" Width="148" Height="26" VerticalAlignment="Top"/>
                                <TextBox TabIndex="17" TextWrapping="Wrap" Text="{Binding CurrentEmployeeDetailsContact.emg_contact_name2, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="496,271,16,57"/>
                                <TextBox TabIndex="18" TextWrapping="Wrap" Text="{Binding CurrentEmployeeDetailsContact.emg_contact_number2, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="496,301,16,27"/>
                                <Label Content="Mobile Number 1" HorizontalAlignment="Left" Margin="6,249,0,0" Foreground="#FF513838" Width="108" Height="26" VerticalAlignment="Top"/>



                            </Grid>

                        </AdornerDecorator>
                    </TabItem>
                    <TabItem x:Name="Employee_Awards" Header="Employee Awards Details" Margin="44.333,-5.75,13.002,1.75" Background="#FF98B9DE" BorderBrush="#FF6296D2" Foreground="White" Style="{DynamicResource TabItemStyle3}" FontFamily="Segoe UI Semibold">
                        <AdornerDecorator IsEnabled="True">
                            <Grid>
                                <Label Content="Employee Award Name" HorizontalAlignment="Left" Foreground="#FF513838" Width="149" Height="26" VerticalAlignment="Top" Margin="8,32,0,0"/>
                                <Label Content="Employee Award Description " HorizontalAlignment="Left" Foreground="#FF513838" Width="176" Height="26" VerticalAlignment="Top" Margin="8,68,0,0"/>
                                <Label Foreground="#FF513838" Content="Awards Announcement Date" HorizontalAlignment="Left" Width="174" Height="26" VerticalAlignment="Top" Margin="10,108,0,0"/>

                                <TextBox TabIndex="1" Text="{Binding CurrentEmployeeAwardsDetailsView.award_name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="202,35,205,276" Height="23"/>
                                <TextBox TabIndex="2" Text="{Binding CurrentEmployeeAwardsDetailsView.award_description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="202,68,205,243" Height="23"/>
                                <DatePicker TabIndex="3" SelectedDate="{Binding CurrentEmployeeAwardsDetailsView.awards_announcement_date}" Margin="202,108,0,201" HorizontalAlignment="Left" Width="171"/>
                                <DataGrid SelectionMode="Single" IsReadOnly="True"  AutoGenerateColumns="False" ItemsSource="{Binding EmployeeAwardsDetailsView}" SelectedItem="{Binding CurrentEmployeeAwardsDetailsView}"  HorizontalAlignment="Left" Margin="4,164,0,0" VerticalAlignment="Top" Height="154" Width="677">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Employee Award Name"  Binding="{Binding award_name}" Width="*"/>
                                        <DataGridTextColumn Header="Employee Award Description"  Binding="{Binding award_description}" Width="*"/>
                                        <DataGridTextColumn Header="Awards Announcement Date"  Binding="{Binding awards_announcement_date}" Width="*"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button TabIndex="5" x:Name="Emp_Award_Add_btn" Command="{Binding EmpAdd_btn}"  Content="Add" HorizontalAlignment="Left" Height="25" Margin="491,134,0,0" VerticalAlignment="Top" Width="59" Click="Emp_Award_Add_btn_Click" Style="{DynamicResource ButtonStyle7}"/>
                                <Button TabIndex="6" x:Name="Emp_Award_Remove_btn" Command="{Binding EmpRemove_btn}" Content="Remove" HorizontalAlignment="Left" Height="25" Margin="567,134,0,0" VerticalAlignment="Top" Width="59" Click="Emp_Award_Remove_btn_Click"/>
                                <Button TabIndex="4" x:Name="Emp_Award_New_btn" Command="{Binding EmpAword_btn}" Content="New" HorizontalAlignment="Left" Height="25" Margin="413,134,0,0" VerticalAlignment="Top" Width="59"  Style="{DynamicResource ButtonStyle7}" RenderTransformOrigin="-0.695,0.48"/>
                            </Grid>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem x:Name="family_details" Header="Family Details" Margin="-11.169,-6.5,27.666,2.5" Background="#FF98B9DE" BorderBrush="#FF6296D2" Foreground="White" Style="{DynamicResource TabItemStyle3}" FontFamily="Segoe UI Semibold">
                        <AdornerDecorator IsEnabled="True">
                            <Grid HorizontalAlignment="Left" Height="334" VerticalAlignment="Top" Width="687">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="First name" HorizontalAlignment="Left" Foreground="#FF513838" Width="67" Height="26" VerticalAlignment="Top" Margin="8,9,0,0"/>
                                <Label Content="Second name" HorizontalAlignment="Left" Foreground="#FF513838" Width="84" Height="26" VerticalAlignment="Top" Margin="8,42,0,0"/>
                                <Label Foreground="#FF513838" Content="Birthday" HorizontalAlignment="Left" Width="56" Height="26" VerticalAlignment="Top" Margin="374,8,0,0"/>

                                <TextBox TabIndex="1" Text="{Binding CurrentEmployeeFamilyDetails.first_name}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="97,9,347,302" Height="23"/>
                                <TextBox TabIndex="2" Text="{Binding CurrentEmployeeFamilyDetails.second_name}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="97,44,347,267" Height="23"/>
                                <DatePicker TabIndex="5" SelectedDate="{Binding CurrentEmployeeFamilyDetails.birthday}" Margin="506,8,0,302" HorizontalAlignment="Left" Width="171"/>
                                <Label Content="Relationship" HorizontalAlignment="Left" Foreground="#FF513838" Width="84" Height="26" VerticalAlignment="Top" Margin="8,78,0,0"/>
                                <TextBox TabIndex="3" Text="{Binding CurrentEmployeeFamilyDetails.relationship}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="97,79,347,232" Height="23"/>
                                <DataGrid AutoGenerateColumns="False" SelectionMode="Single" IsReadOnly="True" ItemsSource="{Binding EmployeeFamilyDetails}" SelectedItem="{Binding CurrentEmployeeFamilyDetails}"  HorizontalAlignment="Left" Margin="0,153,0,0" VerticalAlignment="Top" Height="154" Width="677">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="First Name" Binding="{Binding first_name}" Width="*"/>
                                        <DataGridTextColumn Header="Second Name" Binding="{Binding second_name}" Width="*"/>
                                        <DataGridTextColumn Header="Relationship" Binding="{Binding relationship}" Width="*"/>
                                        <DataGridTextColumn Header="Birthday" Binding="{Binding birthday}" Width="*"/>
                                        <DataGridTextColumn Header="Employee State" Binding="{Binding employee_state}" Width="*"/>
                                        <DataGridTextColumn Header="Work Place" Binding="{Binding work_place}" Width="90"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Label Content="Employment  State" HorizontalAlignment="Left" Foreground="#FF513838" Width="116" Height="26" VerticalAlignment="Top" Margin="374,76,0,0"/>
                                <Label Content="Work Place" HorizontalAlignment="Left" Foreground="#FF513838" Width="102" Height="26" VerticalAlignment="Top" Margin="374,44,0,0"/>
                                <TextBox TabIndex="6" Text="{Binding CurrentEmployeeFamilyDetails.work_place}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="506,44,10,267" Height="23"/>
                                <CheckBox TabIndex="4" IsChecked="{Binding CurrentEmployeeFamilyDetails.is_depend,FallbackValue=False}" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Margin="97,115,0,0" RenderTransformOrigin="2.145,5.546" IsThreeState="False">
                                    <CheckBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/Employee_Masters_logo.png" Height="50"/>
                                                            <TextBlock Text="Employee is Depend or Not" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                                <Label Content="Is  Depend" HorizontalAlignment="Left" Margin="8,109,0,0" Foreground="#FF513838" Height="26" VerticalAlignment="Top" Width="67"/>
                                <Button TabIndex="9" x:Name="Family_Add_btn"  Command="{Binding FamilyAddbtn}" Content="Add" HorizontalAlignment="Left" Height="25" Margin="487,123,0,0" VerticalAlignment="Top" Width="59" Click="Family_Add_btn_Click" Style="{DynamicResource ButtonStyle7}"/>
                                <Button TabIndex="10" x:Name="Family_Remove_btn" Command="{Binding FamilyRemovebtn}" Content="Remove" HorizontalAlignment="Left" Height="25" Margin="563,123,0,0" VerticalAlignment="Top" Width="59" Click="Family_Remove_btn_Click"/>
                                <CheckBox TabIndex="7" Name="EmploymentState" IsChecked="{Binding CurrentEmployeeFamilyDetails.employee_state,FallbackValue=False}"  HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Margin="506,84,0,0" RenderTransformOrigin="2.145,5.546" Width="171" IsThreeState="False">
                                    <CheckBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/Employee_Masters_logo.png" Height="50"/>
                                                            <TextBlock Text="Employee is Active or Not" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                                <Button TabIndex="8" x:Name="Emp_Familynew_btn" Command="{Binding EmpFamilynewbtn}" Content="New" HorizontalAlignment="Left" Height="25" Margin="412,123,0,0" VerticalAlignment="Top" Width="59" Click="Emp_Familynew_btn_Click" Style="{DynamicResource ButtonStyle7}"/>
                            </Grid>

                        </AdornerDecorator>
                    </TabItem>
                    <TabItem x:Name="Employee_Work_Exprince" Header="Work Experience Details" Margin="-25.833,-6,-1.5,2" Background="#FF98B9DE" BorderBrush="#FF6296D2" Foreground="White" Style="{DynamicResource TabItemStyle3}" FontFamily="Segoe UI Semibold">
                        <AdornerDecorator IsEnabled="True">
                            <Grid HorizontalAlignment="Left" Height="334" VerticalAlignment="Top" Width="687">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="previous Company Name" HorizontalAlignment="Left" Foreground="#FF513838" Width="153" Height="26" VerticalAlignment="Top" Margin="10,9,0,0"/>
                                <Label Content="Designation" HorizontalAlignment="Left" Foreground="#FF513838" Width="81" Height="26" VerticalAlignment="Top" Margin="374,40,0,0"/>
                                <Label Content="Work Duration" HorizontalAlignment="Left" Foreground="#FF513838" Width="99" Height="26" VerticalAlignment="Top" Margin="374,9,0,0"/>

                                <TextBox Text="{Binding CurrentEmployeeWorkExperienceDetailsView.previous_company_name}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="180,9,325,302" Height="23">
                                    <TextBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/1367236103_ok.png" Height="20"/>
                                                            <TextBlock Text="Contains number or character" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </TextBox.ToolTip>
                                </TextBox>
                                <TextBox Text="{Binding CurrentEmployeeWorkExperienceDetailsView.workDuration}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="484,9,10,302" Height="23"/>
                                <TextBox  Text="{Binding CurrentEmployeeWorkExperienceDetailsView.designation}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="484,44,10,267" Height="23"/>
                                <Label Foreground="#FF513838" Content="Join Date" HorizontalAlignment="Left" Width="114" Height="26" VerticalAlignment="Top" Margin="10,40,0,0"/>
                                <DatePicker SelectedDate="{Binding CurrentEmployeeWorkExperienceDetailsView.joinDate}" Margin="180,44,0,267" HorizontalAlignment="Left" Width="171" Height="23"/>
                                <Label Foreground="#FF513838" Content="Resign Date " HorizontalAlignment="Left" Width="114" Height="26" VerticalAlignment="Top" Margin="10,74,0,0"/>
                                <DatePicker SelectedDate="{Binding CurrentEmployeeWorkExperienceDetailsView.resignDate}" Margin="180,79,0,232" HorizontalAlignment="Left" Width="171" Height="23"/>
                                <Label Content="Resign Reason" HorizontalAlignment="Left" Foreground="#FF513838" Width="90" Height="26" VerticalAlignment="Top" Margin="374,74,0,0"/>
                                <TextBox Text="{Binding CurrentEmployeeWorkExperienceDetailsView.resign_reason}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="484,79,10,232" Height="23"/>
                                <DataGrid SelectionMode="Single" IsReadOnly="True"  AutoGenerateColumns="False" SelectedItem="{Binding CurrentEmployeeWorkExperienceDetailsView}" ItemsSource="{Binding EmployeeWorkExperienceDetailsView}" HorizontalAlignment="Left" Margin="10,179,0,0" VerticalAlignment="Top" Height="128" Width="667">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Name" Binding="{Binding previous_company_name}" Width="90"/>
                                        <DataGridTextColumn Header="Join Date" Binding="{Binding joinDate}" Width="90"/>
                                        <DataGridTextColumn Header="Resign Date" Binding="{Binding resignDate}" Width="*"/>
                                        <DataGridTextColumn Header="Work Duration" Binding="{Binding workDuration}" Width="*"/>
                                        <DataGridTextColumn Header="Designation" Binding="{Binding designation}" Width="*"/>
                                        <DataGridTextColumn Header="Resign Reason" Binding="{Binding resign_reason}" Width="*"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button x:Name="button1_Copy" Content="New " Style="{DynamicResource ButtonStyle2}" Command="{Binding NewButton}" Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Margin="819,572,-202,-263" Height="25" VerticalAlignment="Top">
                                    <Button.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Button.RenderTransform>
                                </Button>
                                <Button x:Name="WorkEx_Add_btn" Content="Add" Command="{Binding WorkEx_Add_btn}" HorizontalAlignment="Left" Height="25" Margin="484,149,0,0" VerticalAlignment="Top" Width="59" />
                                <Button x:Name="WorkExRemove_btn" Content="Remove" Command="{Binding RemoveWorkEX_btn}" HorizontalAlignment="Left" Height="25" Margin="560,149,0,0" VerticalAlignment="Top" Width="59" />
                                <Button x:Name="WorkEx_New_btn" Content="New" Command="{Binding Work_New_cBtn}" HorizontalAlignment="Left" Height="25" Margin="405,149,0,0" VerticalAlignment="Top" Width="59" RenderTransformOrigin="-1.458,0.6" Style="{DynamicResource ButtonStyle8}"/>
                            </Grid>

                        </AdornerDecorator>
                    </TabItem>
                    <TabItem x:Name="Employee_Social_Media" Header="Social Media Details" Margin="-3,-5,-39.583,1" Background="#FF98B9DE" BorderBrush="#FF6296D2" Foreground="White" Style="{DynamicResource TabItemStyle3}" FontFamily="Segoe UI Semibold">
                        <AdornerDecorator IsEnabled="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Social Media Type" HorizontalAlignment="Left" Foreground="#FF513838" Width="164" Height="26" VerticalAlignment="Top" Margin="9,40,0,0"/>
                                <Button TabIndex="2" Command="{Binding SocialMediaAddButton}" Content="+" Margin="378,43,285,0" VerticalAlignment="Top" Height="19">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Label Content="Social Media Links" HorizontalAlignment="Left" Foreground="#FF513838" Width="164" Height="26" VerticalAlignment="Top" Margin="9,74,0,0"/>
                                <ComboBox TabIndex="1" ItemsSource="{Binding SocialMedia}" SelectedItem="{Binding CurrentSocialMedia}" SelectedValue="{Binding CurrentEmployeeSocialView.social_media_id}" DisplayMemberPath="social_media_name" SelectedValuePath="social_media_id" HorizontalAlignment="Left" Margin="200,44,0,268" Width="163">
                                    <ComboBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/IconS2SO4.ico" Height="50"/>
                                                            <TextBlock Text="Select more" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </ComboBox.ToolTip>
                                </ComboBox>
                                <TextBox TabIndex="3" TextWrapping="Wrap" Text="{Binding CurrentEmployeeSocialView.social_media_links, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="200,76,324,235" Height="23">
                                </TextBox>
                                <DataGrid SelectionMode="Single" IsReadOnly="True"  AutoGenerateColumns="False" ItemsSource="{Binding EmployeeSocialView}" SelectedItem="{Binding CurrentEmployeeSocialView}" HorizontalAlignment="Left" Margin="10,162,0,0" VerticalAlignment="Top" Height="142" Width="667">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header=" Social Media Typ" Binding="{Binding social_media_name}" Width="150"/>
                                        <DataGridTextColumn Header="Social Media Links" Binding="{Binding social_media_links}" Width="*"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button TabIndex="5" x:Name="Social_Add_btn" Command="{Binding AddSocial_media_btn}" Content="Add" HorizontalAlignment="Left" Height="25" Margin="474,129,0,0" VerticalAlignment="Top" Width="59" Click="Social_Add_btn_Click"/>
                                <Button TabIndex="6" x:Name="Social_Remove_btn" Command="{Binding Remove_social_btn}"  Content="Remove" HorizontalAlignment="Left" Height="25" Margin="550,129,0,0" VerticalAlignment="Top" Width="59" Click="Social_Remove_btn_Click"/>
                                <Button TabIndex="4" x:Name="Social_New_btn" Command="{Binding NewSocial_media_btn}" Content="New" HorizontalAlignment="Left" Height="25" Margin="399,129,0,0" VerticalAlignment="Top" Width="59" Click="Social_New_btn_Click"/>

                            </Grid>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem x:Name="Employee_Qualification" Header="Employee Professional Qualification Details" Margin="39.916,-5.5,-4.417,1.5" Background="#FF98B9DE" BorderBrush="#FF6296D2" Foreground="White" Style="{DynamicResource TabItemStyle3}" FontFamily="Segoe UI Semibold">
                        <AdornerDecorator IsEnabled="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Institute Name" HorizontalAlignment="Left" Foreground="#FF513838" Width="122" Height="26" VerticalAlignment="Top" Margin="9,8,0,0"/>
                                <Label Content="Qualification Category Type" HorizontalAlignment="Left" Foreground="#FF513838" Width="164" Height="26" VerticalAlignment="Top" Margin="9,40,0,0"/>
                                <ComboBox TabIndex="3" SelectedItem="{Binding CurrentUnivercityDigreeType}" SelectedValue="{Binding CurrentEmployeeUniversities.univercity_Course_type_id}" ItemsSource="{Binding UnivercityDigreeType}" DisplayMemberPath="univercity_Course_type" SelectedValuePath="univercity_Course_type_id" HorizontalAlignment="Left" Margin="200,43,0,268" Width="163">
                                    <ComboBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/IconS2SO4.ico" Height="50"/>
                                                            <TextBlock Text="Select more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </ComboBox.ToolTip>
                                </ComboBox>
                                <Button TabIndex="4" Command="{Binding UniCattypeAddButton}" Content="+" Margin="378,43,285,0" VerticalAlignment="Top" Height="19">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Label Content="Qualification Category Name" HorizontalAlignment="Left" Foreground="#FF513838" Width="180" Height="26" VerticalAlignment="Top" Margin="9,72,0,0"/>
                                <DataGrid AutoGenerateColumns="False" SelectionMode="Single" IsReadOnly="True" ItemsSource="{Binding EmployeeUniversities}" SelectedItem="{Binding CurrentEmployeeUniversities}" HorizontalAlignment="Left" Margin="10,162,0,0" VerticalAlignment="Top" Height="142" Width="667">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="  Institute" Binding="{Binding univercity_name}" Width="90"/>
                                        <DataGridTextColumn Header="Qualification Category Type" Binding="{Binding univercity_Course_type}" Width="*"/>
                                        <DataGridTextColumn Header="Qualification Category Name" Binding="{Binding univercity_Course_name}" Width="*"/>
                                        <DataGridTextColumn Header=" Grade" Binding="{Binding grade}" Width="90"/>
                                        <DataGridTextColumn Header=" Duration" Binding="{Binding duration}" Width="90"/>
                                        <DataGridTextColumn Header=" GPA" Binding="{Binding gpa}" Width="60"/>

                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button Command="{Binding CityAddButton}" Content="+" Margin="378,75,285,0" VerticalAlignment="Top" Height="19">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more Districts" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button TabIndex="6" Command="{Binding DegreeNameAddButton}" Content="+" Margin="378,75,285,0" VerticalAlignment="Top" Height="19">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Label Content="Grade" HorizontalAlignment="Left" Foreground="#FF513838" Width="45" Height="26" VerticalAlignment="Top" Margin="411,8,0,0"/>
                                <ComboBox TabIndex="7" SelectedItem="{Binding CurrnetUniversityGrade}" SelectedValue="{Binding CurrentEmployeeUniversities.uni_grade_id}" ItemsSource="{Binding UniversityGrade}" DisplayMemberPath="grade" SelectedValuePath="uni_grade_id" HorizontalAlignment="Left" Margin="472,11,0,300" Width="163">
                                    <ComboBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/IconS2SO4.ico" Height="50"/>
                                                            <TextBlock Text="Select more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </ComboBox.ToolTip>
                                </ComboBox>
                                <Button TabIndex="8" Command="{Binding UniGradeAddButton}" Content="+" Margin="644,13,19,0" VerticalAlignment="Top" Height="19">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Label Content="Duration" HorizontalAlignment="Left" Foreground="#FF513838" Width="68" Height="26" VerticalAlignment="Top" Margin="411,41,0,0"/>
                                <TextBox TabIndex="9" TextWrapping="Wrap" Text="{Binding CurrentEmployeeUniversities.duration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="474,45,52,266" Height="23"/>
                                <Label Content="GPA" HorizontalAlignment="Left" Foreground="#FF513838" Width="68" Height="26" VerticalAlignment="Top" Margin="411,73,0,0"/>
                                <TextBox TabIndex="10" TextWrapping="Wrap" Text="{Binding CurrentEmployeeUniversities.gpa, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat=N2}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="474,76,52,235" Height="23"/>
                                <Button TabIndex="12"  Content="Add" HorizontalAlignment="Left" Height="25" Margin="539,123,0,0" VerticalAlignment="Top" Width="59" Command="{Binding AddProfessionalQualBtn}"/>
                                <Button TabIndex="13" x:Name="Prof_Que_Remove_btn" Command="{Binding deletebtn}" Content="Remove" HorizontalAlignment="Left" Height="25" Margin="615,123,0,0" VerticalAlignment="Top" Width="59" Click="Prof_Que_Remove_btn_Click"/>
                                <ComboBox TabIndex="5" SelectedItem="{Binding CurrentUnivercityDigreeNames}" SelectedValuePath="univercity_Course_id" ItemsSource="{Binding UnivercityDigreeNames}" DisplayMemberPath="univercity_Course_name" SelectedValue="{Binding CurrentEmployeeUniversities.univercity_Course_id}" HorizontalAlignment="Left" Margin="200,75,0,235" Width="163">
                                    <ComboBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/IconS2SO4.ico" Height="50"/>
                                                            <TextBlock Text="Select more" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </ComboBox.ToolTip>
                                </ComboBox>
                                <ComboBox TabIndex="1" SelectedItem="{Binding CurrentUnivercityName}" ItemsSource="{Binding UnivercityName}" DisplayMemberPath="univercity_name" SelectedValuePath="univercity_id" SelectedValue="{Binding CurrentEmployeeUniversities.univercity_id}" HorizontalAlignment="Left" Margin="200,11,0,300" Width="163">
                                    <ComboBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/IconS2SO4.ico" Height="50"/>
                                                            <TextBlock Text="Select more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </ComboBox.ToolTip>
                                </ComboBox>
                                <Button TabIndex="2" Command="{Binding InstitiuteAddButton}" Content="+" Margin="378,13,285,0" VerticalAlignment="Top" Height="19">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button TabIndex="11" Content="New" Command="{Binding NewProfessionalQualificationBtn}" HorizontalAlignment="Left" Height="25" Margin="464,123,0,0" VerticalAlignment="Top" Width="59" RenderTransformOrigin="-1.458,0.6" Style="{DynamicResource ButtonStyle8}"/>
                            </Grid>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem x:Name="Employee_Skills_Interest" Header="Employee Skills  And Interest Details" Margin="6.834,-6.334,-2.5,2.334" Background="#FF98B9DE" BorderBrush="#FF6296D2" Foreground="White" Style="{DynamicResource TabItemStyle3}" FontFamily="Segoe UI Semibold">
                        <AdornerDecorator IsEnabled="True">
                            <Grid>
                                <Label Content="Employee Skills Type" HorizontalAlignment="Left" Foreground="#FF513838" Width="164" Height="26" VerticalAlignment="Top" Margin="9,40,0,0"/>
                                <Button TabIndex="2" Command="{Binding SkillAddButton}" Content="+" Margin="293,47,370,0" VerticalAlignment="Top" Height="19">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Label Content="Employee Interest Field" HorizontalAlignment="Left" Foreground="#FF513838" Width="141" Height="26" VerticalAlignment="Top" Margin="357,42,0,0"/>
                                <Button TabIndex="7" Command="{Binding InterstAddButton}" Content="+" Margin="653,47,10,0" VerticalAlignment="Top" Height="19">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <ComboBox TabIndex="1" SelectedItem="{Binding CurrentSkillType}" SelectedValue="{Binding CurrentEmployeeSkillView.skill_type_id}" ItemsSource="{Binding SkillType}" DisplayMemberPath="skill_type" SelectedValuePath="skill_type_id" HorizontalAlignment="Left" Margin="149,42,0,0" Width="139" Height="24" VerticalAlignment="Top">
                                    <ComboBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/IconS2SO4.ico" Height="50"/>
                                                            <TextBlock Text="Select " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </ComboBox.ToolTip>
                                </ComboBox>
                                <ComboBox TabIndex="6" SelectedItem="{Binding CurrentInterestField}" SelectedValue="{Binding CurrentEmployeeInterstDetailsView.interest_field_id}" ItemsSource="{Binding InterestField}" DisplayMemberPath="interest_field_type" SelectedValuePath="interest_field_id" HorizontalAlignment="Left" Margin="505,45,0,0" Width="143" Height="23" VerticalAlignment="Top">
                                    <ComboBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/IconS2SO4.ico" Height="50"/>
                                                            <TextBlock Text="Select " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </ComboBox.ToolTip>
                                </ComboBox>
                                <DataGrid SelectionMode="Single" IsReadOnly="True"  AutoGenerateColumns="False" ItemsSource="{Binding EmployeeSkillView}" SelectedItem="{Binding CurrentEmployeeSkillView}" HorizontalAlignment="Left" Margin="10,172,0,0" VerticalAlignment="Top" Height="142" Width="283">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header=" Employee Skills Type" Binding="{Binding skill_type}" Width="*"/>

                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button TabIndex="4" x:Name="Skills_Type_Add_btn" Command="{Binding AddSkillBtn}"  Content="Add" HorizontalAlignment="Left" Height="25" Margin="158,122,0,0" VerticalAlignment="Top" Width="59" Click="Skills_Type_Add_btn_Click" />
                                <Button TabIndex="5" x:Name="Skills_Type_Remove_btn" Command="{Binding RemoveSkillBtn}" Content="Remove" HorizontalAlignment="Left" Height="25" Margin="234,122,0,0" VerticalAlignment="Top" Width="59" Click="Skills_Type_Remove_btn_Click"/>
                                <DataGrid SelectionMode="Single" IsReadOnly="True"  AutoGenerateColumns="False" HorizontalAlignment="Left" Margin="379,172,0,0" VerticalAlignment="Top" Height="142" Width="283" ItemsSource="{Binding EmployeeInterstDetailsView}" SelectedItem="{Binding CurrentEmployeeInterstDetailsView}" >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Employee Interest Field" Binding="{Binding interest_field_type}" Width="*"/>

                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button TabIndex="9" x:Name="Interst_Type_Add_btn_Copy" Command="{Binding AddInterst_btn}"  Content="Add" HorizontalAlignment="Left" Height="25" Margin="527,122,0,0" VerticalAlignment="Top" Width="59"/>
                                <Button TabIndex="10" x:Name="Interst_Type_Remove_btn" Command="{Binding RemoveBtn}" Content="Remove" HorizontalAlignment="Left" Height="25" Margin="603,122,0,0" VerticalAlignment="Top" Width="59" Click="Skills_Type_Remove_btn_Click"/>
                                <Button TabIndex="3" x:Name="Skill_Type_New_btn" Command="{Binding NewSkill_btn}" Content="New" HorizontalAlignment="Left" Height="25" Margin="83,122,0,0" VerticalAlignment="Top" Width="59" Click="Interst_Type_New_btn_Click"/>
                                <Button TabIndex="8" x:Name="Interst_New_btn" Command="{Binding NewInterst_btn}" Content="New" HorizontalAlignment="Left" Height="25" Margin="449,122,0,0" VerticalAlignment="Top" Width="59" Click="Social_New_btn_Click"/>

                            </Grid>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem x:Name="Employee_Helth_and_Safety" Header="Employee Helth And Safety Details" Margin="-3,-5,5,1" Background="#FF98B9DE" BorderBrush="#FF6296D2" Foreground="White" Style="{DynamicResource TabItemStyle3}" FontFamily="Segoe UI Semibold">
                        <AdornerDecorator IsEnabled="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Employee Blood Type" HorizontalAlignment="Left" Foreground="#FF513838" Width="146" Height="26" VerticalAlignment="Top" Margin="9,11,0,0"/>
                                <Button TabIndex="2" Command="{Binding HealthButton}" Content="+" Margin="348,14,315,0" VerticalAlignment="Top" Height="19">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <ComboBox TabIndex="1" SelectedItem="{Binding CurrentBloodGroupType}" SelectedValue="{Binding CurrentEmployeeBloodGroupandHealthView.bloodGroupType_id}" ItemsSource="{Binding BloodGroupType}" DisplayMemberPath="bloodGroupType" SelectedValuePath="bloodGroupType_id" HorizontalAlignment="Left" Margin="199,13,0,297" Width="134">
                                    <ComboBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/IconS2SO4.ico" Height="50"/>
                                                            <TextBlock Text="Select more" Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </ComboBox.ToolTip>
                                </ComboBox>
                                <DataGrid SelectionMode="Single" IsReadOnly="True"  AutoGenerateColumns="False" ItemsSource="{Binding EmployeeBloodGroupandHealthView}" SelectedItem="{Binding CurrentEmployeeBloodGroupandHealthView}"  HorizontalAlignment="Left" Margin="10,135,0,0" VerticalAlignment="Top" Height="142" Width="667">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Employee Blood Type" Binding="{Binding bloodGroupType}" Width="150"/>
                                        <DataGridTextColumn Header="Employee Diagnosis" Binding="{Binding diagnosis}" Width="*"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button TabIndex="5" x:Name="Helth_Add_btn" Command="{Binding AddHealthTypeBtn}" Content="Add" HorizontalAlignment="Left" Height="25" Margin="514,102,0,0" VerticalAlignment="Top" Width="59" Click="Helth_Add_btn_Click"/>
                                <Button TabIndex="6" x:Name="Helth_Remove_btn" Command="{Binding RemoveHealthBtn}" Content="Remove" HorizontalAlignment="Left" Height="25" Margin="590,102,0,0" VerticalAlignment="Top" Width="59" Click="Helth_Remove_btn_Click"/>
                                <Label Content="Diagnosis " HorizontalAlignment="Left" Foreground="#FF513838" Width="122" Height="26" VerticalAlignment="Top" Margin="9,55,0,0"/>
                                <TextBox TabIndex="3" TextWrapping="Wrap" Text="{Binding CurrentEmployeeBloodGroupandHealthView.diagnosis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="199,0,254,254" Height="23" VerticalAlignment="Bottom"/>
                                <Button TabIndex="4" x:Name="Employee_Health_New_btn" Content="New" Command="{Binding NewHealthBtn}" HorizontalAlignment="Left" Height="25" Margin="437,102,0,0" VerticalAlignment="Top" Width="59" RenderTransformOrigin="-1.458,0.6" Style="{DynamicResource ButtonStyle8}"/>

                            </Grid>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem x:Name="Employee_Activity" Header="Employee Extra Curricular Activities Details" Margin="-5,-5.25,2.334,1.25" Background="#FF98B9DE" BorderBrush="#FF6296D2" Foreground="White" Style="{DynamicResource TabItemStyle3}" FontFamily="Segoe UI Semibold">
                        <AdornerDecorator Margin="0,0,0,-41.5" IsEnabled="True">
                            <Grid Margin="0,0,0,34.5" Background="White">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Activities Category Type" HorizontalAlignment="Left" Foreground="#FF513838" Width="164" Height="26" VerticalAlignment="Top" Margin="9,22,0,0"/>
                                <ComboBox TabIndex="1" ItemsSource="{Binding ExtraCurricularActivities}" SelectedItem="{Binding CurrentExtraCurricularActivities}" SelectedValue="{Binding CurrentEmployeeExtraCurricularActivites.activities_category_id, Mode=TwoWay}"  DisplayMemberPath="activities_category_type" SelectedValuePath="activities_category_id" HorizontalAlignment="Left" Margin="200,25,0,0" Width="163" Height="23" VerticalAlignment="Top">
                                    <ComboBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/IconS2SO4.ico" Height="50"/>
                                                            <TextBlock Text="Select more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </ComboBox.ToolTip>
                                </ComboBox>
                                <Button TabIndex="2" Command="{Binding ExtraCurricularAddButton}" Content="+" Margin="378,25,285,0" VerticalAlignment="Top" Height="23">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Label Content="Activities Name" HorizontalAlignment="Left" Foreground="#FF513838" Width="164" Height="26" VerticalAlignment="Top" Margin="9,60,0,0"/>
                                <DataGrid ItemsSource="{Binding EmployeeExtraCurricularActivites}" SelectedItem="{Binding CurrentEmployeeExtraCurricularActivites}" IsReadOnly="True" AutoGenerateColumns="False" HorizontalAlignment="Left" Margin="7,183,0,0" VerticalAlignment="Top" Height="143" Width="667">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Activities Category Type " Binding="{Binding activities_category_type}" Width="*"/>
                                        <DataGridTextColumn Header=" Activities Name " Binding="{Binding activities_category_name}" Width="*"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button TabIndex="5" x:Name="Activities_Add_btn" Command="{Binding AddExtracurricularActBtn}" Content="Add" HorizontalAlignment="Left" Height="25" Margin="478,129,0,0" VerticalAlignment="Top" Width="59" Click="Activities_Add_btn_Click"/>
                                <Button TabIndex="6" x:Name="Activities_Remove_btn" Command="{Binding RemoveExtracurricularActBtn}" Content="Remove" HorizontalAlignment="Left" Height="25" Margin="551,129,0,0" VerticalAlignment="Top" Width="59" Click="Activities_Remove_btn_Click"/>
                                <TextBox TabIndex="3" TextWrapping="Wrap" Text="{Binding CurrentEmployeeExtraCurricularActivites.activities_category_name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="200,63,324,255.5"/>
                                <Button TabIndex="4" Content="New" Command="{Binding NewExtracurricularActBtn}" HorizontalAlignment="Left" Height="25" Margin="403,129,0,0" VerticalAlignment="Top" Width="59" Click="Activities_Add_btn_Click" RenderTransformOrigin="-0.695,0.52"/>

                            </Grid>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem x:Name="Employee_Academic_Details" Header="Employee Acadamic Qualification Details " Margin="-1,-6.5,-2,2.5" Background="#FF98B9DE" BorderBrush="#FF6296D2" Foreground="White" Style="{DynamicResource TabItemStyle3}" FontFamily="Segoe UI Semibold">
                        <AdornerDecorator IsEnabled="True">
                            <Grid HorizontalAlignment="Left" Height="334" VerticalAlignment="Top" Width="687">
                                <Label Content="School Name" HorizontalAlignment="Left" Foreground="#FF513838" Width="122" Height="26" VerticalAlignment="Top" Margin="9,9,0,0"/>
                                <Label Content="Qualification Catagory Type" HorizontalAlignment="Left" Foreground="#FF513838" Width="164" Height="26" VerticalAlignment="Top" Margin="9,41,0,0"/>
                                <ComboBox TabIndex="2" SelectedItem="{Binding CurrentSchoolQualificationType}" SelectedValue="{Binding CurrentEmployeeAcadamicView.school_qualifiaction_id}" ItemsSource="{Binding SchoolQualificationType}" DisplayMemberPath="school_qualifiaction_type" SelectedValuePath="school_qualifiaction_id" HorizontalAlignment="Left" Margin="200,44,0,267" Width="163">
                                    <ComboBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/IconS2SO4.ico" Height="50"/>
                                                            <TextBlock Text="Select more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </ComboBox.ToolTip>
                                </ComboBox>
                                <Button TabIndex="3" Command="{Binding AcadamicQualificationcategoryAddButton}" Content="+" Margin="378,47,285,0" VerticalAlignment="Top" Height="19">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Label Content="Subject Name" HorizontalAlignment="Left" Foreground="#FF513838" Width="186" Height="26" VerticalAlignment="Top" Margin="9,73,0,0"/>
                                <ComboBox TabIndex="4" SelectedItem="{Binding CurrentSchoolQualificationSubject}" ItemsSource="{Binding SchoolQualificationSubject}" SelectedValue="{Binding CurrentEmployeeAcadamicView.schoolsubject_id}" DisplayMemberPath="subject" SelectedValuePath="schoolsubject_id" HorizontalAlignment="Left" Margin="200,76,0,235" Width="163">
                                    <ComboBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/IconS2SO4.ico" Height="50"/>
                                                            <TextBlock Text="Select more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </ComboBox.ToolTip>
                                </ComboBox>
                                <Button TabIndex="5" Command="{Binding AcadamicsubjectAddButton}" Content="+" Margin="378,79,285,0" VerticalAlignment="Top" Height="19">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Label Content="Grade" HorizontalAlignment="Left" Foreground="#FF513838" Width="45" Height="26" VerticalAlignment="Top" Margin="411,9,0,0"/>
                                <ComboBox TabIndex="6" SelectedItem="{Binding CurrentSchoolGrade}" SelectedValue="{Binding CurrentEmployeeAcadamicView.school_grade_id}" ItemsSource="{Binding SchoolGrade}" DisplayMemberPath="school_grade_type" SelectedValuePath="school_grade_id" HorizontalAlignment="Left" Margin="464,10,0,303" Width="163">
                                    <ComboBox.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/IconS2SO4.ico" Height="50"/>
                                                            <TextBlock Text="Select more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </ComboBox.ToolTip>
                                </ComboBox>
                                <Button TabIndex="7" Command="{Binding AcadamicGradeAddButton}" Content="+" Margin="644,11,19,0" VerticalAlignment="Top" Height="19">
                                    <Button.ToolTip>
                                        <ToolTip Content="" OverridesDefaultStyle="True" HasDropShadow="True">
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Border BorderBrush="Blue" BorderThickness="1" Background="Gray" CornerRadius="5">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/ERP;component/Images/City_logo.png" Height="50"/>
                                                            <TextBlock Text="Click here to add more " Margin="10" Width="100" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <TextBox TabIndex="1" Text="{Binding CurrentEmployeeAcadamicView.school_name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="200,10,285,301" Height="23"/>
                                <DataGrid  SelectionMode="Single" IsReadOnly="True"  AutoGenerateColumns="False" ItemsSource="{Binding EmployeeAcadamicView}" SelectedItem="{Binding CurrentEmployeeAcadamicView}"  HorizontalAlignment="Left" Margin="10,162,0,0" VerticalAlignment="Top" Height="143" Width="667">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header=" School Name" Binding="{Binding school_name}" Width="90"/>
                                        <DataGridTextColumn Header="Qualification Catagory Type" Binding="{Binding school_qualifiaction_type}" Width="*"/>
                                        <DataGridTextColumn Header="Subject Name" Binding="{Binding subject}" Width="*"/>
                                        <DataGridTextColumn Header=" Grade" Binding="{Binding school_grade_type}" Width="90"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button TabIndex="9" x:Name="Employee_Academic_Add_btn" Content="Add" Command="{Binding AddAcadamicBtn}" HorizontalAlignment="Left" Height="25" Margin="478,129,0,0" VerticalAlignment="Top" Width="59" Click="Employee_Academic_Add_btn_Click"/>
                                <Button TabIndex="10" x:Name="Employee_Academic_Remove_btn" Content="Remove" Command="{Binding RemoveAcadamicBtn}" HorizontalAlignment="Left" Height="25" Margin="554,129,0,0" VerticalAlignment="Top" Width="59" Click="Employee_Academic_Remove_btn_Click"/>
                                <Button TabIndex="8" x:Name="Employee_Academic_New_btn" Content="New" Command="{Binding NewAcadamicBtn}" HorizontalAlignment="Left" Height="25" Margin="402,129,0,0" VerticalAlignment="Top" Width="59" RenderTransformOrigin="-1.458,0.6" Style="{DynamicResource ButtonStyle8}"/>

                            </Grid>
                        </AdornerDecorator>
                    </TabItem>
                </TabControl>
            </Grid>
            <Label Content="Search" Margin="-16,16,968,0" Height="26" VerticalAlignment="Top" Foreground="White" FontStyle="Italic" FontFamily="Segoe UI Semibold"/>
            <Image HorizontalAlignment="Left" Height="16" Margin="244,94,0,0" VerticalAlignment="Top" Width="18"  Opacity="0.5"/>
            <TextBlock HorizontalAlignment="Left" Margin="418,-38,0,219.667" TextWrapping="Wrap" Text="{Binding Name}" Width="334" FontSize="16" Foreground="White" FontFamily="Segoe UI Semibold" FontWeight="Bold"/>
            <TextBlock HorizontalAlignment="Left" Margin="430,23,0,0" TextWrapping="Wrap" Text="{Binding CurrentDesignation.designation}" VerticalAlignment="Top" Width="169" Height="15" FontSize="13.333" FontFamily="Segoe UI Semibold" Foreground="#FF513838"/>
            <TextBlock Margin="0,47,347,0" TextWrapping="Wrap" Text="{Binding Mobile}" FontSize="13.333" FontFamily="Segoe UI Semibold" Foreground="#FF513838" Height="18" VerticalAlignment="Top" HorizontalAlignment="Right" Width="198"/>
            <TextBlock Margin="430,72,346,105.667" TextWrapping="Wrap" FontSize="13.333" FontFamily="Segoe UI Semibold" Foreground="#FF513838"><InlineUIContainer/></TextBlock>
            <Grid HorizontalAlignment="Left" Height="128" Margin="282,-43,0,0" VerticalAlignment="Top" Width="129">
                <Rectangle Stroke="#FF588FCB"/>
                <Rectangle Fill="White" Stroke="#FF588FCB">
                    <Rectangle.Effect>
                        <DropShadowEffect />
                    </Rectangle.Effect>
                </Rectangle>
                <Image Source="{Binding ImagePath, Converter={StaticResource convert}}" />
            </Grid>
            <TextBlock TextWrapping="Wrap" Text="{Binding CurrentEmployee.department_name}" FontSize="16" FontFamily="Segoe UI Semibold" Foreground="#FF513838" Height="25" VerticalAlignment="Top" HorizontalAlignment="Right" Width="198" FontWeight="Bold" Margin="0,0,359,0"/>
        </Grid>
        <Button TabIndex="4" x:Name="button1_Copy3" Content="Save " Height="25" Style="{DynamicResource ButtonStyle4}" VerticalAlignment="Top" Command="{Binding SaveButton}" Foreground="#FF5F5F5F" RenderTransformOrigin="0.403,-1.093" FontFamily="Segoe UI Semibold" Margin="894,643.5,190.667,0">
            <Button.ToolTip>
                <ToolTip Content="Click to save an Employee" OverridesDefaultStyle="True" HasDropShadow="True">
                    <ToolTip.Template>
                        <ControlTemplate TargetType="{x:Type ToolTip}">
                            <Border BorderBrush="Blue" BorderThickness="1" Background="Black" CornerRadius="5">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="/ERP;component/Images/masters/Employee_Masters_Icon.png" Height="50"/>
                                    <TextBlock Text="You are ready to save an employee" Margin="10" Width="100" TextWrapping="Wrap"/>
                                </StackPanel>
                            </Border>
                        </ControlTemplate>
                    </ToolTip.Template>
                </ToolTip>
            </Button.ToolTip>
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button TabIndex="5" x:Name="button1_Copy2" Content="Delete " Style="{DynamicResource ButtonStyle3}" Command="{Binding DeleteButton}" Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Margin="967,643,119.667,0" Height="26" VerticalAlignment="Top">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button TabIndex="3" x:Name="button1_Copy1" Content="New " Style="{DynamicResource ButtonStyle2}" Command="{Binding NewButton}" Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Margin="819,643.5,263.667,0" Height="25" VerticalAlignment="Top">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <ProgressBar Value="{Binding Progress}" HorizontalAlignment="Left" Height="8" Margin="367,607,0,0" VerticalAlignment="Top" Width="693" BorderBrush="{x:Null}" Background="{x:Null}" RenderTransformOrigin="0.5,0.5">
            <ProgressBar.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="-1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </ProgressBar.RenderTransform>
            <ProgressBar.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF707070" Offset="0"/>
                    <GradientStop Color="Red" Offset="1"/>
                </LinearGradientBrush>
            </ProgressBar.Foreground>
        </ProgressBar>
        <Grid x:Name="darkBlock" HorizontalAlignment="Left" Visibility="{Binding busyGridVisibility}"  Height="618" Margin="41,0,0,0" VerticalAlignment="Top" Width="1035" d:IsHidden="True">
            <Grid Background="Black" Opacity="0.5" HorizontalAlignment="Left" Height="622" Margin="0,0,0,-4" VerticalAlignment="Top" Width="1035"/>
            <xctk:BusyIndicator x:Name="bbLoad" Content="BusyIndicator" HorizontalAlignment="Left" Margin="442,301,0,0" VerticalAlignment="Top" Height="70" Width="178" IsBusy="{Binding isBusy}"/>
        </Grid>
        <Rectangle Margin="15,17,19.008,0" Height="41" VerticalAlignment="Top" MouseLeftButtonDown="Rectangle_MouseLeftButtonDown">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                    <GradientStop Color="#FF18233A" Offset="0"/>
                    <GradientStop Color="#FF18233A" Offset="1"/>
                    <GradientStop Color="#FF4C5691" Offset="0.518"/>
                    <GradientStop Color="#FF4C5691" Offset="0.455"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Label Content="Employee Master" Margin="69,20,912.008,651.146" Foreground="White" FontFamily="Segoe UI Semibold" FontSize="14.667" MouseLeftButtonDown="Label_MouseLeftButtonDown_1"/>
        <Button x:Name="button2_Copy" Content="Button" Margin="1108,27,25.008,655.146" Style="{DynamicResource ButtonStyle24}" RenderTransformOrigin="0.5,0.5" Click="button2_Click" Width="20" Height="20" >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Image Margin="21.166,20,1096.499,647.333" Source="/ERP;component/Images/New_Button/New_Master_Button/EmployeE_Master.png" Stretch="Fill" Width="35" Height="35"/>
        <Button Command="{Binding PortalImageSync}" Content="Sync Images" HorizontalAlignment="Left" Margin="719,644,0,0" VerticalAlignment="Top" Width="94" Height="26"/>
    </Grid>
</Window>
