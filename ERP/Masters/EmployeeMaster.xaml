<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="ERP.EmployeeMaster" 
             mc:Ignorable="d" 
             VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinHeight="300" MinWidth="900"
              Background="#FF4B4848" BorderThickness="2" BorderBrush="#FF474747" Height="500" Width="800
			  ">
	<UserControl.Resources>
		<DataTemplate x:Key="ImageTemplate">
			<StackPanel>
				<Image Source="{Binding Image}" HorizontalAlignment="Left" Height="64" Width="64"/>
			</StackPanel>
		</DataTemplate>
		<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1"/>
							<Storyboard x:Key="OnMouseLeave1"/>
						</ControlTemplate.Resources>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF747474"/>
									<EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF0B90FF"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="2"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF0B90FF"/>
									<EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF747474"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="InvalidFocused"/>
									<VisualState x:Name="InvalidUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" StrokeThickness="2" Stroke="#FF747474" RadiusX="2" RadiusY="2" Margin="0.001,-0.334,0.165,0" Fill="#FF212121"/>
							<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
							</EventTrigger>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Storyboard x:Key="OnMouseEnter1"/>
		<Storyboard x:Key="OnMouseLeave1"/>
		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFF0F0F0" Offset="0.0"/>
			<GradientStop Color="#FFE5E5E5" Offset="1.0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
		<SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
		<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
		<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
		<LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFECF4FC" Offset="0.0"/>
			<GradientStop Color="#FFDCECFC" Offset="1.0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
		<LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFEBF4FC" Offset="0.0"/>
			<GradientStop Color="#FFDCECFC" Offset="1.0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
		<SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
		<LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFDAECFC" Offset="0.0"/>
			<GradientStop Color="#FFC4E0FC" Offset="1.0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
		<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
		<LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFDAEBFC" Offset="0.0"/>
			<GradientStop Color="#FFC4E0FC" Offset="1.0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
		<SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
		<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="ClickMode" Value="Press"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border x:Name="templateRoot" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
							<Border.BorderBrush>
								<ImageBrush/>
							</Border.BorderBrush>
							<Border x:Name="splitBorder" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
								<Border.BorderBrush>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="Black" Offset="0"/>
										<GradientStop Color="White" Offset="1"/>
									</LinearGradientBrush>
								</Border.BorderBrush>
								<Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
							</Border>
						</Border>
						<ControlTemplate.Triggers>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
									<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
								<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
								<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
							</MultiDataTrigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
							</Trigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
								<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
								<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
							</MultiDataTrigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
							</Trigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
								<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
								<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
							</MultiDataTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
							</Trigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
								<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
								<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
							</MultiDataTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
			<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
				</Grid.ColumnDefinitions>
				<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
					<Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
						<Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
							<ScrollViewer x:Name="DropDownScrollViewer">
								<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
									<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
										<Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
									</Canvas>
									<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</Grid>
							</ScrollViewer>
						</Border>
					</Themes:SystemDropShadowChrome>
				</Popup>
				<ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
				<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
					<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
					<Setter Property="Color" TargetName="shadow" Value="#71000000"/>
				</Trigger>
				<Trigger Property="HasItems" Value="false">
					<Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsGrouping" Value="true"/>
						<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
					</MultiTrigger.Conditions>
					<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
				</MultiTrigger>
				<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
					<Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
					<Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
		<Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="MinWidth" Value="0"/>
			<Setter Property="MinHeight" Value="0"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
			<Grid x:Name="templateRoot" SnapsToDevicePixels="true" Background="{x:Null}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
				</Grid.ColumnDefinitions>
				<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
					<Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
						<Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
							<ScrollViewer x:Name="DropDownScrollViewer">
								<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
									<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
										<Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
									</Canvas>
									<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</Grid>
							</ScrollViewer>
						</Border>
					</Themes:SystemDropShadowChrome>
				</Popup>
				<ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
				<Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
					<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" BorderBrush="{x:Null}"/>
				</Border>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Opacity" TargetName="border" Value="0.56"/>
				</Trigger>
				<Trigger Property="IsKeyboardFocusWithin" Value="true">
					<Setter Property="Foreground" Value="Black"/>
				</Trigger>
				<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
					<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
					<Setter Property="Color" TargetName="shadow" Value="#71000000"/>
				</Trigger>
				<Trigger Property="HasItems" Value="false">
					<Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsGrouping" Value="true"/>
						<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
					</MultiTrigger.Conditions>
					<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
				</MultiTrigger>
				<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
					<Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
					<Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="Padding" Value="6,3,5,3"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
			<Style.Triggers>
				<Trigger Property="IsEditable" Value="true">
					<Setter Property="IsTabStop" Value="false"/>
					<Setter Property="Padding" Value="2"/>
					<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
				</Trigger>
			</Style.Triggers>
		</Style>
		<SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
		<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
		<SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
		<Style x:Key="BorderStyle3" TargetType="{x:Type Border}">
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="Black" Offset="0"/>
						<GradientStop Color="#FEAEAEAE" Offset="1"/>
						<GradientStop Color="#FE5B5B5B" Offset="0"/>
						<GradientStop Color="#FE868686" Offset="0"/>
						<GradientStop Color="#FE888888" Offset="0"/>
						<GradientStop Color="#FE9D9D9D" Offset="0"/>
						<GradientStop Color="#FEA5A5A5" Offset="0"/>
						<GradientStop Color="#FEA9A9A9" Offset="0"/>
						<GradientStop Color="#FEABABAB" Offset="0"/>
						<GradientStop Color="#FEACACAC" Offset="0"/>
						<GradientStop Color="#FEACACAC" Offset="0"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="BorderBrush" Value="#FFDDF3D2"/>
			<Setter Property="CornerRadius" Value="2"/>
		</Style>
		<Style x:Key="TextBoxStyle5" TargetType="{x:Type TextBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF68839A" CornerRadius="3" Background="White" Padding="2">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="White" Margin="0,0,21.333,0"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Opacity" TargetName="border" Value="0.56"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
						<Condition Property="IsSelectionActive" Value="false"/>
					</MultiTrigger.Conditions>
					<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
				</MultiTrigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
							<Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderBrush" Value="#FF688CAF"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGrid}">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
							<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Foreground="#FF513838">
								<ScrollViewer.Template>
									<ControlTemplate TargetType="{x:Type ScrollViewer}">
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="*"/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>
											<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
											<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" FontWeight="Bold" FontFamily="Segoe UI Semibold"/>
											<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
											<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
											<Grid Grid.Column="1" Grid.Row="2">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
													<ColumnDefinition Width="*"/>
												</Grid.ColumnDefinitions>
												<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
											</Grid>
										</Grid>
									</ControlTemplate>
								</ScrollViewer.Template>
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</ScrollViewer>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsGrouping" Value="true"/>
						<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
					</MultiTrigger.Conditions>
					<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
				</MultiTrigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF529BB9"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF529BB9"/>
									<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF2B5668"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="InvalidFocused"/>
									<VisualState x:Name="InvalidUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Fill="#FF2B5668" RadiusY="1" RadiusX="1" Stroke="#FF1F1F1F"/>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="11,4,12,0" Height="20" Width="89"/>
						</Grid>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard1" Storyboard="{StaticResource OnMouseEnter1}"/>
							</EventTrigger>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
		<SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
		<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
		<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
		<SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
		<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
		<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
		<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
		<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
		<Style x:Key="ContentPresenterStyle1" TargetType="{x:Type ContentPresenter}"/>
		<Style x:Key="BorderStyle2" TargetType="{x:Type Border}">
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="Black" Offset="0"/>
						<GradientStop Color="#7F084759" Offset="1"/>
						<GradientStop Color="#A505313E" Offset="0.056"/>
						<GradientStop Color="#8C063F4F" Offset="0.134"/>
						<GradientStop Color="#84074354" Offset="0"/>
						<GradientStop Color="#84074354" Offset="0"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="BorderBrush" Value="White"/>
		</Style>
		<Style x:Key="ButtonStyle4" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="3" Style="{DynamicResource BorderStyle2}" Background="#FF2B5668" Opacity="0.74" BorderBrush="White">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Right" Margin="0,1.02,19.81,1.02" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="#7F000000" Style="{DynamicResource ContentPresenterStyle1}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle5" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<Image Stretch="Fill" Source="appbar.add.png"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ImageStyle1" TargetType="{x:Type Image}">
			<Setter Property="FlowDirection" Value="LeftToRight"/>
		</Style>
		<Style x:Key="ButtonStyle6" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<Image Stretch="Fill" Source="appbar.delete.png"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle7" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="3" Style="{DynamicResource BorderStyle2}" Background="#FFBEC3BD" Opacity="0.74" BorderBrush="#FF4A6A77">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Right" Margin="0,1.02,19.81,1.02" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="#7F000000" Style="{DynamicResource ContentPresenterStyle1}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle8" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="3" Style="{DynamicResource BorderStyle2}" Background="#FFCCCECA" Opacity="0.74" BorderBrush="#FF4A6A77">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Right" Margin="0,1.02,19.81,1.02" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="#7F000000" Style="{DynamicResource ContentPresenterStyle1}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle9" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="White"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="White"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Rectangle.RadiusX)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="4"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="4"/>
								</DoubleAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeStartLineCap)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static PenLineCap.Flat}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static PenLineCap.Flat}"/>
								</ObjectAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="10"/>
								</DoubleAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.RenderingBias)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static RenderingBias.Performance}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static RenderingBias.Quality}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stretch)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Stretch.Fill}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Stretch.Fill}"/>
								</ObjectAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeDashOffset)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="46"/>
								</DoubleAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeLineJoin)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static PenLineJoin.Miter}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static PenLineJoin.Miter}"/>
								</ObjectAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF252323"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF77C8EA"/>
								</ColorAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Cursor)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0">
										<DiscreteObjectKeyFrame.Value>
											<Cursor>Hand</Cursor>
										</DiscreteObjectKeyFrame.Value>
									</DiscreteObjectKeyFrame>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Null}"/>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF77C8EA"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF1B1B1B"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="10"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="White"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="White"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="InvalidFocused"/>
									<VisualState x:Name="InvalidUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" SnapsToDevicePixels="True" RadiusX="2" RadiusY="2" Margin="0,0,0,1.162" StrokeThickness="0" Opacity="1" Fill="#FFE2E2E2" Stroke="Black">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="3" RenderingBias="Performance" Opacity="0.875" Direction="278" Color="#FF252323" BlurRadius="2"/>
								</Rectangle.Effect>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="Left" Height="19.205" Margin="46.172,6.668,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Top" Width="79.495" OpacityMask="Black"/>
							<Image HorizontalAlignment="Left" Height="30.705" Margin="4.75,-1.332,0,0" VerticalAlignment="Top" Width="33.588" Source="/ERP;component/Payroll/Benifits.png"/>
						</Grid>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
							</EventTrigger>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="FontSize" Value="10.667"/>
		</Style>
		<Style x:Key="ButtonStyle10" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="White"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="White"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Rectangle.RadiusX)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="4"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="4"/>
								</DoubleAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeStartLineCap)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static PenLineCap.Flat}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static PenLineCap.Flat}"/>
								</ObjectAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="10"/>
								</DoubleAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.RenderingBias)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static RenderingBias.Performance}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static RenderingBias.Quality}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stretch)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Stretch.Fill}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Stretch.Fill}"/>
								</ObjectAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeDashOffset)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="46"/>
								</DoubleAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeLineJoin)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static PenLineJoin.Miter}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static PenLineJoin.Miter}"/>
								</ObjectAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF252323"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF77C8EA"/>
								</ColorAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Cursor)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0">
										<DiscreteObjectKeyFrame.Value>
											<Cursor>Hand</Cursor>
										</DiscreteObjectKeyFrame.Value>
									</DiscreteObjectKeyFrame>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Null}"/>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF77C8EA"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF1B1B1B"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="10"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="White"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="White"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="InvalidFocused"/>
									<VisualState x:Name="InvalidUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" SnapsToDevicePixels="True" RadiusX="2" RadiusY="2" Margin="0,0,0,1.162" StrokeThickness="0" Opacity="1" Fill="#FFE2E2E2" Stroke="Black">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="3" RenderingBias="Performance" Opacity="0.875" Direction="278" Color="#FF252323" BlurRadius="2"/>
								</Rectangle.Effect>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="Left" Height="19.205" Margin="47.172,6.668,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Top" Width="121.708" OpacityMask="Black"/>
							<Image HorizontalAlignment="Left" Height="30.705" Margin="4.75,-1.332,0,0" VerticalAlignment="Top" Width="33.588" Source="/ERP;component/Payroll/Benifits.png"/>
						</Grid>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
							</EventTrigger>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="FontSize" Value="10.667"/>
		</Style>
		<Style x:Key="ButtonStyle11" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="White"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="White"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Rectangle.RadiusX)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="4"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="4"/>
								</DoubleAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeStartLineCap)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static PenLineCap.Flat}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static PenLineCap.Flat}"/>
								</ObjectAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="10"/>
								</DoubleAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.RenderingBias)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static RenderingBias.Performance}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static RenderingBias.Quality}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stretch)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Stretch.Fill}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Stretch.Fill}"/>
								</ObjectAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeDashOffset)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="46"/>
								</DoubleAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeLineJoin)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static PenLineJoin.Miter}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static PenLineJoin.Miter}"/>
								</ObjectAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF252323"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF77C8EA"/>
								</ColorAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Cursor)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0">
										<DiscreteObjectKeyFrame.Value>
											<Cursor>Hand</Cursor>
										</DiscreteObjectKeyFrame.Value>
									</DiscreteObjectKeyFrame>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Null}"/>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF77C8EA"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF1B1B1B"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="10"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="White"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="White"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="InvalidFocused"/>
									<VisualState x:Name="InvalidUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" SnapsToDevicePixels="True" RadiusX="2" RadiusY="2" Margin="0,0,0,1.162" StrokeThickness="0" Opacity="1" Fill="#FFE2E2E2" Stroke="Black">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="3" RenderingBias="Performance" Opacity="0.875" Direction="278" Color="#FF252323" BlurRadius="2"/>
								</Rectangle.Effect>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="Left" Height="19.205" Margin="47.172,6.668,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Top" Width="121.708" OpacityMask="Black"/>
							<Image HorizontalAlignment="Left" Height="30.705" Margin="4.75,-1.332,0,0" VerticalAlignment="Top" Width="33.588" Source="/ERP;component/Images/Button Employees detils.png"/>
						</Grid>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
							</EventTrigger>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="FontSize" Value="10.667"/>
		</Style>
		<Style x:Key="ButtonStyle12" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="White"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="White"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Rectangle.RadiusX)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="4"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="4"/>
								</DoubleAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeStartLineCap)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static PenLineCap.Flat}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static PenLineCap.Flat}"/>
								</ObjectAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="10"/>
								</DoubleAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.RenderingBias)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static RenderingBias.Performance}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static RenderingBias.Quality}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stretch)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Stretch.Fill}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Stretch.Fill}"/>
								</ObjectAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeDashOffset)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="46"/>
								</DoubleAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeLineJoin)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static PenLineJoin.Miter}"/>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static PenLineJoin.Miter}"/>
								</ObjectAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF252323"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF77C8EA"/>
								</ColorAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Cursor)" Storyboard.TargetName="rectangle">
									<DiscreteObjectKeyFrame KeyTime="0">
										<DiscreteObjectKeyFrame.Value>
											<Cursor>Hand</Cursor>
										</DiscreteObjectKeyFrame.Value>
									</DiscreteObjectKeyFrame>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Null}"/>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF77C8EA"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF1B1B1B"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="10"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="White"/>
									<EasingColorKeyFrame KeyTime="0:0:0.2" Value="White"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="InvalidFocused"/>
									<VisualState x:Name="InvalidUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" SnapsToDevicePixels="True" RadiusX="2" RadiusY="2" Margin="0,0,0,1.162" StrokeThickness="0" Opacity="1" Fill="#FFE2E2E2" Stroke="Black">
								<Rectangle.Effect>
									<DropShadowEffect ShadowDepth="3" RenderingBias="Performance" Opacity="0.875" Direction="278" Color="#FF252323" BlurRadius="2"/>
								</Rectangle.Effect>
							</Rectangle>
							<ContentPresenter HorizontalAlignment="Left" Height="19.205" Margin="48.172,6.668,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Top" Width="153.708" OpacityMask="Black"/>
							<Image HorizontalAlignment="Left" Height="30.705" Margin="4.75,-1.332,0,0" VerticalAlignment="Top" Width="33.588" Source="/ERP;component/Images/button Basic Employees detils.png"/>
						</Grid>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
							</EventTrigger>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="FontSize" Value="10.667"/>
		</Style>
	</UserControl.Resources>
    <Grid Margin="0,0,-4,0" Background="#FFB7BFE0">
    	<Grid.ColumnDefinitions>
    		<ColumnDefinition Width="439*"/>
    		<ColumnDefinition Width="10*"/>
    	</Grid.ColumnDefinitions>

        <Grid HorizontalAlignment="Left" Width="285" Background="#FFB7BFE0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10*"/>
                <ColumnDefinition Width="80*"/>
                <ColumnDefinition Width="164*"/>
                <ColumnDefinition Width="31*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="7*"/>
                <RowDefinition Height="24*"/>
                <RowDefinition Height="10*"/>
                <RowDefinition Height="10*"/>
                <RowDefinition Height="24*"/>
                <RowDefinition Height="10*"/>
                <RowDefinition Height="24*"/>
                <RowDefinition Height="10*"/>
                <RowDefinition Height="375*"/>
            </Grid.RowDefinitions>
        	<Rectangle Grid.ColumnSpan="4" HorizontalAlignment="Left" Grid.Row="3" Width="899.667" Grid.RowSpan="5" OpacityMask="Black" Opacity="0.75" Height="78.296" VerticalAlignment="Top" Margin="0,0.02,-614.667,0">
        		<Rectangle.Fill>
        			<LinearGradientBrush EndPoint="0.099,2.843" StartPoint="0.991,4.25">
        				<GradientStop Color="Black"/>
        				<GradientStop Color="#FCFFFFFF"/>
        				<GradientStop Color="#FFB7BFE0"/>
        				<GradientStop Color="#FFF5F5F8" Offset="1"/>
        				<GradientStop Color="#00F9F9FB"/>
        				<GradientStop Color="#FFB7BFE0" Offset="0.831"/>
        				<GradientStop Color="White" Offset="0.907"/>
        				<GradientStop Color="#FFF5F5F8"/>
        				<GradientStop Color="#FFF5F5F8" Offset="0.681"/>
        				<GradientStop Color="White" Offset="0.778"/>
        				<GradientStop Color="#FFF5F5F8" Offset="0.766"/>
        				<GradientStop Color="#FFF5F5F8" Offset="0.646"/>
        			</LinearGradientBrush>
        		</Rectangle.Fill>
        	</Rectangle>
            <DataGrid Grid.Row="8" ItemsSource="{Binding Employees}" SelectedItem="{Binding CurrentEmployee}" Grid.ColumnSpan="4" AutoGenerateColumns="False" Style="{DynamicResource DataGridStyle1}" BorderBrush="#FF68839A">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Image" Width="80" />
                    <DataGridTextColumn Header="Emplyee Name" Width="200" Binding="{Binding first_name}"/>
                </DataGrid.Columns>
            </DataGrid>
        	<ComboBox Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Top" Width="164"  IsEditable="True" Grid.Row="4" Style="{DynamicResource ComboBoxStyle1}" BorderBrush="#FFAE02FF" Height="23" Margin="0,0.021,0,0"/>
        	<Label Content="Search Opt." Grid.Column="1" Grid.Row="4" VerticalAlignment="Top" Height="29" Foreground="#FF513838" FontStyle="Italic" RenderTransformOrigin="1.17,0.56" FontWeight="Bold" Grid.RowSpan="2"/>
        	<Label Content="Search" Grid.Column="1" Margin="0,0,27,0" Grid.Row="6" VerticalAlignment="Top" Height="22.796" Foreground="#FF513838" FontStyle="Italic" RenderTransformOrigin="0.5,0.5" FontWeight="Bold"/>
        	<TextBox x:Name="searchbox" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="{Binding Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="164" Grid.Column="2" Grid.Row="6" Style="{DynamicResource TextBoxStyle5}" BorderBrush="#7F000000"  SelectionBrush="#FF2B5668" Margin="0,0.279,0,0" >
        		<TextBox.Background>
        			<LinearGradientBrush EndPoint="0.294,0.394" StartPoint="0.483,0.452">
        				<GradientStop Color="Black" Offset="0"/>
        				<GradientStop Color="White" Offset="1"/>
        			</LinearGradientBrush>
        		</TextBox.Background>
        	</TextBox>
        	<Image Grid.Column="2" HorizontalAlignment="Left" Height="15.804" Margin="145.152,4.475,0,0" Grid.Row="6" VerticalAlignment="Top" Width="17.848" Source="1366799402_SEARCH.png" Opacity="0.5" RenderTransformOrigin="0.902,5.462"/>

        </Grid>
        <Grid HorizontalAlignment="Left" Height="78.654" Margin="285,41.388,0,0" VerticalAlignment="Top" Width="615" Background="#FF8499B4" Grid.ColumnSpan="2">
        	<Grid.RowDefinitions>
        		<RowDefinition Height="24*"/>
        		<RowDefinition Height="67*"/>
        	</Grid.RowDefinitions>
        </Grid>
        <Rectangle HorizontalAlignment="Left" Height="77.042" VerticalAlignment="Top" Width="615" Margin="285,41.388,0,0" Grid.ColumnSpan="2" Fill="#FFB7BFE0" Stroke="#FF6A6A6A"/>
        <Rectangle Fill="#FFF3EEEF" Height="58.376" Margin="290,48,548.333,0" Stroke="#FF4A6A77" VerticalAlignment="Top" RadiusY="3" RadiusX="3"/>
        <Image Margin="291.331,49.25,549.661,403.331" Source="..\Images\m(01-32)_gr.jpg"  Stretch="Fill" OpacityMask="Black">
        	<Image.ToolTip>
        		<ToolTip Content="Click here for change image"
        			ContentStringFormat="Ping: {0}ms" />
        	</Image.ToolTip>
        </Image>
        <Grid Name="Mdi" Margin="285,120.042,0,0" Grid.ColumnSpan="2" Background="#FF3C3F49"/>
        <Rectangle RenderTransformOrigin="0.22,0.174" Height="43" VerticalAlignment="Top" Grid.ColumnSpan="2">
        	<Rectangle.Fill>
        		<LinearGradientBrush EndPoint="0.233,-0.302" MappingMode="RelativeToBoundingBox" StartPoint="0.99,2.256">
        			<GradientStop Color="#FF2B5668" Offset="0.29"/>
        			<GradientStop Color="#FFB7BFE0" Offset="1"/>
        			<GradientStop Color="#F8889CB8" Offset="1"/>
        			<GradientStop Color="#B159788F" Offset="0.84"/>
        			<GradientStop Color="#FF2B5668" Offset="0.12"/>
        			<GradientStop Color="#D443687D" Offset="0.469"/>
        			<GradientStop Color="#FF2B5668" Offset="0.374"/>
        			<GradientStop Color="#FF2B5668" Offset="0.87"/>
        		</LinearGradientBrush>
        	</Rectangle.Fill>
        	<Rectangle.Effect>
        		<BlurEffect Radius="0"/>
        	</Rectangle.Effect>
        </Rectangle>
        <Label Content="Employee Master" Margin="12.717,9.927,0,0" HorizontalAlignment="Left" Width="276.957" Height="31.461" VerticalAlignment="Top" FontSize="14.667" FontWeight="Bold" Foreground="White">
        	<Label.Effect>
        		<DropShadowEffect ShadowDepth="3" BlurRadius="3"/>
        	</Label.Effect>
        </Label>
        <Image HorizontalAlignment="Left" Height="35" Margin="839.955,3,0,0" VerticalAlignment="Top" Width="40" Stretch="Fill" Source="employeemaster.png"/>
        <Button Content="Employee Details" Height="32.367" Margin="0,76.833,0,0" Style="{DynamicResource ButtonStyle11}" VerticalAlignment="Top" Foreground="#FF436878" Click="Button_Click_1" FontFamily="Segoe UI Semibold" HorizontalAlignment="Right" Width="177.88" Background="#FFEAE6E6" BorderThickness="1" Cursor="Hand" FontSize="13.333"/>
        <Button Content="Basic Employee Details" Height="32.367" Margin="0,76.833,194,0" Style="{DynamicResource ButtonStyle12}" VerticalAlignment="Top" Foreground="#FF436878" Click="Button_Click_2" FontFamily="Segoe UI Semibold" HorizontalAlignment="Right" Width="210.88" Background="#FFEAE6E6" BorderThickness="1" Cursor="Hand" FontSize="13.333"/>

    </Grid>
</UserControl>
