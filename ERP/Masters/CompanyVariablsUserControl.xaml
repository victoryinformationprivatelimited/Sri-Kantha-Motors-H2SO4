<UserControl x:Name="userControl" x:Class="ERP.Masters.CompanyVariablsUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             Height="458" Width="463" BorderThickness="2" RenderTransformOrigin="0.5,0.5" Foreground="{x:Null}">
	<UserControl.Resources>
		<SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
		<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
		<SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
		<Style x:Key="BorderStyle3" TargetType="{x:Type Border}">
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="Black" Offset="0"/>
						<GradientStop Color="#FEAEAEAE" Offset="1"/>
						<GradientStop Color="#FE5B5B5B" Offset="0"/>
						<GradientStop Color="#FE868686" Offset="0"/>
						<GradientStop Color="#FE888888" Offset="0"/>
						<GradientStop Color="#FE9D9D9D" Offset="0"/>
						<GradientStop Color="#FEA5A5A5" Offset="0"/>
						<GradientStop Color="#FEA9A9A9" Offset="0"/>
						<GradientStop Color="#FEABABAB" Offset="0"/>
						<GradientStop Color="#FEACACAC" Offset="0"/>
						<GradientStop Color="#FEACACAC" Offset="0"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="BorderBrush" Value="#FFDDF3D2"/>
			<Setter Property="CornerRadius" Value="2"/>
		</Style>
		<Style x:Key="TextBoxStyle5" TargetType="{x:Type TextBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnGotFocus1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
									<EasingColorKeyFrame KeyTime="0" Value="#FF68839A"/>
									<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF86C7FF"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnLostFocus1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
									<EasingColorKeyFrame KeyTime="0" Value="#FF86C7FF"/>
									<EasingColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF68839A" CornerRadius="3" Background="White" Padding="2">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="White" Margin="0" HorizontalAlignment="Left" Width="128.868"/>
						</Border>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="FocusManager.LostFocus" SourceName="PART_ContentHost">
								<BeginStoryboard x:Name="OnLostFocus1_BeginStoryboard" Storyboard="{StaticResource OnLostFocus1}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="FocusManager.GotFocus" SourceName="border">
								<BeginStoryboard Storyboard="{StaticResource OnGotFocus1}"/>
							</EventTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Opacity" TargetName="border" Value="0.56"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
						<Condition Property="IsSelectionActive" Value="false"/>
					</MultiTrigger.Conditions>
					<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
				</MultiTrigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="TextBoxStyle6" TargetType="{x:Type TextBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnGotFocus1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
									<EasingColorKeyFrame KeyTime="0" Value="White"/>
									<EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF336CE6"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
									<EasingDoubleKeyFrame KeyTime="0" Value="0.995"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="Storyboard1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
									<EasingColorKeyFrame KeyTime="0" Value="#FF336CE6"/>
									<EasingColorKeyFrame KeyTime="0:0:0.4" Value="White"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Style="{DynamicResource BorderStyle3}" BorderBrush="#FF918F8F" CornerRadius="3" Background="White" Padding="2">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderBrush="#FF3553D8" Margin="0,0,-3,0"/>
						</Border>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="FocusManager.GotFocus" SourceName="PART_ContentHost"/>
							<EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Opacity" TargetName="border" Value="0.56"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
							</Trigger>
							<EventTrigger RoutedEvent="FocusManager.LostFocus" SourceName="PART_ContentHost"/>
							<EventTrigger RoutedEvent="FocusManager.LostFocus" SourceName="PART_ContentHost">
								<BeginStoryboard x:Name="OnGotFocus1_BeginStoryboard" Storyboard="{StaticResource OnGotFocus1}"/>
							</EventTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
						<Condition Property="IsSelectionActive" Value="false"/>
					</MultiTrigger.Conditions>
					<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
				</MultiTrigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
		<SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
		<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
		<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
		<SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
		<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
		<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
		<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
		<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
		<Style x:Key="ContentPresenterStyle1" TargetType="{x:Type ContentPresenter}"/>
		<Style x:Key="BorderStyle2" TargetType="{x:Type Border}">
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="Black" Offset="0"/>
						<GradientStop Color="#7F084759" Offset="1"/>
						<GradientStop Color="#A505313E" Offset="0.056"/>
						<GradientStop Color="#8C063F4F" Offset="0.134"/>
						<GradientStop Color="#84074354" Offset="0"/>
						<GradientStop Color="#84074354" Offset="0"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="BorderBrush" Value="White"/>
		</Style>
		<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
									<EasingColorKeyFrame KeyTime="0" Value="#FF4A708D"/>
									<EasingColorKeyFrame KeyTime="0:0:0.6" Value="#FF3A80B6"/>
								</ColorAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="border">
									<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.5"/>
								</DoubleAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
									<EasingColorKeyFrame KeyTime="0" Value="White"/>
									<EasingColorKeyFrame KeyTime="0:0:0.6" Value="#FF0000E2"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
									<EasingColorKeyFrame KeyTime="0" Value="#FF3A80B6"/>
									<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF4A708D"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
									<EasingColorKeyFrame KeyTime="0" Value="#FF0000E2"/>
									<EasingColorKeyFrame KeyTime="0:0:0.5" Value="White"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="Storyboard1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
									<EasingColorKeyFrame KeyTime="0" Value="#FF4A708D"/>
									<EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF3A80B6"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
									<EasingColorKeyFrame KeyTime="0" Value="White"/>
									<EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF0000E2"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnGotMouseCapture1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
									<EasingColorKeyFrame KeyTime="0" Value="#FF3A80B6"/>
									<EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF3A80B6"/>
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
									<EasingColorKeyFrame KeyTime="0" Value="White"/>
									<EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF0000E2"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="3" Style="{DynamicResource BorderStyle2}" Background="#FF466A7E" Opacity="0.74" BorderBrush="White" Cursor="Hand">
							<Border.Effect>
								<BlurEffect Radius="0.5" RenderingBias="Quality" KernelType="Box"/>
							</Border.Effect>
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Right" Margin="0,0.665,2.335,-1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" OpacityMask="#7F000000" Style="{DynamicResource ContentPresenterStyle1}" Height="Auto" Width="42.214" RenderTransformOrigin="0.5,0.5"/>
						</Border>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.GotMouseCapture" SourceName="contentPresenter">
								<BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard" Storyboard="{StaticResource OnGotMouseCapture1}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="contentPresenter">
								<BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard1" Storyboard="{StaticResource OnMouseEnter1}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="contentPresenter">
								<BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="contentPresenter"/>
							<Trigger Property="IsDefaulted" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
							<Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderBrush" Value="#FF688CAF"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGrid}">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
							<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Foreground="#FF513838" FontFamily="Segoe UI Semibold">
								<ScrollViewer.Template>
									<ControlTemplate TargetType="{x:Type ScrollViewer}">
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="*"/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>
											<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
											<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Foreground="#FF4D85C3"/>
											<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
											<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
											<Grid Grid.Column="1" Grid.Row="2">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
													<ColumnDefinition Width="*"/>
												</Grid.ColumnDefinitions>
												<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
											</Grid>
										</Grid>
									</ControlTemplate>
								</ScrollViewer.Template>
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</ScrollViewer>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsGrouping" Value="true"/>
						<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
					</MultiTrigger.Conditions>
					<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
				</MultiTrigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
			<Setter Property="FlowDirection" Value="LeftToRight"/>
		</Style>
		<Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseEnter2">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave2">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseEnter3">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
									<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave3">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
									<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="InvalidFocused"/>
									<VisualState x:Name="InvalidUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
							<Image x:Name="image" Margin="2.662,2.339,3.247,2.254" Source="/ERP;component/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
						</Grid>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
							</EventTrigger>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
							</EventTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle6" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
									<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
									<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseEnter2">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave2">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseEnter3">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
									<EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave3">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
									<EasingColorKeyFrame KeyTime="0" Value="Black"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="InvalidFocused"/>
									<VisualState x:Name="InvalidUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="#FFE4E4E4" Offset="0.992"/>
										<GradientStop Color="#FFEAE7E7"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
							<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Label x:Name="label" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="44.833" Margin="11.335,0,0,0" Foreground="#FF5F5F5F"/>
						</Grid>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
							</EventTrigger>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
							</EventTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle7" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
									<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
									<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseEnter2">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave2">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseEnter3">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
									<EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave3">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
									<EasingColorKeyFrame KeyTime="0" Value="Black"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="InvalidFocused"/>
									<VisualState x:Name="InvalidUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="#FFE4E4E4" Offset="0.992"/>
										<GradientStop Color="#FFEAE7E7"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
							<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Label x:Name="label" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="37.5" Margin="13.666,0,0,0" Foreground="#FF5F5F5F"/>
						</Grid>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
							</EventTrigger>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
							</EventTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle8" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
									<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
									<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseEnter2">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave2">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseEnter3">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
									<EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave3">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
									<EasingColorKeyFrame KeyTime="0" Value="Black"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="InvalidFocused"/>
									<VisualState x:Name="InvalidUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="#FFE4E4E4" Offset="0.992"/>
										<GradientStop Color="#FFEAE7E7"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
							<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Label x:Name="label" Content="New" HorizontalAlignment="Left" VerticalAlignment="Top" Width="37.5" Margin="13.666,0,0,0" Foreground="#FF5F5F5F"/>
						</Grid>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
							</EventTrigger>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
							</EventTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
									<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
									<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseEnter2">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave2">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseEnter3">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
									<EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave3">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
									<EasingColorKeyFrame KeyTime="0" Value="Black"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="InvalidFocused"/>
									<VisualState x:Name="InvalidUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="#FFE4E4E4" Offset="0.992"/>
										<GradientStop Color="#FFEAE7E7"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
							<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Label x:Name="label" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="44.833" Margin="11.335,0,0,0" Foreground="#FF5F5F5F"/>
						</Grid>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
							</EventTrigger>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
							</EventTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
									<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
									<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseEnter2">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave2">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
									<EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseEnter3">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
									<EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave3">
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
									<EasingColorKeyFrame KeyTime="0" Value="Black"/>
									<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="InvalidFocused"/>
									<VisualState x:Name="InvalidUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="#FFE4E4E4" Offset="0.992"/>
										<GradientStop Color="#FFEAE7E7"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
							<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Label x:Name="label" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="37.5" Margin="13.666,0,0,0" Foreground="#FF5F5F5F"/>
						</Grid>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
							</EventTrigger>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
							<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
								<BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
							</EventTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Storyboard x:Key="OnLoaded1">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="userControl">
				<EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="userControl">
				<EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="OnLoaded2">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="userControl">
				<EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="userControl">
				<EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
	</UserControl.Resources>
	<UserControl.Triggers>
		<EventTrigger RoutedEvent="FrameworkElement.Loaded">
			<BeginStoryboard x:Name="OnLoaded2_BeginStoryboard" Storyboard="{StaticResource OnLoaded2}"/>
		</EventTrigger>
	</UserControl.Triggers>
	<UserControl.RenderTransform>
		<TransformGroup>
			<ScaleTransform/>
			<SkewTransform/>
			<RotateTransform/>
			<TranslateTransform/>
		</TransformGroup>
	</UserControl.RenderTransform>
    <Grid Background="#FFF5F5F8" Margin="24,20,19,17">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="26*"/>
            <RowDefinition Height="8*"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="30*"/>
            <RowDefinition Height="20*"/>
            <RowDefinition Height="33*"/>
            <RowDefinition Height="11*"/>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="34*"/>
            <RowDefinition Height="22*"/>
            <RowDefinition Height="6*"/>
            <RowDefinition Height="9*"/>
            <RowDefinition Height="69*"/>
            <RowDefinition Height="13*"/>
            <RowDefinition Height="13*"/>
            <RowDefinition Height="26*"/>
            <RowDefinition Height="6*"/>
            <RowDefinition Height="25*"/>
            <RowDefinition Height="8*"/>
            <RowDefinition Height="25*"/>
            <RowDefinition Height="9*"/>
            <RowDefinition Height="6*"/>
            <RowDefinition Height="0*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="41*"/>
            <ColumnDefinition Width="54*"/>
            <ColumnDefinition Width="98*"/>
            <ColumnDefinition Width="23*"/>
            <ColumnDefinition Width="29*"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="59*"/>
            <ColumnDefinition Width="28*"/>
            <ColumnDefinition Width="40*"/>
            <ColumnDefinition Width="19*"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="6*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Rectangle Fill="#FF233555" HorizontalAlignment="Left" Height="449.432" Margin="-16.25,-16.099,-16.104,-16.334" RadiusY="4" RadiusX="4" Stroke="#7E191818" StrokeThickness="16" VerticalAlignment="Top" Width="448.354" Grid.RowSpan="26" Grid.ColumnSpan="15"/>

        <Rectangle Grid.RowSpan="5" Grid.ColumnSpan="15" Margin="0,0,0.002,3.666">
        	<Rectangle.Fill>
        		<LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
        			<GradientStop Color="#FF18233A" Offset="0"/>
        			<GradientStop Color="#FF18233A" Offset="1"/>
        			<GradientStop Color="#FF0C1338" Offset="0.659"/>
        			<GradientStop Color="#FF46508B" Offset="0.328"/>
        		</LinearGradientBrush>
        	</Rectangle.Fill>
        </Rectangle>

        <Rectangle OpacityMask="White" Opacity="0.75" Stroke="#FFB1B4B6" Margin="0,0.324,-0.916,1.176" Grid.Row="9" Grid.RowSpan="5" Grid.ColumnSpan="15">
        	<Rectangle.Fill>
        		<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        			<LinearGradientBrush.RelativeTransform>
        				<TransformGroup>
        					<ScaleTransform CenterY="0.5" CenterX="0.5"/>
        					<SkewTransform CenterY="0.5" CenterX="0.5"/>
        					<RotateTransform Angle="-92" CenterY="0.5" CenterX="0.5"/>
        					<TranslateTransform/>
        				</TransformGroup>
        			</LinearGradientBrush.RelativeTransform>
        			<GradientStop Color="#FF7A7A7A" Offset="0"/>
        			<GradientStop Color="#FF7A7A7A" Offset="1"/>
        			<GradientStop Color="#FFD1D1D3" Offset="0.509"/>
        			<GradientStop Color="#FFD1D1D3" Offset="0.612"/>
        		</LinearGradientBrush>
        	</Rectangle.Fill>
        </Rectangle>
        <Rectangle Margin="0,1.357,0.002,15.511" Grid.Row="4" Grid.RowSpan="3" Grid.ColumnSpan="15">
        	<Rectangle.Fill>
        		<LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
        			<GradientStop Color="#FF7A7A7A" Offset="0"/>
        			<GradientStop Color="#FF7A7A7A" Offset="1"/>
        			<GradientStop Color="#FFD1D1D3" Offset="0.578"/>
        			<GradientStop Color="#FFD1D1D3" Offset="0.431"/>
        		</LinearGradientBrush>
        	</Rectangle.Fill>
        </Rectangle>
        <Rectangle OpacityMask="White" Opacity="0.75" Height="67.503" VerticalAlignment="Top" Fill="#FF10295F" Margin="0,0.35,0.002,0" Grid.Row="15" Grid.ColumnSpan="15"/>

        
        <CheckBox Content="Is Active" Margin="1.153,1.075,11.748,16.834" IsChecked="{Binding CurrentCompanyVariable.Is_Active, FallbackValue=false}" Foreground="White" FontFamily="Segoe UI Semibold" Grid.Row="10" Grid.RowSpan="2" Grid.Column="9" Grid.ColumnSpan="3"/>

        <Grid Margin="0.934,10.313,1.523,0" Height="41.95" VerticalAlignment="Top" Grid.Row="11" Grid.RowSpan="2" Grid.Column="9" Grid.ColumnSpan="3">
        	<Grid.RowDefinitions>
        		<RowDefinition Height="5*"/>
        		<RowDefinition Height="16*"/>
        		<RowDefinition Height="5*"/>
        		<RowDefinition Height="16*"/>
        	</Grid.RowDefinitions>
            <RadioButton IsChecked="{Binding CurrentCompanyVariable.Is_Deduct, FallbackValue=false}" Content="Is Deduct" Margin="1.485,0.711,1.058,0.31" Foreground="White" FontFamily="Segoe UI Semibold" Grid.Row="1"/>
            <RadioButton IsChecked="{Binding CurrentCompanyVariable.Is_Benifit, FallbackValue=false}" Content="Is Benifit" Margin="1.834,1.31,-10.941,-0.109" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Foreground="White" Grid.Row="3"/>
        </Grid>
        <Grid Margin="4,10.1,7.727,0" Height="54.75" VerticalAlignment="Top" Grid.Row="15" Grid.ColumnSpan="5">
        	<Grid.ColumnDefinitions>
        		<ColumnDefinition Width="3*"/>
        		<ColumnDefinition Width="187*"/>
        	</Grid.ColumnDefinitions>
        	<Grid.RowDefinitions>
        		<RowDefinition Height="8*"/>
        		<RowDefinition Height="18*"/>
        		<RowDefinition Height="3*"/>
        		<RowDefinition Height="17*"/>
        		<RowDefinition Height="9*"/>
        	</Grid.RowDefinitions>

            <RadioButton IsChecked="{Binding CurrentCompanyVariable.isCalculateForBasicSalary}" Content="Calculate For Basic Salary" Margin="1,1.579,10,1.339" FontFamily="Segoe UI Semibold" Foreground="White" Grid.Row="1" Grid.Column="1"/>
            <RadioButton IsChecked="{Binding CurrentCompanyVariable.isCalculatewithBasicPlusCompanyRules}" Content="Calculate With Company Rule" HorizontalAlignment="Left" Margin="1,0.398,-2.065,1.525" Width="188.334" Foreground="White" FontFamily="Segoe UI Semibold" Grid.Row="3" Grid.Column="1"/>

        </Grid>
        <Grid Margin="91.88,0.012,0.002,0" Background="#FFCDCDCD" Height="68.258" VerticalAlignment="Top" Grid.Row="15" Grid.Column="4" Grid.ColumnSpan="11">
        	<Grid.ColumnDefinitions>
        		<ColumnDefinition Width="8*"/>
        		<ColumnDefinition Width="23*"/>
        		<ColumnDefinition Width="189*"/>
        	</Grid.ColumnDefinitions>
        	<Grid.RowDefinitions>
        		<RowDefinition Height="5*"/>
        		<RowDefinition Height="17*"/>
        		<RowDefinition Height="3*"/>
        		<RowDefinition Height="16*"/>
        		<RowDefinition Height="3*"/>
        		<RowDefinition Height="19*"/>
        		<RowDefinition Height="5*"/>
        	</Grid.RowDefinitions>

            <RadioButton IsEnabled="{Binding IsSlapCalc}" IsChecked="{Binding CurrentCompanyVariable.isSlapCalcution, FallbackValue=false}" Content="Calculate Slap Calculation" Margin="2.275,0.826,21.826,0.235" Foreground="#FF513838" FontFamily="Segoe UI Semibold" Grid.Row="3" Grid.Column="2"/>
            <RadioButton IsEnabled="{Binding IsSlapCalc}" IsChecked="{Binding CurrentCompanyVariable.isFlatSlapCalculation, FallbackValue=false}" Content="Calculate Flat Slap Calculation" Margin="2.275,1.059,4.826,1.013" FontFamily="Segoe UI Semibold" Foreground="#FF513838" Grid.Row="5" Grid.Column="2"/>
            <CheckBox  IsChecked="{Binding IsSlapCalc, FallbackValue=false}" Content="Slap CalCulation" Margin="1.631,0.991,104.311,0.974" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>

        </Grid>
        <DataGrid ItemsSource="{Binding CompanyVariables}" AutoGenerateColumns="False" SelectedValue="{Binding CurrentCompanyVariable, Mode=TwoWay}" BorderBrush="#FFB1B4B6" Foreground="#FFB1B4B6" Style="{DynamicResource DataGridStyle1}" Margin="0.5,2.075,10.362,6.657" Grid.Row="17" Grid.RowSpan="7" Grid.Column="2" Grid.ColumnSpan="8">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Variable Name" Binding="{Binding variable_Name}" Width="200"/>
                <DataGridTextColumn Header="Variable Value" Binding="{Binding variable_Value}" Width="120"/>
            </DataGrid.Columns>
        </DataGrid>
        <Button x:Name="button1_Copy2" Content="New " Style="{DynamicResource ButtonStyle8}" Command="{Binding NewButton}"  Foreground="#FF5F5F5F" RenderTransformOrigin="0.606,1.038" FontFamily="Segoe UI Semibold" Margin="0.223,0.068,3.779,0" Grid.Row="18" Grid.Column="10" Grid.ColumnSpan="3" Height="25" VerticalAlignment="Top">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button x:Name="button1_Copy" Content="Save " Style="{DynamicResource ButtonStyle3}" Command="{Binding SaveButton}" Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Margin="0.158,0.109,3.844,0.829" Grid.Row="20" Grid.Column="10" Grid.ColumnSpan="3">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button x:Name="button1_Copy1" Content="Delete " Margin="0.04,0.053,3.962,8.865" Style="{DynamicResource ButtonStyle2}" Command="{Binding DeleteButton}" Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" Grid.Row="22" Grid.Column="10" Grid.ColumnSpan="3" Height="25" Grid.RowSpan="2">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Label  Visibility="{Binding IsVisible}" Content="%" HorizontalAlignment="Left" Margin="32.915,0.263,0,0" VerticalAlignment="Top" Width="22.982" Background="{x:Null}" FontSize="14" FontStretch="Expanded" FontWeight="Bold" Foreground="White" Height="29" Grid.Row="11" Grid.Column="8"/>
        <Label Content="Company Variable Master" Margin="28.167,4.902,15.834,3.975" FontSize="13.333" FontWeight="Bold" Foreground="White" Grid.Row="1" Grid.RowSpan="3" Grid.Column="2" Grid.ColumnSpan="4">
        	<Label.Effect>
        		<DropShadowEffect ShadowDepth="3" BlurRadius="3"/>
        	</Label.Effect>
        </Label>
        <TextBox x:Name="searchbox" TextWrapping="Wrap" Text="{Binding Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle5}" BorderBrush="#7F000000" TextChanged="searchbox_TextChanged_1" SelectionBrush="#FF2B5668" Margin="1.415,3.429,4.585,3.789" Grid.Row="5" Grid.Column="8" Grid.ColumnSpan="6" />
        <Label Content="Variable Name" Margin="1.25,2.886,2.817,3.036" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" Grid.Row="7" Grid.Column="2" Grid.ColumnSpan="2"/>
        <Label Content="Variable Value" Margin="0.5,2.93,4.817,3.322" Foreground="White" RenderTransformOrigin="0.111,0.384" FontFamily="Segoe UI Semibold" Grid.Row="11" Grid.Column="2" Grid.ColumnSpan="2"/>
    	<TextBox TextWrapping="Wrap" Text="{Binding CurrentCompanyVariable.variable_Name}" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="1.882,5.055,2.514,4.867" Grid.Row="7" Grid.Column="4" Grid.ColumnSpan="5"/>
        <TextBox TextWrapping="Wrap" Style="{DynamicResource TextBoxStyle6}" BorderBrush="{x:Null}" Foreground="Black" Margin="0.129,6.265,7.871,4.654" Grid.Row="11" Grid.Column="4" Grid.ColumnSpan="5"/>
        <CheckBox Content="Is Pracentage" Margin="0.882,2.978,3.727,0" IsChecked="{Binding IsPracentage}" FontFamily="Segoe UI Semibold" Foreground="White" Height="15.285" VerticalAlignment="Top" Grid.Row="12" Grid.Column="4"/>
        <Label Content="Search" Margin="1.506,2.323,1.183,4.544" Foreground="#FF513838" FontStyle="Italic" FontWeight="Bold" Grid.Row="5" Grid.Column="5" Grid.ColumnSpan="2"/>
        
        
        
        
        
                      
      
        <Image Margin="2.833,0.758,17.834,0.836" Source="/ERP;component/Images/Payroll/Form/Employee Company Variables.png" Stretch="Fill" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"/>
        <Image Margin="2.339,10.759,3.169,3.395"  Opacity="0.5" Source="/ERP;component/Images/1366799402_SEARCH.png" Grid.Row="5" Grid.Column="11" Grid.ColumnSpan="2"/>
        <Button x:Name="button2" Content="Button" Margin="6.133,2.081,1.866,8.855" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" Click="button2_Click" Grid.Row="2" Grid.Column="11" Grid.ColumnSpan="2" Width="15" Height="15" >
        	<Button.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Button.RenderTransform>
        </Button>

    </Grid>
</UserControl>
