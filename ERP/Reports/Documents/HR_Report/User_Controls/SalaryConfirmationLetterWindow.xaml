<Window x:Class="ERP.Reports.Documents.HR_Report.User_Controls.SalaryConfirmationLetterWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="SalaryConfirmationLetterWindow" Width="603.883" Height="488.743" Topmost="True" AllowsTransparency="True" WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterOwner">
    <Grid>
        <UserControl Margin="0,0.095,-0.342,0.095">
            <UserControl.Resources>
                <Style x:Key="ImageStyle2" TargetType="{x:Type Image}">
                    <Setter Property="FlowDirection" Value="LeftToRight"/>
                </Style>
                <Style x:Key="ButtonStyle23" TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <ControlTemplate.Resources>
                                    <Storyboard x:Key="OnMouseEnter1">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="OnMouseLeave1">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="OnMouseEnter2">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="OnMouseLeave2">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="OnMouseEnter3">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="OnMouseLeave3">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <Grid x:Name="grid" Margin="-2.497,-3.17,-2.497,-1.335">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="MouseOver"/>
                                            <VisualState x:Name="Pressed"/>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ValidationStates">
                                            <VisualState x:Name="InvalidFocused"/>
                                            <VisualState x:Name="InvalidUnfocused"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="rectangle" Opacity="0" Stroke="White" Margin="-2.995,-3.083,-2.995,-3.006" Fill="{x:Null}" Width="Auto" Height="Auto"/>
                                    <Image x:Name="image" Margin="2.662,2.339,3.247,2.254" Source="/ERP;component/Images/appbar.close.png" Stretch="Fill" Width="Auto" Height="Auto" Style="{DynamicResource ImageStyle2}" OpacityMask="#FF010000" Opacity="0.5"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                        <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                        <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                        <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                                    </EventTrigger>
                                    <Trigger Property="IsFocused" Value="True"/>
                                    <Trigger Property="IsDefaulted" Value="True"/>
                                    <Trigger Property="IsMouseOver" Value="True"/>
                                    <Trigger Property="IsPressed" Value="True"/>
                                    <Trigger Property="IsEnabled" Value="False"/>
                                    <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                        <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                                    </EventTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <ControlTemplate.Resources>
                                    <Storyboard x:Key="OnMouseEnter1">
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF0097FF"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="OnMouseLeave1">
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF017ACD"/>
                                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFBDBCBC"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="OnMouseEnter2">
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFBDBCBC"/>
                                            <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D78C2"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="OnMouseLeave2">
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF0D78C2"/>
                                            <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFBDBCBC"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="OnMouseEnter3">
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF5F5F5F"/>
                                            <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Black"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="OnMouseLeave3">
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
                                            <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                            <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF5F5F5F"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <Grid x:Name="grid">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="MouseOver"/>
                                            <VisualState x:Name="Pressed"/>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ValidationStates">
                                            <VisualState x:Name="InvalidFocused"/>
                                            <VisualState x:Name="InvalidUnfocused"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="rectangle" Width="65" VerticalAlignment="Top" StrokeThickness="1" Stroke="#FFBDBCBC" RadiusX="0" RadiusY="0" Height="25" HorizontalAlignment="Left">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.506,0.305" StartPoint="0.501,1.026">
                                                <GradientStop Color="White" Offset="0"/>
                                                <GradientStop Color="#FFE4E4E4" Offset="0.992"/>
                                                <GradientStop Color="#FFEAE7E7"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Width="61.398" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0.75" Margin="1.668,2.085,0,14.668" Height="Auto" HorizontalAlignment="Left" Fill="#FFFFF8F8"/>
                                    <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                                    <Label x:Name="label" Content="Print" HorizontalAlignment="Left" VerticalAlignment="Top" Width="44.833" Margin="11.335,0,0,0" Foreground="#FF5F5F5F"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                        <BeginStoryboard x:Name="OnMouseLeave3_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave3}"/>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                        <BeginStoryboard x:Name="OnMouseEnter3_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter3}"/>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                                        <BeginStoryboard x:Name="OnMouseLeave2_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave2}"/>
                                    </EventTrigger>
                                    <Trigger Property="IsFocused" Value="True"/>
                                    <Trigger Property="IsDefaulted" Value="True"/>
                                    <Trigger Property="IsMouseOver" Value="True"/>
                                    <Trigger Property="IsPressed" Value="True"/>
                                    <Trigger Property="IsEnabled" Value="False"/>
                                    <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                                        <BeginStoryboard x:Name="OnMouseEnter2_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter2}"/>
                                    </EventTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </UserControl.Resources>
            <Grid Background="#FF233555" Height="489" VerticalAlignment="Top" Margin="0,0,-14,0" HorizontalAlignment="Left" Width="604">
                <Rectangle Height="33" VerticalAlignment="Top" MouseLeftButtonDown="Rectangle_MouseLeftButtonDown_1">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.645,0.387" StartPoint="0.309,0.509">
                            <GradientStop Color="#FF18233A" Offset="0"/>
                            <GradientStop Color="#FF18233A" Offset="1"/>
                            <GradientStop Color="#FF4C5691" Offset="0.518"/>
                            <GradientStop Color="#FF4C5691" Offset="0.455"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <Label Content="Salary Confirmation Form" HorizontalAlignment="Left" Width="238" Height="32" VerticalAlignment="Top" FontSize="14.667" FontWeight="Bold" Foreground="White" Margin="26,0,0,0" MouseLeftButtonDown="Label_MouseLeftButtonDown_1">
                    <Label.Effect>
                        <DropShadowEffect ShadowDepth="3" BlurRadius="3"/>
                    </Label.Effect>
                </Label>
                <Button x:Name="button2_Copy" Content="Button" Margin="0,8,6,0" Style="{DynamicResource ButtonStyle23}" RenderTransformOrigin="0.5,0.5" Height="18" VerticalAlignment="Top" HorizontalAlignment="Right" Width="22" Click="button2_Copy_Click_1"  >
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>
                </Button>
                <Label Content="Effect Date" HorizontalAlignment="Left" Margin="39,46,0,0" VerticalAlignment="Top" Width="117" Height="32" Foreground="White"/>
                <DatePicker  SelectedDate="{Binding DateSelected, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="175,47,0,0" VerticalAlignment="Top" Width="285" Height="24" />
                <Label Content="Manager Designation" HorizontalAlignment="Left" Margin="39,76,0,0" VerticalAlignment="Top" Width="126" Height="29" Foreground="White"/>
                <ComboBox ItemsSource="{Binding Designations}" SelectedItem="{Binding CurrentDesignation}" DisplayMemberPath="designation" SelectedValuePath="designation_id"  HorizontalAlignment="Left" Margin="175,77,0,0" VerticalAlignment="Top" Width="285" Height="23"/>
                <Button Command="{Binding PrintBtn}" Content="Button" HorizontalAlignment="Left" Margin="494,453,0,0" VerticalAlignment="Top" Width="75" Height="29" Style="{DynamicResource ButtonStyle2}"  Foreground="#FF5F5F5F" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI Semibold" />
                <DataGrid AutoGenerateColumns="False" IsReadOnly="True" HorizontalAlignment="Left" Margin="38,275,0,0" VerticalAlignment="Top" Height="169" Width="520" ItemsSource="{Binding Employee}" SelectedItem="{Binding CurrentEmployee}">
                    <DataGrid.Columns>
                        <DataGridTextColumn  Header="Employee No" Width="90" Binding="{Binding emp_id}" />
                        <DataGridTextColumn Header="First Name" Width="*" Binding="{Binding first_name}"/>
                        <DataGridTextColumn Header="Second Name" Width="*" Binding="{Binding second_name}"/>
                        <DataGridTextColumn Header="Designation" Width="*" Binding="{Binding designation}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <DataGrid ItemsSource="{Binding Manager}" SelectedItem="{Binding CurrentManager}" AutoGenerateColumns="False" IsReadOnly="True" HorizontalAlignment="Left" Margin="39,110,0,0" VerticalAlignment="Top" Height="96" Width="519" >
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Manager First Name" Width="200" Binding="{Binding first_name}"/>
                        <DataGridTextColumn Header="Manager Second Name" Width="*" Binding="{Binding second_name}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <ComboBox x:Name="Filtercombo" SelectedIndex="{Binding Index}" HorizontalAlignment="Left" Margin="109,237,0,0" VerticalAlignment="Top" Width="155"/>
                <TextBox HorizontalAlignment="Left" Height="23" Margin="406,236,0,0" TextWrapping="Wrap" Text="{Binding SearchString, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="152"/>
                <Label Content="Filter By" HorizontalAlignment="Left" Margin="39,234,0,0" VerticalAlignment="Top" Foreground="White"/>
                <Label Content="Search" HorizontalAlignment="Left" Margin="352,233,0,0" VerticalAlignment="Top" Foreground="White"/>

            </Grid>
        </UserControl>

    </Grid>
</Window>
